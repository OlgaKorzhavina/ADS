"use strict";var burger=document.querySelector(".burger"),burgerClose=document.querySelector(".burger-close"),menu=document.querySelector(".header-list"),menuLinks=document.querySelectorAll(".header-list__item");burger.addEventListener("click",(function(){burgerClose.classList.toggle("burger-close--active"),menu.classList.toggle("header-list--active"),document.body.classList.toggle("stop-scroll")})),burgerClose.addEventListener("click",(function(){burgerClose.classList.toggle("burger-close--active"),menu.classList.toggle("header-list--active"),document.body.classList.toggle("stop-scroll")})),menuLinks.forEach((function(e){e.addEventListener("click",(function(){burgerClose.classList.remove("burger-close--active"),menu.classList.remove("header-list--active"),document.body.classList.remove("stop-scroll")}))}));var searchImg=document.querySelector(".header__search__img"),searchInput=document.querySelector(".search-form__input"),closeBtn=document.querySelector(".search-form__close");searchImg.addEventListener("click",(function(e){e.preventDefault(),searchInput.classList.add("search-form__input--active"),closeBtn.classList.add("search-form__close--active"),searchImg.classList.add("header__search__img--active")})),closeBtn.addEventListener("click",(function(e){e.preventDefault(),searchInput.classList.remove("search-form__input--active"),closeBtn.classList.remove("search-form__close--active"),searchImg.classList.remove("header__search__img--active")}));var a=1;function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,t||"default");if("object"!==_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var i=0,o=function(){};return{s:o,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,a=!0,n=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){n=!0,l=e},f:function(){try{a||null==r.return||r.return()}finally{if(n)throw l}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,i=new Array(t);r<t;r++)i[r]=e[r];return i}console.log(a),document.addEventListener("DOMContentLoaded",(function(){var e=new JustValidate(".form"),t=new JustValidate(".contact-application__form");e.addField(".mail",[{rule:"required",errorMessage:"Поле нужно заполнить"},{rule:"email",errorMessage:"Вы не корректно ввели email"}]),t.addField(".name",[{rule:"minLength",value:3,errorMessage:"Не достаточное количество символов"},{rule:"maxLength",value:5,errorMessage:"Вы ввели больше чем положено"}]).addField(".email",[{rule:"required",errorMessage:"Поле нужно заполнить"},{rule:"email",errorMessage:"Вы не корректно ввели email"}])}));var B=Object.defineProperty,V=Object.getOwnPropertySymbols,W=Object.prototype.hasOwnProperty,Y=Object.prototype.propertyIsEnumerable,L=function(e,t,r){return t in e?B(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r},x=function(e,t){for(var r in t||(t={}))W.call(t,r)&&L(e,r,t[r]);if(V){var i,o=_createForOfIteratorHelper(V(t));try{for(o.s();!(i=o.n()).done;){r=i.value;Y.call(t,r)&&L(e,r,t[r])}}catch(e){o.e(e)}finally{o.f()}}return e},d=function(e,t,r){return L(e,"symbol"!=_typeof(t)?t+"":t,r),r};!function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).JustValidate=t()}(void 0,(function(){var e,t,r,i,o=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,l=/^[0-9]+$/,a=/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/,n=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,s=function(e){var t=e;return"string"==typeof e&&(t=e.trim()),!t},u=function(e){return o.test(e)},c=function(e,t){return e.length>t},f=function(e,t){return e.length<t},h=function(e){return l.test(e)},v=function(e){return a.test(e)},m=function(e){return n.test(e)},p=function(e,t){return e>t},b=function(e,t){return e<t};(t=e||(e={})).Required="required",t.Email="email",t.MinLength="minLength",t.MaxLength="maxLength",t.Password="password",t.Number="number",t.MaxNumber="maxNumber",t.MinNumber="minNumber",t.StrongPassword="strongPassword",t.CustomRegexp="customRegexp",function(e){e.Required="required"}(r||(r={})),function(e){e.Label="label",e.LabelArrow="labelArrow"}(i||(i={}));var y=function(e){return!!e&&"function"==typeof e.then},g={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",focusInvalidField:!0,lockForm:!0,testingMode:!1},k=function(){function t(e,r,i){var o=this;_classCallCheck(this,t),d(this,"form",null),d(this,"fields",{}),d(this,"groupFields",{}),d(this,"errors",{}),d(this,"isValid",!1),d(this,"isSubmitted",!1),d(this,"globalConfig",g),d(this,"errorLabels",[]),d(this,"eventListeners",[]),d(this,"dictLocale",[]),d(this,"currentLocale"),d(this,"customStyleTags",{}),d(this,"onSuccessCallback"),d(this,"onFailCallback"),d(this,"tooltips",[]),d(this,"lastScrollPosition"),d(this,"isScrollTick"),d(this,"refreshAllTooltips",(function(){o.tooltips.forEach((function(e){e.refresh()}))})),d(this,"handleDocumentScroll",(function(){o.lastScrollPosition=window.scrollY,o.isScrollTick||(window.requestAnimationFrame((function(){o.refreshAllTooltips(),o.isScrollTick=!1})),o.isScrollTick=!0)})),d(this,"formSubmitHandler",(function(e){e.preventDefault(),o.isSubmitted=!0,o.globalConfig.lockForm&&o.lockForm(),o.validate().then((function(){var t,r;o.isValid?null==(t=o.onSuccessCallback)||t.call(o,e):null==(r=o.onFailCallback)||r.call(o,o.fields),o.globalConfig.lockForm&&o.unlockForm()}))})),d(this,"handleFieldChange",(function(e){var t,r;for(var i in o.fields){var l=o.fields[i];if(l.elem===e){t=l,r=i;break}}!t||!r||o.validateField(r,t,!0)})),d(this,"handleGroupChange",(function(e){var t,r;for(var i in o.groupFields){var l=o.groupFields[i];if(l.elems.find((function(t){return t===e}))){t=l,r=i;break}}!t||!r||o.validateGroup(r,t)})),d(this,"handlerChange",(function(e){!e.target||(o.handleFieldChange(e.target),o.handleGroupChange(e.target),o.renderErrors())})),this.initialize(e,r,i)}return _createClass(t,[{key:"initialize",value:function(e,t,r){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=g,this.errorLabels=[],this.eventListeners=[],this.customStyleTags={},this.tooltips=[],"string"==typeof e){var o=document.querySelector(e);if(!o)throw Error("Form with ".concat(e," selector not found! Please check the form selector"));this.setForm(o)}else{if(!(e instanceof HTMLFormElement))throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");this.setForm(e)}if(this.globalConfig=x(x({},g),t),r&&(this.dictLocale=r),this.isTooltip()){var l=document.createElement("style");l.textContent=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",this.customStyleTags[i.Label]=document.head.appendChild(l),this.addListener("scroll",document,this.handleDocumentScroll)}}},{key:"getLocalisedString",value:function(e){var t;return this.currentLocale&&this.dictLocale.length&&(null==(t=this.dictLocale.find((function(t){return t.key===e})))?void 0:t.dict[this.currentLocale])||e}},{key:"getFieldErrorMessage",value:function(t){return this.getLocalisedString(t.errorMessage)||function(t,r){switch(t){case e.Required:return"The field is required";case e.Email:return"Email has invalid format";case e.MaxLength:return"The field must contain a maximum of :value characters".replace(":value",String(r));case e.MinLength:return"The field must contain a minimum of :value characters".replace(":value",String(r));case e.Password:return"Password must contain minimum eight characters, at least one letter and one number";case e.Number:return"Value should be a number";case e.StrongPassword:return"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character";case e.MaxNumber:return"Number should be less or equal than :value".replace(":value",String(r));case e.MinNumber:return"Number should be more or equal than :value".replace(":value",String(r));default:return"Value is incorrect"}}(t.rule,t.value)}},{key:"getGroupErrorMessage",value:function(e){return this.getLocalisedString(e.errorMessage)||function(e){return e===r.Required?"The field is required":"Group is incorrect"}(e.rule)}},{key:"setFieldInvalid",value:function(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t)}},{key:"setGroupInvalid",value:function(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}},{key:"setGroupValid",value:function(e){this.groupFields[e].isValid=!0}},{key:"getElemValue",value:function(e){return"checkbox"===e.type?e.checked:e.value}},{key:"validateGroupRule",value:function(e,t,i,o){if(o.rule===r.Required)("radio"===t||"checkbox"===t)&&(i.every((function(e){return!e.checked}))?this.setGroupInvalid(e,o):this.setGroupValid(e))}},{key:"validateFieldRule",value:function(t,r,i){var o=this,l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=i.value,n=this.getElemValue(r);switch(i.rule){case e.Required:s(n)&&this.setFieldInvalid(t,i);break;case e.Email:if("string"!=typeof n){this.setFieldInvalid(t,i);break}u(n)||this.setFieldInvalid(t,i);break;case e.MaxLength:if(!a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("number"!=typeof a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("string"!=typeof n){this.setFieldInvalid(t,i);break}c(n,a)&&this.setFieldInvalid(t,i);break;case e.MinLength:if(!a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("number"!=typeof a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("string"!=typeof n){this.setFieldInvalid(t,i);break}f(n,a)&&this.setFieldInvalid(t,i);break;case e.Password:if("string"!=typeof n){this.setFieldInvalid(t,i);break}v(n)||this.setFieldInvalid(t,i);break;case e.StrongPassword:if("string"!=typeof n){this.setFieldInvalid(t,i);break}m(n)||this.setFieldInvalid(t,i);break;case e.Number:if("string"!=typeof n){this.setFieldInvalid(t,i);break}h(n)||this.setFieldInvalid(t,i);break;case e.MaxNumber:if(!a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("number"!=typeof a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("string"!=typeof n){this.setFieldInvalid(t,i);break}var d=+n;(Number.isNaN(d)||p(d,a))&&this.setFieldInvalid(t,i);break;case e.MinNumber:if(!a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("number"!=typeof a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,i);if("string"!=typeof n){this.setFieldInvalid(t,i);break}var g=+n;(Number.isNaN(g)||b(g,a))&&this.setFieldInvalid(t,i);break;case e.CustomRegexp:if(!a)return console.error("Value for ".concat(i.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,i);var k;try{k=new RegExp(a)}catch(e){console.error("Value for ".concat(i.rule," rule for [").concat(t,"] should be a valid regexp. This field will be always invalid.")),this.setFieldInvalid(t,i);break}k.test(String(n))||this.setFieldInvalid(t,i);break;default:if(!i.validator)return console.error("Validator for custom rule for [".concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,i);if("function"!=typeof i.validator)return console.error("Validator for custom rule for [".concat(t,"] field should be a function. This field will be always invalid.")),void this.setFieldInvalid(t,i);var F=i.validator(n,this.fields);if("boolean"!=typeof F&&"function"!=typeof F&&console.error("Validator return value for [".concat(t,"] field should be boolean or function. It will be cast to boolean.")),"function"==typeof F&&!l){var L=F();return y(L)?L.then((function(e){e||o.setFieldInvalid(t,i)})).catch((function(){o.setFieldInvalid(t,i)})):(console.error("Validator function for custom rule for [".concat(t,"] field should return a Promise. This field will be always invalid.")),void this.setFieldInvalid(t,i))}F||this.setFieldInvalid(t,i)}}},{key:"validateField",value:function(e,t){var r=this,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t.isValid=!0;var o=[];return _toConsumableArray(t.rules).reverse().forEach((function(l){var a=r.validateFieldRule(e,t.elem,l,i);y(a)&&o.push(a)})),Promise.allSettled(o)}},{key:"validateGroup",value:function(e,t){var r=this,i=[];return _toConsumableArray(t.rules).reverse().forEach((function(o){var l=r.validateGroupRule(e,t.type,t.elems,o);y(l)&&i.push(l)})),Promise.allSettled(i)}},{key:"focusInvalidField",value:function(){var e=this,t=function(){var t=e.fields[r];if(!t.isValid)return setTimeout((function(){return t.elem.focus()}),0),"break"};for(var r in this.fields){if("break"===t())break}}},{key:"afterSubmitValidation",value:function(){this.renderErrors(),this.globalConfig.focusInvalidField&&this.focusInvalidField()}},{key:"validate",value:function(){var e=this;return new Promise((function(t){var r=[];Object.keys(e.fields).forEach((function(t){var i=e.fields[t],o=e.validateField(t,i);y(o)&&r.push(o)})),Object.keys(e.groupFields).forEach((function(t){var i=e.groupFields[t],o=e.validateGroup(t,i);y(o)&&r.push(o)})),r.length?Promise.allSettled(r).then((function(){e.afterSubmitValidation(),t(!0)})):(e.afterSubmitValidation(),t(!1))}))}},{key:"setForm",value:function(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}},{key:"addListener",value:function(e,t,r){t.addEventListener(e,r),this.eventListeners.push({type:e,elem:t,func:r})}},{key:"removeListener",value:function(e,t,r){t.removeEventListener(e,r)}},{key:"addField",value:function(t,r,i){if("string"!=typeof t)throw Error("Field selector is not valid. Please specify a string selector.");var o=document.querySelector(t);if(!o)throw Error("Field with ".concat(t," selector not found! Please check the field selector."));if(!Array.isArray(r)||!r.length)throw Error("Rules argument for the field [".concat(t,"] should be an array and should contain at least 1 element."));return r.forEach((function(r){if(!("rule"in r)&&!("validator"in r))throw Error("Rules argument for the field [".concat(t,"] must contain at least one rule or validator property."));if(!(r.validator||r.rule&&Object.values(e).includes(r.rule)))throw Error("Rule should be one of these types: ".concat(Object.values(e).join(", "),". Provided value: ").concat(r.rule))})),this.fields[t]={elem:o,rules:r,isValid:void 0,config:i},this.setListeners(o),this.isSubmitted&&this.validate(),this}},{key:"removeField",value:function(e){if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");return this.fields[e]?(this.destroy(),delete this.fields[e],this.refresh(),this):(console.error("Field not found. Check the field selector."),this)}},{key:"addRequiredGroup",value:function(e,t,i){var o=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");var l=document.querySelector(e);if(!l)throw Error("Group with ".concat(e," selector not found! Please check the group selector."));var a=l.querySelectorAll("input"),n=Array.from(a).every((function(e){return"radio"===e.type})),s=Array.from(a).every((function(e){return"checkbox"===e.type}));if(!n&&!s)throw Error("Group should contain either or checkboxes or radio buttons");return this.groupFields[e]={rules:[{rule:r.Required,errorMessage:t}],groupElem:l,elems:Array.from(a),type:n?"radio":"checkbox",isDirty:!1,isValid:void 0,config:i},a.forEach((function(e){o.setListeners(e)})),this}},{key:"getListenerType",value:function(e){switch(e){case"checkbox":case"select-one":case"radio":return"change";default:return"keyup"}}},{key:"setListeners",value:function(e){var t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}},{key:"clearErrors",value:function(){var e,t,r,i=this;this.errorLabels.forEach((function(e){return e.remove()}));var o=function(){var r=i.fields[l],o=(null==(e=r.config)?void 0:e.errorFieldStyle)||i.globalConfig.errorFieldStyle;Object.keys(o).forEach((function(e){r.elem.style[e]=""})),r.elem.classList.remove((null==(t=r.config)?void 0:t.errorFieldCssClass)||i.globalConfig.errorFieldCssClass)};for(var l in this.fields)o();var a=function(){var e=i.groupFields[n],t=(null==(r=e.config)?void 0:r.errorFieldStyle)||i.globalConfig.errorFieldStyle;Object.keys(t).forEach((function(t){e.elems.forEach((function(r){var o;r.style[t]="",r.classList.remove((null==(o=e.config)?void 0:o.errorFieldCssClass)||i.globalConfig.errorFieldCssClass)}))}))};for(var n in this.groupFields)a();this.tooltips=[]}},{key:"isTooltip",value:function(){return!!this.globalConfig.tooltip}},{key:"lockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,r=e.length;t<r;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}},{key:"unlockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,r=e.length;t<r;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}},{key:"renderTooltip",value:function(e,t,r){var i,o=this,l=e.getBoundingClientRect(),a=l.top,n=l.left,s=l.width,u=l.height,c=t.getBoundingClientRect(),d=r||(null==(i=this.globalConfig.tooltip)?void 0:i.position);switch(d){case"left":t.style.top="".concat(a+u/2-c.height/2,"px"),t.style.left="".concat(n-c.width-5,"px");break;case"top":t.style.top="".concat(a-c.height-5,"px"),t.style.left="".concat(n+s/2-c.width/2,"px");break;case"right":t.style.top="".concat(a+u/2-c.height/2,"px"),t.style.left="".concat(n+s+5,"px");break;case"bottom":t.style.top="".concat(a+u+5,"px"),t.style.left="".concat(n+s/2-c.width/2,"px")}return t.dataset.direction=d,{refresh:function(){o.renderTooltip(e,t,r)}}}},{key:"createErrorLabelElem",value:function(e,t,r){var i=document.createElement("div");i.innerHTML=t;var o=this.isTooltip()?null==r?void 0:r.errorLabelStyle:(null==r?void 0:r.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(i.style,o),i.classList.add((null==r?void 0:r.errorLabelCssClass)||this.globalConfig.errorLabelCssClass,"just-validate-error-label"),this.isTooltip()&&(i.dataset.tooltip="true"),this.globalConfig.testingMode&&(i.dataset.testId="error-label-".concat(e)),this.errorLabels.push(i),i}},{key:"renderErrors",value:function(){var e,t,r,i,o,l,a,n,s,u,c,d,f=this;if(this.isSubmitted){this.clearErrors(),this.isValid=!0;var h=function(){var r=f.groupFields[v];if(r.isValid)return"continue";f.isValid=!1,r.elems.forEach((function(e){var t,i;Object.assign(e.style,(null==(t=r.config)?void 0:t.errorFieldStyle)||f.globalConfig.errorFieldStyle),e.classList.add((null==(i=r.config)?void 0:i.errorFieldCssClass)||f.globalConfig.errorFieldCssClass)}));var i=f.createErrorLabelElem(v,r.errorMessage,r.config);r.groupElem.appendChild(i),f.isTooltip()&&f.tooltips.push(f.renderTooltip(r.groupElem,i,null==(t=null==(e=r.config)?void 0:e.tooltip)?void 0:t.position))};for(var v in this.groupFields)h();for(var m in this.fields){var p=this.fields[m];if(!p.isValid){this.isValid=!1,p.elem.classList.add((null==(r=p.config)?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass);var b=this.createErrorLabelElem(m,p.errorMessage,p.config);if("checkbox"===p.elem.type||"radio"===p.elem.type){var y=document.querySelector('label[for="'.concat(p.elem.getAttribute("id"),'"]'));"label"===(null==(o=null==(i=p.elem.parentElement)?void 0:i.tagName)?void 0:o.toLowerCase())?null==(a=null==(l=p.elem.parentElement)?void 0:l.parentElement)||a.appendChild(b):y?null==(n=y.parentElement)||n.appendChild(b):null==(s=p.elem.parentElement)||s.appendChild(b)}else null==(u=p.elem.parentElement)||u.appendChild(b);this.isTooltip()&&this.tooltips.push(this.renderTooltip(p.elem,b,null==(d=null==(c=p.config)?void 0:c.tooltip)?void 0:d.position))}}}}},{key:"destroy",value:function(){var e=this;this.eventListeners.forEach((function(t){e.removeListener(t.type,t.elem,t.func)})),Object.keys(this.customStyleTags).forEach((function(t){e.customStyleTags[t].remove()})),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}},{key:"refresh",value:function(){var e=this;this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach((function(t){e.addField(t,_toConsumableArray(e.fields[t].rules),e.fields[t].config)}))):console.error("Cannot initialize the library! Form is not defined")}},{key:"setCurrentLocale",value:function(e){"string"==typeof e||void 0===e?(this.currentLocale=e,this.isSubmitted&&this.validate()):console.error("Current locale should be a string")}},{key:"onSuccess",value:function(e){return this.onSuccessCallback=e,this}},{key:"onFail",value:function(e){return this.onFailCallback=e,this}}]),t}();return k})),document.addEventListener("DOMContentLoaded",(function(){ymaps.ready((function(){var e=new ymaps.Map("map",{center:[55.77068671274726,37.62249213280481],zoom:15});myGeoObject=new ymaps.GeoObject({geometry:{type:"Point",coordinates:[55.76953456898229,37.63998549999998]}});var t=new ymaps.Placemark([55.76953456898229,37.63998549999998],{},{iconLayout:"default#image",iconImageHref:"./images/svg/location.svg",iconImageSize:[12,12],iconImageOffset:[-24,-24]});e.geoObjects.add(t)}))}));var obj={},prop=null==obj?void 0:obj.prop;console.log(prop);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
