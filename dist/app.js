"use strict";var burger=document.querySelector(".burger"),menu=document.querySelector(".header-list"),menuLinks=document.querySelectorAll(".header-list__item");function _typeof2(e){return _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof2(e)
/*!
 * dist/inputmask.min
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2020 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.6-beta.16
 */}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _createForOfIteratorHelper(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,s=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return o=e.done,e},e:function(e){s=!0,r=e},f:function(){try{o||null==i.return||i.return()}finally{if(s)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}burger.addEventListener("click",(function(){burger.classList.toggle("burger--active"),menu.classList.toggle("header-list--active"),document.body.classList.toggle("stop-scroll")})),menuLinks.forEach((function(e){e.addEventListener("click",(function(){burger.classList.toggle("burger--active"),menu.classList.remove("header-list--active"),document.body.classList.remove("stop-scroll")}))})),document.addEventListener("DOMContentLoaded",(function(){var e=new JustValidate(".contacts-form"),t=document.querySelector("input[type='tel']");new Inputmask("+7 (999)-999-99-99").mask(t),e.addField(".contacts-form__name",[{rule:"minLength",value:3,errorMessage:"Недостаточное количество символов"},{rule:"maxLength",value:5,errorMessage:"Вы ввели больше, чем положено"}]).addField(".contacts-form__phone",[{rule:"function",validator:function(e,i){return 10===t.inputmask.unmaskedvalue().length},errorMessage:"Недостаточное количество символов"}])})),function(e,t){if("object"==("undefined"==typeof exports?"undefined":_typeof2(exports))&&"object"==("undefined"==typeof module?"undefined":_typeof2(module)))module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var n in i)("object"==("undefined"==typeof exports?"undefined":_typeof2(exports))?exports:e)[n]=i[n]}}(window,(function(){return modules=[function(e){e.exports=JSON.parse('{"BACKSPACE":8,"BACKSPACE_SAFARI":127,"DELETE":46,"DOWN":40,"END":35,"ENTER":13,"ESCAPE":27,"HOME":36,"INSERT":45,"LEFT":37,"PAGE_DOWN":34,"PAGE_UP":33,"RIGHT":39,"SPACE":32,"TAB":9,"UP":38,"X":88,"CONTROL":17,"KEY_229":229}')},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.caret=function(e,t,i,n,a){var r,o=this.opts;if(void 0===t)return"selectionStart"in e&&"selectionEnd"in e?(t=e.selectionStart,i=e.selectionEnd):window.getSelection?(r=window.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&r.commonAncestorContainer!==e||(t=r.startOffset,i=r.endOffset):document.selection&&document.selection.createRange&&(r=document.selection.createRange(),t=0-r.duplicate().moveStart("character",-e.inputmask._valueGet().length),i=t+r.text.length),{begin:n?t:u.call(this,t),end:n?i:u.call(this,i)};if(Array.isArray(t)&&(i=this.isRTL?t[0]:t[1],t=this.isRTL?t[1]:t[0]),void 0!==t.begin&&(i=this.isRTL?t.begin:t.end,t=this.isRTL?t.end:t.begin),"number"==typeof t){t=n?t:u.call(this,t),i="number"==typeof(i=n?i:u.call(this,i))?i:t;var s=parseInt(((e.ownerDocument.defaultView||window).getComputedStyle?(e.ownerDocument.defaultView||window).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=s>e.scrollWidth?s:0,e.inputmask.caretPos={begin:t,end:i},o.insertModeVisual&&!1===o.insertMode&&t===i&&(a||i++),e===(e.inputmask.shadowRoot||document).activeElement)if("setSelectionRange"in e)e.setSelectionRange(t,i);else if(window.getSelection){if(r=document.createRange(),void 0===e.firstChild||null===e.firstChild){var l=document.createTextNode("");e.appendChild(l)}r.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),r.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),r.collapse(!0);var c=window.getSelection();c.removeAllRanges(),c.addRange(r)}else e.createTextRange&&((r=e.createTextRange()).collapse(!0),r.moveEnd("character",i),r.moveStart("character",t),r.select())}},t.determineLastRequiredPosition=function(e){var t,i,r=this.maskset,s=this.dependencyLib,l=n.getMaskTemplate.call(this,!0,o.call(this),!0,!0),u=l.length,c=o.call(this),d={},f=r.validPositions[c],p=void 0!==f?f.locator.slice():void 0;for(t=c+1;t<l.length;t++)i=n.getTestTemplate.call(this,t,p,t-1),p=i.locator.slice(),d[t]=s.extend(!0,{},i);var h=f&&void 0!==f.alternation?f.locator[f.alternation]:void 0;for(t=u-1;c<t&&((i=d[t]).match.optionality||i.match.optionalQuantifier&&i.match.newBlockMarker||h&&(h!==d[t].locator[f.alternation]&&1!=i.match.static||!0===i.match.static&&i.locator[f.alternation]&&a.checkAlternationMatch.call(this,i.locator[f.alternation].toString().split(","),h.toString().split(","))&&""!==n.getTests.call(this,t)[0].def))&&l[t]===n.getPlaceholder.call(this,t,i.match);t--)u--;return e?{l:u,def:d[u]?d[u].match:void 0}:u},t.determineNewCaretPosition=function(e,t){var i=this,a=this.maskset,u=this.opts;if(t&&(i.isRTL?e.end=e.begin:e.begin=e.end),e.begin===e.end){switch(u.positionCaretOnClick){case"none":break;case"select":e={begin:0,end:r.call(i).length};break;case"ignore":e.end=e.begin=l.call(i,o.call(i));break;case"radixFocus":if(function(e){if(""!==u.radixPoint&&0!==u.digits){var t=a.validPositions;if(void 0===t[e]||t[e].input===n.getPlaceholder.call(i,e)){if(e<l.call(i,-1))return!0;var o=r.call(i).indexOf(u.radixPoint);if(-1!==o){for(var s in t)if(t[s]&&o<s&&t[s].input!==n.getPlaceholder.call(i,s))return!1;return!0}}}return!1}(e.begin)){var c=r.call(i).join("").indexOf(u.radixPoint);e.end=e.begin=u.numericInput?l.call(i,c):c;break}default:var d=e.begin,f=o.call(i,d,!0),p=l.call(i,-1!==f||s.call(i,0)?f:-1);if(d<=p)e.end=e.begin=s.call(i,d,!1,!0)?d:l.call(i,d);else{var h=a.validPositions[f],v=n.getTestTemplate.call(i,p,h?h.match.locator:void 0,h),m=n.getPlaceholder.call(i,p,v.match);if(""!==m&&r.call(i)[p]!==m&&!0!==v.match.optionalQuantifier&&!0!==v.match.newBlockMarker||!s.call(i,p,u.keepStatic,!0)&&v.match.def===m){var g=l.call(i,p);(g<=d||d===p)&&(p=g)}e.end=e.begin=p}}return e}},t.getBuffer=r,t.getBufferTemplate=function(){var e=this.maskset;return void 0===e._buffer&&(e._buffer=n.getMaskTemplate.call(this,!1,1),void 0===e.buffer&&(e.buffer=e._buffer.slice())),e._buffer},t.getLastValidPosition=o,t.isMask=s,t.resetMaskSet=function(e){var t=this.maskset;t.buffer=void 0,!0!==e&&(t.validPositions={},t.p=0)},t.seekNext=l,t.seekPrevious=function(e,t){var i=e-1;if(e<=0)return 0;for(;0<i&&(!0===t&&(!0!==n.getTest.call(this,i).match.newBlockMarker||!s.call(this,i,void 0,!0))||!0!==t&&!s.call(this,i,void 0,!0));)i--;return i},t.translatePosition=u;var n=i(3),a=i(4);i(10);function r(e){var t=this.maskset;return void 0!==t.buffer&&!0!==e||(t.buffer=n.getMaskTemplate.call(this,!0,o.call(this),!0),void 0===t._buffer&&(t._buffer=t.buffer.slice())),t.buffer}function o(e,t,i){var n=this.maskset,a=-1,r=-1,o=i||n.validPositions;for(var s in void 0===e&&(e=-1),o){var l=parseInt(s);o[l]&&(t||!0!==o[l].generatedInput)&&(l<=e&&(a=l),e<=l&&(r=l))}return-1===a||a==e?r:-1==r||e-a<r-e?a:r}function s(e,t,i){var a=this.maskset,r=n.getTestTemplate.call(this,e).match;if(""===r.def&&(r=n.getTest.call(this,e).match),!0!==r.static)return r.fn;if(!0===i&&void 0!==a.validPositions[e]&&!0!==a.validPositions[e].generatedInput)return!0;if(!0!==t&&-1<e){if(i){var o=n.getTests.call(this,e);return o.length>1+(""===o[o.length-1].match.def?1:0)}var s=n.determineTestTemplate.call(this,e,n.getTests.call(this,e)),l=n.getPlaceholder.call(this,e,s.match);return s.match.def!==l}return!1}function l(e,t,i){void 0===i&&(i=!0);for(var a=e+1;""!==n.getTest.call(this,a).match.def&&(!0===t&&(!0!==n.getTest.call(this,a).match.newBlockMarker||!s.call(this,a,void 0,!0))||!0!==t&&!s.call(this,a,void 0,i));)a++;return a}function u(e){var t=this.opts,i=this.el;return!this.isRTL||"number"!=typeof e||t.greedy&&""===t.placeholder||!i||(e=Math.abs(this._valueGet().length-e)),e}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,i(16),i(17);var n=i(10),a=v(i(9)),r=v(i(6)),o=i(20),s=i(3),l=i(1),u=i(4),c=i(5),d=i(11),f=v(i(21)),p=v(i(22));function h(e){return h="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(e){return _typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof2(e)},h(e)}function v(e){return e&&e.__esModule?e:{default:e}}var m=r.default.document,g="_inputmask_opts";function y(e,t,i){if(!(this instanceof y))return new y(e,t,i);this.dependencyLib=a.default,this.el=void 0,this.events={},this.maskset=void 0,!0!==i&&("[object Object]"===Object.prototype.toString.call(e)?t=e:(t=t||{},e&&(t.alias=e)),this.opts=a.default.extend(!0,{},this.defaults,t),this.noMasksCache=t&&void 0!==t.definitions,this.userOptions=t||{},b(this.opts.alias,t,this.opts)),this.refreshValue=!1,this.undoValue=void 0,this.$el=void 0,this.skipKeyPressEvent=!1,this.skipInputEvent=!1,this.validationEvent=!1,this.ignorable=!1,this.maxLength,this.mouseEnter=!1,this.originalPlaceholder=void 0,this.isComposing=!1}function b(e,t,i){var n=y.prototype.aliases[e];return n?(n.alias&&b(n.alias,void 0,i),a.default.extend(!0,i,n),a.default.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}y.prototype={dataAttribute:"data-inputmask",defaults:p.default,definitions:f.default,aliases:{},masksCache:{},get isRTL(){return this.opts.isRTL||this.opts.numericInput},mask:function(e){var t=this;return"string"==typeof e&&(e=m.getElementById(e)||m.querySelectorAll(e)),(e=e.nodeName?[e]:Array.isArray(e)?e:Array.from(e)).forEach((function(e,i){var s=a.default.extend(!0,{},t.opts);if(function(e,t,i,n){function o(t,a){var o=""===n?t:n+"-"+t;null!==(a=void 0!==a?a:e.getAttribute(o))&&("string"==typeof a&&(0===t.indexOf("on")?a=r.default[a]:"false"===a?a=!1:"true"===a&&(a=!0)),i[t]=a)}if(!0===t.importDataAttributes){var s,l,u,c,d=e.getAttribute(n);if(d&&""!==d&&(d=d.replace(/'/g,'"'),l=JSON.parse("{"+d+"}")),l)for(c in u=void 0,l)if("alias"===c.toLowerCase()){u=l[c];break}for(s in o("alias",u),i.alias&&b(i.alias,i,t),t){if(l)for(c in u=void 0,l)if(c.toLowerCase()===s.toLowerCase()){u=l[c];break}o(s,u)}}return a.default.extend(!0,t,i),"rtl"!==e.dir&&!t.rightAlign||(e.style.textAlign="right"),"rtl"!==e.dir&&!t.numericInput||(e.dir="ltr",e.removeAttribute("dir"),t.isRTL=!0),Object.keys(i).length}(e,s,a.default.extend(!0,{},t.userOptions),t.dataAttribute)){var l=(0,o.generateMaskSet)(s,t.noMasksCache);void 0!==l&&(void 0!==e.inputmask&&(e.inputmask.opts.autoUnmask=!0,e.inputmask.remove()),e.inputmask=new y(void 0,void 0,!0),e.inputmask.opts=s,e.inputmask.noMasksCache=t.noMasksCache,e.inputmask.userOptions=a.default.extend(!0,{},t.userOptions),e.inputmask.el=e,e.inputmask.$el=(0,a.default)(e),e.inputmask.maskset=l,a.default.data(e,g,t.userOptions),n.mask.call(e.inputmask))}})),e&&e[0]&&e[0].inputmask||this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"===h(e)?(a.default.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),void 0===this.el||void 0!==e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!1,!1,t),"function"==typeof this.opts.onBeforeWrite&&this.opts.onBeforeWrite.call(this,void 0,l.getBuffer.call(this),0,this.opts)}return c.unmaskedvalue.call(this,this.el)},remove:function(){if(this.el){a.default.data(this.el,g,null);var e=this.opts.autoUnmask?(0,c.unmaskedvalue)(this.el):this._valueGet(this.opts.autoUnmask);e!==l.getBufferTemplate.call(this).join("")?this._valueSet(e,this.opts.autoUnmask):this._valueSet(""),d.EventRuler.off(this.el),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.el),"value")&&this.__valueGet&&Object.defineProperty(this.el,"value",{get:this.__valueGet,set:this.__valueSet,configurable:!0}):m.__lookupGetter__&&this.el.__lookupGetter__("value")&&this.__valueGet&&(this.el.__defineGetter__("value",this.__valueGet),this.el.__defineSetter__("value",this.__valueSet)),this.el.inputmask=void 0}return this.el},getemptymask:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),l.getBufferTemplate.call(this).join("")},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),u.isComplete.call(this,l.getBuffer.call(this))},getmetadata:function(){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),Array.isArray(this.maskset.metadata)){var e=s.getMaskTemplate.call(this,!0,0,!1).join("");return this.maskset.metadata.forEach((function(t){return t.mask!==e||(e=t,!1)})),e}return this.maskset.metadata},isValid:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!0,!1,t)}else e=this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join("");for(var i=l.getBuffer.call(this),n=l.determineLastRequiredPosition.call(this),a=i.length-1;n<a&&!l.isMask.call(this,a);a--);return i.splice(n,a+1-n),u.isComplete.call(this,i)&&e===(this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join(""))},format:function(e,t){this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache);var i=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!0,!1,i);var n=this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join("");return t?{value:n,metadata:this.getmetadata()}:n},setValue:function(e){this.el&&(0,a.default)(this.el).trigger("setvalue",[e])},analyseMask:o.analyseMask},y.extendDefaults=function(e){a.default.extend(!0,y.prototype.defaults,e)},y.extendDefinitions=function(e){a.default.extend(!0,y.prototype.definitions,e)},y.extendAliases=function(e){a.default.extend(!0,y.prototype.aliases,e)},y.format=function(e,t,i){return y(t).format(e,i)},y.unmask=function(e,t){return y(t).unmaskedvalue(e)},y.isValid=function(e,t){return y(t).isValid(e)},y.remove=function(e){"string"==typeof e&&(e=m.getElementById(e)||m.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask&&e.inputmask.remove()}))},y.setValue=function(e,t){"string"==typeof e&&(e=m.getElementById(e)||m.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask?e.inputmask.setValue(t):(0,a.default)(e).trigger("setvalue",[t])}))},y.dependencyLib=a.default,r.default.Inputmask=y;var k=y;t.default=k},function(e,t,i){function n(e,t){var i=(null!=e.alternation?e.mloc[a(e)]:e.locator).join("");if(""!==i)for(;i.length<t;)i+="0";return i}function a(e){var t=e.locator[e.alternation];return"string"==typeof t&&0<t.length&&(t=t.split(",")[0]),void 0!==t?t.toString():""}function r(e,t,i){var n=this.opts,a=this.maskset;if(void 0!==(t=t||l.call(this,e).match).placeholder||!0===i)return"function"==typeof t.placeholder?t.placeholder(n):t.placeholder;if(!0!==t.static)return n.placeholder.charAt(e%n.placeholder.length);if(-1<e&&void 0===a.validPositions[e]){var r,o=u.call(this,e),s=[];if(o.length>1+(""===o[o.length-1].match.def?1:0))for(var c=0;c<o.length;c++)if(""!==o[c].match.def&&!0!==o[c].match.optionality&&!0!==o[c].match.optionalQuantifier&&(!0===o[c].match.static||void 0===r||!1!==o[c].match.fn.test(r.match.def,a,e,!0,n))&&(s.push(o[c]),!0===o[c].match.static&&(r=o[c]),1<s.length&&/[0-9a-bA-Z]/.test(s[0].match.def)))return n.placeholder.charAt(e%n.placeholder.length)}return t.def}function o(e,t,i){return this.maskset.validPositions[e]||s.call(this,e,u.call(this,e,t?t.slice():t,i))}function s(e,t){var i=this.opts;e=0<e?e-1:0;for(var a,r,o,s=n(l.call(this,e)),u=0;u<t.length;u++){var c=t[u];a=n(c,s.length);var d=Math.abs(a-s);(void 0===r||""!==a&&d<r||o&&!i.greedy&&o.match.optionality&&"master"===o.match.newBlockMarker&&(!c.match.optionality||!c.match.newBlockMarker)||o&&o.match.optionalQuantifier&&!c.match.optionalQuantifier)&&(r=d,o=c)}return o}function l(e,t){var i=this.maskset;return i.validPositions[e]?i.validPositions[e]:(t||u.call(this,e))[0]}function u(e,t,i){var n,a=this,r=this.dependencyLib,o=this.maskset,l=this.opts,u=this.el,c=o.maskToken,d=t?i:0,f=t?t.slice():[0],p=[],h=!1,v=t?t.join(""):"";function m(t,i,a,r){function s(a,r,c){function f(e,t){var i=0===t.matches.indexOf(e);return i||t.matches.every((function(n,a){return!0===n.isQuantifier?i=f(e,t.matches[a-1]):Object.prototype.hasOwnProperty.call(n,"matches")&&(i=f(e,n)),!i})),i}function g(e,t,i){var n,a;if((o.tests[e]||o.validPositions[e])&&(o.tests[e]||[o.validPositions[e]]).every((function(e,r){if(e.mloc[t])return n=e,!1;var o=void 0!==i?i:e.alternation,s=void 0!==e.locator[o]?e.locator[o].toString().indexOf(t):-1;return(void 0===a||s<a)&&-1!==s&&(n=e,a=s),!0})),n){var r=n.locator[n.alternation];return(n.mloc[t]||n.mloc[r]||n.locator).slice((void 0!==i?i:n.alternation)+1)}return void 0!==i?g(e,t):void 0}function y(e,t){function i(e){for(var t,i=[],n=-1,a=0,r=e.length;a<r;a++)if("-"===e.charAt(a))for(t=e.charCodeAt(a+1);++n<t;)i.push(String.fromCharCode(n));else n=e.charCodeAt(a),i.push(e.charAt(a));return i.join("")}return e.match.def===t.match.nativeDef||!(!(l.regex||e.match.fn instanceof RegExp&&t.match.fn instanceof RegExp)||!0===e.match.static||!0===t.match.static)&&-1!==i(t.match.fn.toString().replace(/[[\]/]/g,"")).indexOf(i(e.match.fn.toString().replace(/[[\]/]/g,"")))}function b(e,t){var i=e.alternation,n=void 0===t||i===t.alternation&&-1===e.locator[i].toString().indexOf(t.locator[i]);if(!n&&i>t.alternation)for(var a=t.alternation;a<i;a++)if(e.locator[a]!==t.locator[a]){i=a,n=!0;break}if(n){e.mloc=e.mloc||{};var r=e.locator[i];if(void 0!==r){if("string"==typeof r&&(r=r.split(",")[0]),void 0===e.mloc[r]&&(e.mloc[r]=e.locator.slice()),void 0!==t){for(var o in t.mloc)"string"==typeof o&&(o=o.split(",")[0]),void 0===e.mloc[o]&&(e.mloc[o]=t.mloc[o]);e.locator[i]=Object.keys(e.mloc).join(",")}return!0}e.alternation=void 0}return!1}function k(e,t){if(e.locator.length!==t.locator.length)return!1;for(var i=e.alternation+1;i<e.locator.length;i++)if(e.locator[i]!==t.locator[i])return!1;return!0}if(d>e+l._maxTestPos)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+o.mask;if(d===e&&void 0===a.matches)return p.push({match:a,locator:r.reverse(),cd:v,mloc:{}}),!0;if(void 0!==a.matches){if(a.isGroup&&c!==a){if(a=s(t.matches[t.matches.indexOf(a)+1],r,c))return!0}else if(a.isOptional){var x=a,w=p.length;if(a=m(a,i,r,c)){if(p.forEach((function(e,t){w<=t&&(e.match.optionality=!0)})),n=p[p.length-1].match,void 0!==c||!f(n,x))return!0;h=!0,d=e}}else if(a.isAlternator){var _,E=a,S=[],P=p.slice(),C=r.length,M=0<i.length?i.shift():-1;if(-1===M||"string"==typeof M){var T,O=d,L=i.slice(),A=[];if("string"==typeof M)A=M.split(",");else for(T=0;T<E.matches.length;T++)A.push(T.toString());if(void 0!==o.excludes[e]){for(var F=A.slice(),j=0,I=o.excludes[e].length;j<I;j++){var D=o.excludes[e][j].toString().split(":");r.length==D[1]&&A.splice(A.indexOf(D[0]),1)}0===A.length&&(delete o.excludes[e],A=F)}(!0===l.keepStatic||isFinite(parseInt(l.keepStatic))&&O>=l.keepStatic)&&(A=A.slice(0,1));for(var B=!1,R=0;R<A.length;R++){T=parseInt(A[R]),p=[],i="string"==typeof M&&g(d,T,C)||L.slice(),E.matches[T]&&s(E.matches[T],[T].concat(r),c)?a=!0:0===R&&(B=!0),_=p.slice(),d=O,p=[];for(var V=0;V<_.length;V++){var N=_[V],H=!1;N.match.jit=N.match.jit||B,N.alternation=N.alternation||C,b(N);for(var G=0;G<S.length;G++){var q=S[G];if("string"!=typeof M||void 0!==N.alternation&&A.includes(N.locator[N.alternation].toString())){if(N.match.nativeDef===q.match.nativeDef){H=!0,b(q,N);break}if(y(N,q)){b(N,q)&&(H=!0,S.splice(S.indexOf(q),0,N));break}if(y(q,N)){b(q,N);break}if(W=q,!0===($=N).match.static&&!0!==W.match.static&&W.match.fn.test($.match.def,o,e,!1,l,!1)){k(N,q)||void 0!==u.inputmask.userOptions.keepStatic?b(N,q)&&(H=!0,S.splice(S.indexOf(q),0,N)):l.keepStatic=!0;break}}}H||S.push(N)}}p=P.concat(S),d=e,h=0<p.length,a=0<S.length,i=L.slice()}else a=s(E.matches[M]||t.matches[M],[M].concat(r),c);if(a)return!0}else if(a.isQuantifier&&c!==t.matches[t.matches.indexOf(a)-1])for(var K=a,z=0<i.length?i.shift():0;z<(isNaN(K.quantifier.max)?z+1:K.quantifier.max)&&d<=e;z++){var U=t.matches[t.matches.indexOf(K)-1];if(a=s(U,[z].concat(r),U)){if((n=p[p.length-1].match).optionalQuantifier=z>=K.quantifier.min,n.jit=(z||1)*U.matches.indexOf(n)>=K.quantifier.jit,n.optionalQuantifier&&f(n,U)){h=!0,d=e;break}return n.jit&&(o.jitOffset[e]=U.matches.length-U.matches.indexOf(n)),!0}}else if(a=m(a,i,r,c))return!0}else d++;var $,W}for(var c=0<i.length?i.shift():0;c<t.matches.length;c++)if(!0!==t.matches[c].isQuantifier){var f=s(t.matches[c],[c].concat(a),r);if(f&&d===e)return f;if(e<d)break}}if(-1<e&&(void 0===a.maxLength||e<a.maxLength)){if(void 0===t){for(var g,y=e-1;void 0===(g=o.validPositions[y]||o.tests[y])&&-1<y;)y--;void 0!==g&&-1<y&&(f=function(e,t){var i,n=[];return Array.isArray(t)||(t=[t]),0<t.length&&(void 0===t[0].alternation||!0===l.keepStatic?0===(n=s.call(a,e,t.slice()).locator.slice()).length&&(n=t[0].locator.slice()):t.forEach((function(e){""!==e.def&&(0===n.length?(i=e.alternation,n=e.locator.slice()):e.locator[i]&&-1===n[i].toString().indexOf(e.locator[i])&&(n[i]+=","+e.locator[i]))}))),n}(y,g),v=f.join(""),d=y)}if(o.tests[e]&&o.tests[e][0].cd===v)return o.tests[e];for(var b=f.shift();b<c.length;b++){if(m(c[b],f,[b])&&d===e||e<d)break}}return 0!==p.length&&!h||p.push({match:{fn:null,static:!0,optionality:!1,casing:null,def:"",placeholder:""},locator:[],mloc:{},cd:v}),void 0!==t&&o.tests[e]?r.extend(!0,[],p):(o.tests[e]=r.extend(!0,[],p),o.tests[e])}Object.defineProperty(t,"__esModule",{value:!0}),t.determineTestTemplate=s,t.getDecisionTaker=a,t.getMaskTemplate=function(e,t,i,n,a){var l=this.opts,c=this.maskset,d=l.greedy;a&&(l.greedy=!1),t=t||0;var f,p,h,v,m=[],g=0;do{if(!0===e&&c.validPositions[g])p=(h=a&&!0===c.validPositions[g].match.optionality&&void 0===c.validPositions[g+1]&&(!0===c.validPositions[g].generatedInput||c.validPositions[g].input==l.skipOptionalPartCharacter&&0<g)?s.call(this,g,u.call(this,g,f,g-1)):c.validPositions[g]).match,f=h.locator.slice(),m.push(!0===i?h.input:!1===i?p.nativeDef:r.call(this,g,p));else{p=(h=o.call(this,g,f,g-1)).match,f=h.locator.slice();var y=!0!==n&&(!1!==l.jitMasking?l.jitMasking:p.jit);(v=v&&p.static&&p.def!==l.groupSeparator&&null===p.fn||c.validPositions[g-1]&&p.static&&p.def!==l.groupSeparator&&null===p.fn)||!1===y||void 0===y||"number"==typeof y&&isFinite(y)&&g<y?m.push(!1===i?p.nativeDef:r.call(this,g,p)):v=!1}g++}while((void 0===this.maxLength||g<this.maxLength)&&(!0!==p.static||""!==p.def)||g<t);return""===m[m.length-1]&&m.pop(),!1===i&&void 0!==c.maskLength||(c.maskLength=g-1),l.greedy=d,m},t.getPlaceholder=r,t.getTest=l,t.getTests=u,t.getTestTemplate=o},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.alternate=s,t.checkAlternationMatch=function(e,t,i){for(var n,a=this.opts.greedy?t:t.slice(0,1),r=!1,o=void 0!==i?i.split(","):[],s=0;s<o.length;s++)-1!==(n=e.indexOf(o[s]))&&e.splice(n,1);for(var l=0;l<e.length;l++)if(a.includes(e[l])){r=!0;break}return r},t.isComplete=u,t.isValid=c,t.refreshFromBuffer=f,t.revalidateMask=h,t.handleRemove=function(e,t,i,o,l){var u=this.maskset,c=this.opts;if((c.numericInput||this.isRTL)&&(t===a.default.BACKSPACE?t=a.default.DELETE:t===a.default.DELETE&&(t=a.default.BACKSPACE),this.isRTL)){var d=i.end;i.end=i.begin,i.begin=d}var f,p=r.getLastValidPosition.call(this,void 0,!0);if(i.end>=r.getBuffer.call(this).length&&p>=i.end&&(i.end=p+1),t===a.default.BACKSPACE?i.end-i.begin<1&&(i.begin=r.seekPrevious.call(this,i.begin)):t===a.default.DELETE&&i.begin===i.end&&(i.end=r.isMask.call(this,i.end,!0,!0)?i.end+1:r.seekNext.call(this,i.end)+1),!1!==(f=h.call(this,i))){if(!0!==o&&!1!==c.keepStatic||null!==c.regex&&-1!==n.getTest.call(this,i.begin).match.def.indexOf("|")){var v=s.call(this,!0);if(v){var m=void 0!==v.caret?v.caret:v.pos?r.seekNext.call(this,v.pos.begin?v.pos.begin:v.pos):r.getLastValidPosition.call(this,-1,!0);(t!==a.default.DELETE||i.begin>m)&&i.begin}}!0!==o&&(u.p=t===a.default.DELETE?i.begin+f:i.begin)}};var n=i(3),a=function(e){return e&&e.__esModule?e:{default:e}}(i(0)),r=i(1),o=i(7);function s(e,t,i,a,o,l){var u,d,f,p,h,v,m,g,y,b,k,x=this.dependencyLib,w=this.opts,_=this.maskset,E=x.extend(!0,{},_.validPositions),S=x.extend(!0,{},_.tests),P=!1,C=!1,M=void 0!==o?o:r.getLastValidPosition.call(this);if(l&&(b=l.begin,k=l.end,l.begin>l.end&&(b=l.end,k=l.begin)),-1===M&&void 0===o)u=0,d=(p=n.getTest.call(this,u)).alternation;else for(;0<=M;M--)if((f=_.validPositions[M])&&void 0!==f.alternation){if(p&&p.locator[f.alternation]!==f.locator[f.alternation])break;u=M,d=_.validPositions[u].alternation,p=f}if(void 0!==d){m=parseInt(u),_.excludes[m]=_.excludes[m]||[],!0!==e&&_.excludes[m].push((0,n.getDecisionTaker)(p)+":"+p.alternation);var T=[],O=-1;for(h=m;h<r.getLastValidPosition.call(this,void 0,!0)+1;h++)-1===O&&e<=h&&void 0!==t&&(T.push(t),O=T.length-1),(v=_.validPositions[h])&&!0!==v.generatedInput&&(void 0===l||h<b||k<=h)&&T.push(v.input),delete _.validPositions[h];for(-1===O&&void 0!==t&&(T.push(t),O=T.length-1);void 0!==_.excludes[m]&&_.excludes[m].length<10;){for(_.tests={},r.resetMaskSet.call(this,!0),P=!0,h=0;h<T.length&&(g=P.caret||r.getLastValidPosition.call(this,void 0,!0)+1,y=T[h],P=c.call(this,g,y,!1,a,!0));h++)h===O&&(C=P),1==e&&P&&(C={caretPos:h});if(P)break;if(r.resetMaskSet.call(this),p=n.getTest.call(this,m),_.validPositions=x.extend(!0,{},E),_.tests=x.extend(!0,{},S),!_.excludes[m]){C=s.call(this,e,t,i,a,m-1,l);break}var L=(0,n.getDecisionTaker)(p);if(-1!==_.excludes[m].indexOf(L+":"+p.alternation)){C=s.call(this,e,t,i,a,m-1,l);break}for(_.excludes[m].push(L+":"+p.alternation),h=m;h<r.getLastValidPosition.call(this,void 0,!0)+1;h++)delete _.validPositions[h]}}return C&&!1===w.keepStatic||delete _.excludes[m],C}function l(e,t,i){var n=this.opts,r=this.maskset;switch(n.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var o=r.validPositions[i-1];e=0===i||o&&o.input===String.fromCharCode(a.default.SPACE)?e.toUpperCase():e.toLowerCase();break;default:if("function"==typeof n.casing){var s=Array.prototype.slice.call(arguments);s.push(r.validPositions),e=n.casing.apply(this,s)}}return e}function u(e){var t=this.opts,i=this.maskset;if("function"==typeof t.isComplete)return t.isComplete(e,t);if("*"!==t.repeat){var a=!1,o=r.determineLastRequiredPosition.call(this,!0),s=r.seekPrevious.call(this,o.l);if(void 0===o.def||o.def.newBlockMarker||o.def.optionality||o.def.optionalQuantifier){a=!0;for(var l=0;l<=s;l++){var u=n.getTestTemplate.call(this,l).match;if(!0!==u.static&&void 0===i.validPositions[l]&&!0!==u.optionality&&!0!==u.optionalQuantifier||!0===u.static&&e[l]!==n.getPlaceholder.call(this,l,u)){a=!1;break}}}return a}}function c(e,t,i,a,o,d,v){var m=this,g=this.dependencyLib,y=this.opts,b=(m.el,m.maskset);function k(e){return m.isRTL?1<e.begin-e.end||e.begin-e.end==1:1<e.end-e.begin||e.end-e.begin==1}i=!0===i;var x=e;function w(e){if(void 0!==e){if(void 0!==e.remove&&(Array.isArray(e.remove)||(e.remove=[e.remove]),e.remove.sort((function(e,t){return t.pos-e.pos})).forEach((function(e){h.call(m,{begin:e,end:e+1})})),e.remove=void 0),void 0!==e.insert&&(Array.isArray(e.insert)||(e.insert=[e.insert]),e.insert.sort((function(e,t){return e.pos-t.pos})).forEach((function(e){""!==e.c&&c.call(m,e.pos,e.c,void 0===e.strict||e.strict,void 0!==e.fromIsValid?e.fromIsValid:a)})),e.insert=void 0),e.refreshFromBuffer&&e.buffer){var t=e.refreshFromBuffer;f.call(m,!0===t?t:t.start,t.end,e.buffer),e.refreshFromBuffer=void 0}void 0!==e.rewritePosition&&(x=e.rewritePosition,e=!0)}return e}function _(t,i,o){var s=!1;return n.getTests.call(m,t).every((function(u,c){var d=u.match;if(r.getBuffer.call(m,!0),!1===(s=null!=d.fn?d.fn.test(i,b,t,o,y,k(e)):(i===d.def||i===y.skipOptionalPartCharacter)&&""!==d.def&&{c:n.getPlaceholder.call(m,t,d,!0)||d.def,pos:t}))return!0;var f=void 0!==s.c?s.c:i,p=t;return f=f===y.skipOptionalPartCharacter&&!0===d.static?n.getPlaceholder.call(m,t,d,!0)||d.def:f,!0!==(s=w(s))&&void 0!==s.pos&&s.pos!==t&&(p=s.pos),!0!==s&&void 0===s.pos&&void 0===s.c||!1===h.call(m,e,g.extend({},u,{input:l.call(m,f,d,p)}),a,p)&&(s=!1),!1})),s}void 0!==e.begin&&(x=m.isRTL?e.end:e.begin);var E=!0,S=g.extend(!0,{},b.validPositions);if(!1===y.keepStatic&&void 0!==b.excludes[x]&&!0!==o&&!0!==a)for(var P=x;P<(m.isRTL?e.begin:e.end);P++)void 0!==b.excludes[P]&&(b.excludes[P]=void 0,delete b.tests[P]);if("function"==typeof y.preValidation&&!0!==a&&!0!==d&&(E=w(E=y.preValidation.call(m,r.getBuffer.call(m),x,t,k(e),y,b,e,i||o))),!0===E){if(void 0===m.maxLength||x<r.translatePosition.call(m,m.maxLength)){if(E=_(x,t,i),(!i||!0===a)&&!1===E&&!0!==d){var C=b.validPositions[x];if(!C||!0!==C.match.static||C.match.def!==t&&t!==y.skipOptionalPartCharacter){if(y.insertMode||void 0===b.validPositions[r.seekNext.call(m,x)]||e.end>x){var M=!1;if(b.jitOffset[x]&&void 0===b.validPositions[r.seekNext.call(m,x)]&&(!1!==(E=c.call(m,x+b.jitOffset[x],t,!0))&&(!0!==o&&(E.caret=x),M=!0)),e.end>x&&(b.validPositions[x]=void 0),!M&&!r.isMask.call(m,x,y.keepStatic&&0===x))for(var T=x+1,O=r.seekNext.call(m,x,!1,0!==x);T<=O;T++)if(!1!==(E=_(T,t,i))){E=p.call(m,x,void 0!==E.pos?E.pos:T)||E,x=T;break}}}else E={caret:r.seekNext.call(m,x)}}}else E=!1;!1!==E||!y.keepStatic||!u.call(m,r.getBuffer.call(m))&&0!==x||i||!0===o?k(e)&&b.tests[x]&&1<b.tests[x].length&&y.keepStatic&&!i&&!0!==o&&(E=s.call(m,!0)):E=s.call(m,x,t,i,a,void 0,e),!0===E&&(E={pos:x})}if("function"==typeof y.postValidation&&!0!==a&&!0!==d){var L=y.postValidation.call(m,r.getBuffer.call(m,!0),void 0!==e.begin?m.isRTL?e.end:e.begin:e,t,E,y,b,i,v);void 0!==L&&(E=!0===L?E:L)}return E&&void 0===E.pos&&(E.pos=x),!1===E||!0===d?(r.resetMaskSet.call(m,!0),b.validPositions=g.extend(!0,{},S)):p.call(m,void 0,x,!0),w(E)}function d(e,t,i){for(var a=this.maskset,r=!1,o=n.getTests.call(this,e),s=0;s<o.length;s++){if(o[s].match&&(!(o[s].match.nativeDef!==t.match[i.shiftPositions?"def":"nativeDef"]||i.shiftPositions&&t.match.static)||o[s].match.nativeDef===t.match.nativeDef)){r=!0;break}if(o[s].match&&o[s].match.def===t.match.nativeDef){r=void 0;break}}return!1===r&&void 0!==a.jitOffset[e]&&(r=d.call(this,e+a.jitOffset[e],t,i)),r}function f(e,t,i){var n,a,s=this.maskset,l=this.opts,u=this.dependencyLib,c=this.el,d=l.skipOptionalPartCharacter,f=this.isRTL?i.slice().reverse():i;if(l.skipOptionalPartCharacter="",!0===e)r.resetMaskSet.call(this),s.tests={},e=0,t=i.length,a=r.determineNewCaretPosition.call(this,{begin:0,end:0},!1).begin;else{for(n=e;n<t;n++)delete s.validPositions[n];a=e}var p=new u.Event("keypress");for(n=e;n<t;n++){p.which=f[n].toString().charCodeAt(0),this.ignorable=!1;var h=o.EventHandlers.keypressEvent.call(c,p,!0,!1,!1,a);!1!==h&&(a=h.forwardPosition)}l.skipOptionalPartCharacter=d}function p(e,t,i){var a=this.maskset,o=this.dependencyLib;if(void 0===e)for(e=t-1;0<e&&!a.validPositions[e];e--);for(var s=e;s<t;s++)if(void 0===a.validPositions[s]&&!r.isMask.call(this,s,!0)){if(0==s?n.getTest.call(this,s):a.validPositions[s-1]){var l=n.getTests.call(this,s).slice();""===l[l.length-1].match.def&&l.pop();var u,d=n.determineTestTemplate.call(this,s,l);if(d&&(!0!==d.match.jit||"master"===d.match.newBlockMarker&&(u=a.validPositions[s+1])&&!0===u.match.optionalQuantifier)&&((d=o.extend({},d,{input:n.getPlaceholder.call(this,s,d.match,!0)||d.match.def})).generatedInput=!0,h.call(this,s,d,!0),!0!==i)){var f=a.validPositions[t].input;return a.validPositions[t]=void 0,c.call(this,t,f,!0,!0)}}}}function h(e,t,i,a){var o=this.maskset,s=this.opts,l=this.dependencyLib;function u(e,t,i){var n=t[e];if(void 0===n||!0!==n.match.static||!0===n.match.optionality||void 0!==t[0]&&void 0!==t[0].alternation)return!1;var a=i.begin<=e-1?t[e-1]&&!0===t[e-1].match.static&&t[e-1]:t[e-1],r=i.end>e+1?t[e+1]&&!0===t[e+1].match.static&&t[e+1]:t[e+1];return a&&r}var f=0,p=void 0!==e.begin?e.begin:e,h=void 0!==e.end?e.end:e;if(e.begin>e.end&&(p=e.end,h=e.begin),a=void 0!==a?a:p,p!==h||s.insertMode&&void 0!==o.validPositions[a]&&void 0===i||void 0===t){var v,m=l.extend(!0,{},o.validPositions),g=r.getLastValidPosition.call(this,void 0,!0);for(o.p=p,v=g;p<=v;v--)delete o.validPositions[v],void 0===t&&delete o.tests[v+1];var y,b,k=!0,x=a,w=x;for(t&&(o.validPositions[a]=l.extend(!0,{},t),w++,x++),v=t?h:h-1;v<=g;v++){if(void 0!==(y=m[v])&&!0!==y.generatedInput&&(h<=v||p<=v&&u(v,m,{begin:p,end:h}))){for(;""!==n.getTest.call(this,w).match.def;){if(!1!==(b=d.call(this,w,y,s))||"+"===y.match.def){"+"===y.match.def&&r.getBuffer.call(this,!0);var _=c.call(this,w,y.input,"+"!==y.match.def,"+"!==y.match.def);if(k=!1!==_,x=(_.pos||w)+1,!k&&b)break}else k=!1;if(k){void 0===t&&y.match.static&&v===e.begin&&f++;break}if(!k&&w>o.maskLength)break;w++}""==n.getTest.call(this,w).match.def&&(k=!1),w=x}if(!k)break}if(!k)return o.validPositions=l.extend(!0,{},m),r.resetMaskSet.call(this,!0),!1}else t&&n.getTest.call(this,a).match.cd===t.match.cd&&(o.validPositions[a]=l.extend(!0,{},t));return r.resetMaskSet.call(this,!0),f}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.applyInputValue=u,t.clearOptionalTail=c,t.checkVal=d,t.HandleNativePlaceholder=function(e,t){var i=e?e.inputmask:this;if(s.ie){if(e.inputmask._valueGet()!==t&&(e.placeholder!==t||""===e.placeholder)){var n=r.getBuffer.call(i).slice(),a=e.inputmask._valueGet();if(a!==t){var o=r.getLastValidPosition.call(i);-1===o&&a===r.getBufferTemplate.call(i).join("")?n=[]:-1!==o&&c.call(i,n),f(e,n)}}}else e.placeholder!==t&&(e.placeholder=t,""===e.placeholder&&e.removeAttribute("placeholder"))},t.unmaskedvalue=function(e){var t=e?e.inputmask:this,i=t.opts,n=t.maskset;if(e){if(void 0===e.inputmask)return e.value;e.inputmask&&e.inputmask.refreshValue&&u(e,e.inputmask._valueGet(!0))}var a=[],o=n.validPositions;for(var s in o)o[s]&&o[s].match&&(1!=o[s].match.static||Array.isArray(n.metadata)&&!0!==o[s].generatedInput)&&a.push(o[s].input);var l=0===a.length?"":(t.isRTL?a.reverse():a).join("");if("function"==typeof i.onUnMask){var c=(t.isRTL?r.getBuffer.call(t).slice().reverse():r.getBuffer.call(t)).join("");l=i.onUnMask.call(t,c,l,i)}return l},t.writeBuffer=f;var n=function(e){return e&&e.__esModule?e:{default:e}}(i(0)),a=i(3),r=i(1),o=i(4),s=i(8),l=i(7);function u(e,t){var i=e?e.inputmask:this,n=i.opts;e.inputmask.refreshValue=!1,"function"==typeof n.onBeforeMask&&(t=n.onBeforeMask.call(i,t,n)||t),d(e,!0,!1,t=t.toString().split("")),i.undoValue=r.getBuffer.call(i).join(""),(n.clearMaskOnLostFocus||n.clearIncomplete)&&e.inputmask._valueGet()===r.getBufferTemplate.call(i).join("")&&-1===r.getLastValidPosition.call(i)&&e.inputmask._valueSet("")}function c(e){e.length=0;for(var t,i=a.getMaskTemplate.call(this,!0,0,!0,void 0,!0);void 0!==(t=i.shift());)e.push(t);return e}function d(e,t,i,n,s){var u=e?e.inputmask:this,c=u.maskset,d=u.opts,p=u.dependencyLib,h=n.slice(),v="",m=-1,g=void 0,y=d.skipOptionalPartCharacter;d.skipOptionalPartCharacter="",r.resetMaskSet.call(u),c.tests={},m=d.radixPoint?r.determineNewCaretPosition.call(u,{begin:0,end:0}).begin:0,c.p=m,u.caretPos={begin:m};var b=[],k=u.caretPos;if(h.forEach((function(e,t){if(void 0!==e)if(void 0===c.validPositions[t]&&h[t]===a.getPlaceholder.call(u,t)&&r.isMask.call(u,t,!0)&&!1===o.isValid.call(u,t,h[t],!0,void 0,void 0,!0))c.p++;else{var n=new p.Event("_checkval");n.which=e.toString().charCodeAt(0),v+=e;var s=r.getLastValidPosition.call(u,void 0,!0);!function(e,t){for(var i=a.getMaskTemplate.call(u,!0,0).slice(e,r.seekNext.call(u,e,!1,!1)).join("").replace(/'/g,""),n=i.indexOf(t);0<n&&" "===i[n-1];)n--;var o=0===n&&!r.isMask.call(u,e)&&(a.getTest.call(u,e).match.nativeDef===t.charAt(0)||!0===a.getTest.call(u,e).match.static&&a.getTest.call(u,e).match.nativeDef==="'"+t.charAt(0)||" "===a.getTest.call(u,e).match.nativeDef&&(a.getTest.call(u,e+1).match.nativeDef===t.charAt(0)||!0===a.getTest.call(u,e+1).match.static&&a.getTest.call(u,e+1).match.nativeDef==="'"+t.charAt(0)));if(!o&&0<n&&!r.isMask.call(u,e,!1,!0)){var s=r.seekNext.call(u,e);u.caretPos.begin<s&&(u.caretPos={begin:s})}return o}(m,v)?(g=l.EventHandlers.keypressEvent.call(u,n,!0,!1,i,u.caretPos.begin))&&(m=u.caretPos.begin+1,v=""):g=l.EventHandlers.keypressEvent.call(u,n,!0,!1,i,s+1),g?(void 0!==g.pos&&c.validPositions[g.pos]&&!0===c.validPositions[g.pos].match.static&&void 0===c.validPositions[g.pos].alternation&&(b.push(g.pos),u.isRTL||(g.forwardPosition=g.pos+1)),f.call(u,void 0,r.getBuffer.call(u),g.forwardPosition,n,!1),u.caretPos={begin:g.forwardPosition,end:g.forwardPosition},k=u.caretPos):u.caretPos=k}})),0<b.length){var x,w,_=r.seekNext.call(u,-1,void 0,!1);if(!o.isComplete.call(u,r.getBuffer.call(u))&&b.length<=_||o.isComplete.call(u,r.getBuffer.call(u))&&0<b.length&&b.length!==_&&0===b[0])for(var E=_;void 0!==(x=b.shift());){var S=new p.Event("_checkval");if((w=c.validPositions[x]).generatedInput=!0,S.which=w.input.charCodeAt(0),(g=l.EventHandlers.keypressEvent.call(u,S,!0,!1,i,E))&&void 0!==g.pos&&g.pos!==x&&c.validPositions[g.pos]&&!0===c.validPositions[g.pos].match.static)b.push(g.pos);else if(!g)break;E++}}t&&f.call(u,e,r.getBuffer.call(u),g?g.forwardPosition:u.caretPos.begin,s||new p.Event("checkval"),s&&"input"===s.type&&u.undoValue!==r.getBuffer.call(u).join("")),d.skipOptionalPartCharacter=y}function f(e,t,i,a,s){var l=e?e.inputmask:this,u=l.opts,c=l.dependencyLib;if(a&&"function"==typeof u.onBeforeWrite){var d=u.onBeforeWrite.call(l,a,t,i,u);if(d){if(d.refreshFromBuffer){var f=d.refreshFromBuffer;o.refreshFromBuffer.call(l,!0===f?f:f.start,f.end,d.buffer||t),t=r.getBuffer.call(l,!0)}void 0!==i&&(i=void 0!==d.caret?d.caret:i)}}if(void 0!==e&&(e.inputmask._valueSet(t.join("")),void 0===i||void 0!==a&&"blur"===a.type||r.caret.call(l,e,i,void 0,void 0,void 0!==a&&"keydown"===a.type&&(a.keyCode===n.default.DELETE||a.keyCode===n.default.BACKSPACE)),!0===s)){var p=c(e),h=e.inputmask._valueGet();e.inputmask.skipInputEvent=!0,p.trigger("input"),setTimeout((function(){h===r.getBufferTemplate.call(l).join("")?p.trigger("cleared"):!0===o.isComplete.call(l,t)&&p.trigger("complete")}),0)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default="undefined"!=typeof window?window:new(eval("require('jsdom').JSDOM"))("").window;exports.default=_default},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventHandlers=void 0;var n=i(1),a=function(e){return e&&e.__esModule?e:{default:e}}(i(0)),r=i(8),o=i(4),s=i(5),l=i(3);var u={keydownEvent:function(e){var t=this.inputmask,i=t.opts,u=t.dependencyLib,c=t.maskset,d=this,f=u(d),p=e.keyCode,h=n.caret.call(t,d),v=i.onKeyDown.call(this,e,n.getBuffer.call(t),h,i);if(void 0!==v)return v;if(p===a.default.BACKSPACE||p===a.default.DELETE||r.iphone&&p===a.default.BACKSPACE_SAFARI||e.ctrlKey&&p===a.default.X&&!("oncut"in d))e.preventDefault(),o.handleRemove.call(t,d,p,h),(0,s.writeBuffer)(d,n.getBuffer.call(t,!0),c.p,e,d.inputmask._valueGet()!==n.getBuffer.call(t).join(""));else if(p===a.default.END||p===a.default.PAGE_DOWN){e.preventDefault();var m=n.seekNext.call(t,n.getLastValidPosition.call(t));n.caret.call(t,d,e.shiftKey?h.begin:m,m,!0)}else p===a.default.HOME&&!e.shiftKey||p===a.default.PAGE_UP?(e.preventDefault(),n.caret.call(t,d,0,e.shiftKey?h.begin:0,!0)):(i.undoOnEscape&&p===a.default.ESCAPE||90===p&&e.ctrlKey)&&!0!==e.altKey?((0,s.checkVal)(d,!0,!1,t.undoValue.split("")),f.trigger("click")):!0===i.tabThrough&&p===a.default.TAB?!0===e.shiftKey?(h.end=n.seekPrevious.call(t,h.end,!0),!0===l.getTest.call(t,h.end-1).match.static&&h.end--,h.begin=n.seekPrevious.call(t,h.end,!0),0<=h.begin&&0<h.end&&(e.preventDefault(),n.caret.call(t,d,h.begin,h.end))):(h.begin=n.seekNext.call(t,h.begin,!0),h.end=n.seekNext.call(t,h.begin,!0),h.end<c.maskLength&&h.end--,h.begin<=c.maskLength&&(e.preventDefault(),n.caret.call(t,d,h.begin,h.end))):e.shiftKey||i.insertModeVisual&&!1===i.insertMode&&(p===a.default.RIGHT?setTimeout((function(){var e=n.caret.call(t,d);n.caret.call(t,d,e.begin)}),0):p===a.default.LEFT&&setTimeout((function(){var e=n.translatePosition.call(t,d.inputmask.caretPos.begin);n.translatePosition.call(t,d.inputmask.caretPos.end);t.isRTL?n.caret.call(t,d,e+(e===c.maskLength?0:1)):n.caret.call(t,d,e-(0===e?0:1))}),0));t.ignorable=i.ignorables.includes(p)},keypressEvent:function(e,t,i,r,l){var u=this.inputmask||this,c=u.opts,d=u.dependencyLib,f=u.maskset,p=u.el,h=d(p),v=e.which||e.charCode||e.keyCode;if(!(!0===t||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||u.ignorable))return v===a.default.ENTER&&u.undoValue!==n.getBuffer.call(u).join("")&&(u.undoValue=n.getBuffer.call(u).join(""),setTimeout((function(){h.trigger("change")}),0)),u.skipInputEvent=!0,!0;if(v){44!==v&&46!==v||3!==e.location||""===c.radixPoint||(v=c.radixPoint.charCodeAt(0));var m,g=t?{begin:l,end:l}:n.caret.call(u,p),y=String.fromCharCode(v);f.writeOutBuffer=!0;var b=o.isValid.call(u,g,y,r,void 0,void 0,void 0,t);if(!1!==b&&(n.resetMaskSet.call(u,!0),m=void 0!==b.caret?b.caret:n.seekNext.call(u,b.pos.begin?b.pos.begin:b.pos),f.p=m),m=c.numericInput&&void 0===b.caret?n.seekPrevious.call(u,m):m,!1!==i&&(setTimeout((function(){c.onKeyValidation.call(p,v,b)}),0),f.writeOutBuffer&&!1!==b)){var k=n.getBuffer.call(u);(0,s.writeBuffer)(p,k,m,e,!0!==t)}if(e.preventDefault(),t)return!1!==b&&(b.forwardPosition=m),b}},keyupEvent:function(e){var t=this.inputmask;!t.isComposing||e.keyCode!==a.default.KEY_229&&e.keyCode!==a.default.ENTER||t.$el.trigger("input")},pasteEvent:function(e){var t,i=this.inputmask,a=i.opts,r=i._valueGet(!0),o=n.caret.call(i,this);i.isRTL&&(t=o.end,o.end=o.begin,o.begin=t);var l=r.substr(0,o.begin),u=r.substr(o.end,r.length);if(l==(i.isRTL?n.getBufferTemplate.call(i).slice().reverse():n.getBufferTemplate.call(i)).slice(0,o.begin).join("")&&(l=""),u==(i.isRTL?n.getBufferTemplate.call(i).slice().reverse():n.getBufferTemplate.call(i)).slice(o.end).join("")&&(u=""),window.clipboardData&&window.clipboardData.getData)r=l+window.clipboardData.getData("Text")+u;else{if(!e.clipboardData||!e.clipboardData.getData)return!0;r=l+e.clipboardData.getData("text/plain")+u}var c=r;if("function"==typeof a.onBeforePaste){if(!1===(c=a.onBeforePaste.call(i,r,a)))return e.preventDefault();c=c||r}return(0,s.checkVal)(this,!0,!1,c.toString().split(""),e),e.preventDefault()},inputFallBackEvent:function(e){var t=this.inputmask,i=t.opts,o=t.dependencyLib;var c=this,d=c.inputmask._valueGet(!0),f=(t.isRTL?n.getBuffer.call(t).slice().reverse():n.getBuffer.call(t)).join(""),p=n.caret.call(t,c,void 0,void 0,!0);if(f!==d){d=function(e,i,a){if(r.iemobile){var o=i.replace(n.getBuffer.call(t).join(""),"");if(1===o.length){var s=i.split("");s.splice(a.begin,0,o),i=s.join("")}}return i}(0,d,p);var h=function(e,a,r){for(var o,s,u,c=e.substr(0,r.begin).split(""),d=e.substr(r.begin).split(""),f=a.substr(0,r.begin).split(""),p=a.substr(r.begin).split(""),h=c.length>=f.length?c.length:f.length,v=d.length>=p.length?d.length:p.length,m="",g=[];c.length<h;)c.push("~");for(;f.length<h;)f.push("~");for(;d.length<v;)d.unshift("~");for(;p.length<v;)p.unshift("~");var y=c.concat(d),b=f.concat(p);for(s=0,o=y.length;s<o;s++)switch(u=l.getPlaceholder.call(t,n.translatePosition.call(t,s)),m){case"insertText":b[s-1]===y[s]&&r.begin==y.length-1&&g.push(y[s]),s=o;break;case"insertReplacementText":case"deleteContentBackward":"~"===y[s]?r.end++:s=o;break;default:y[s]!==b[s]&&("~"!==y[s+1]&&y[s+1]!==u&&void 0!==y[s+1]||(b[s]!==u||"~"!==b[s+1])&&"~"!==b[s]?"~"===b[s+1]&&b[s]===y[s+1]?(m="insertText",g.push(y[s]),r.begin--,r.end--):y[s]!==u&&"~"!==y[s]&&("~"===y[s+1]||b[s]!==y[s]&&b[s+1]===y[s+1])?(m="insertReplacementText",g.push(y[s]),r.begin--):"~"===y[s]?(m="deleteContentBackward",!n.isMask.call(t,n.translatePosition.call(t,s),!0)&&b[s]!==i.radixPoint||r.end++):s=o:(m="insertText",g.push(y[s]),r.begin--,r.end--))}return{action:m,data:g,caret:r}}(d,f,p);switch((c.inputmask.shadowRoot||document).activeElement!==c&&c.focus(),(0,s.writeBuffer)(c,n.getBuffer.call(t)),n.caret.call(t,c,p.begin,p.end,!0),h.action){case"insertText":case"insertReplacementText":h.data.forEach((function(e,i){var n=new o.Event("keypress");n.which=e.charCodeAt(0),t.ignorable=!1,u.keypressEvent.call(c,n)})),setTimeout((function(){t.$el.trigger("keyup")}),0);break;case"deleteContentBackward":var v=new o.Event("keydown");v.keyCode=a.default.BACKSPACE,u.keydownEvent.call(c,v);break;default:(0,s.applyInputValue)(c,d)}e.preventDefault()}},compositionendEvent:function(e){var t=this.inputmask;t.isComposing=!1,t.$el.trigger("input")},setValueEvent:function(e,t,i){var a=this.inputmask,r=e&&e.detail?e.detail[0]:t;void 0===r&&(r=this.inputmask._valueGet(!0)),(0,s.applyInputValue)(this,r),(e.detail&&void 0!==e.detail[1]||void 0!==i)&&n.caret.call(a,this,e.detail?e.detail[1]:i)},focusEvent:function(e){var t=this.inputmask,i=t.opts,a=this.inputmask._valueGet();i.showMaskOnFocus&&a!==n.getBuffer.call(t).join("")&&(0,s.writeBuffer)(this,n.getBuffer.call(t),n.seekNext.call(t,n.getLastValidPosition.call(t))),!0!==i.positionCaretOnTab||!1!==t.mouseEnter||o.isComplete.call(t,n.getBuffer.call(t))&&-1!==n.getLastValidPosition.call(t)||u.clickEvent.apply(this,[e,!0]),t.undoValue=n.getBuffer.call(t).join("")},invalidEvent:function(e){this.inputmask.validationEvent=!0},mouseleaveEvent:function(){var e=this.inputmask,t=e.opts;e.mouseEnter=!1,t.clearMaskOnLostFocus&&(this.inputmask.shadowRoot||document).activeElement!==this&&(0,s.HandleNativePlaceholder)(this,e.originalPlaceholder)},clickEvent:function(e,t){var i=this.inputmask;if((this.inputmask.shadowRoot||document).activeElement===this){var a=n.determineNewCaretPosition.call(i,n.caret.call(i,this),t);void 0!==a&&n.caret.call(i,this,a)}},cutEvent:function(e){var t=this.inputmask,i=t.maskset,r=n.caret.call(t,this),l=window.clipboardData||e.clipboardData,u=t.isRTL?n.getBuffer.call(t).slice(r.end,r.begin):n.getBuffer.call(t).slice(r.begin,r.end);l.setData("text",t.isRTL?u.reverse().join(""):u.join("")),document.execCommand&&document.execCommand("copy"),o.handleRemove.call(t,this,a.default.DELETE,r),(0,s.writeBuffer)(this,n.getBuffer.call(t),i.p,e,t.undoValue!==n.getBuffer.call(t).join(""))},blurEvent:function(e){var t=this.inputmask,i=t.opts,a=(0,t.dependencyLib)(this);if(this.inputmask){(0,s.HandleNativePlaceholder)(this,t.originalPlaceholder);var r=this.inputmask._valueGet(),l=n.getBuffer.call(t).slice();""!==r&&(i.clearMaskOnLostFocus&&(-1===n.getLastValidPosition.call(t)&&r===n.getBufferTemplate.call(t).join("")?l=[]:s.clearOptionalTail.call(t,l)),!1===o.isComplete.call(t,l)&&(setTimeout((function(){a.trigger("incomplete")}),0),i.clearIncomplete&&(n.resetMaskSet.call(t),l=i.clearMaskOnLostFocus?[]:n.getBufferTemplate.call(t).slice())),(0,s.writeBuffer)(this,l,void 0,e)),t.undoValue!==n.getBuffer.call(t).join("")&&(t.undoValue=n.getBuffer.call(t).join(""),a.trigger("change"))}},mouseenterEvent:function(){var e=this.inputmask,t=e.opts;e.mouseEnter=!0,(this.inputmask.shadowRoot||document).activeElement!==this&&(null==e.originalPlaceholder&&this.placeholder!==e.originalPlaceholder&&(e.originalPlaceholder=this.placeholder),t.showMaskOnHover&&(0,s.HandleNativePlaceholder)(this,(e.isRTL?n.getBufferTemplate.call(e).slice().reverse():n.getBufferTemplate.call(e)).join("")))},submitEvent:function(){var e=this.inputmask,t=e.opts;e.undoValue!==n.getBuffer.call(e).join("")&&e.$el.trigger("change"),t.clearMaskOnLostFocus&&-1===n.getLastValidPosition.call(e)&&e._valueGet&&e._valueGet()===n.getBufferTemplate.call(e).join("")&&e._valueSet(""),t.clearIncomplete&&!1===o.isComplete.call(e,n.getBuffer.call(e))&&e._valueSet(""),t.removeMaskOnSubmit&&(e._valueSet(e.unmaskedvalue(),!0),setTimeout((function(){(0,s.writeBuffer)(e.el,n.getBuffer.call(e))}),0))},resetEvent:function(){var e=this.inputmask;e.refreshValue=!0,setTimeout((function(){(0,s.applyInputValue)(e.el,e._valueGet(!0))}),0)}};t.EventHandlers=u},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.iphone=t.iemobile=t.mobile=t.ie=t.ua=void 0;var n=window.navigator&&window.navigator.userAgent||"",a=0<n.indexOf("MSIE ")||0<n.indexOf("Trident/"),r="ontouchstart"in window,o=/iemobile/i.test(n),s=/iphone/i.test(n)&&!o;t.iphone=s,t.iemobile=o,t.mobile=r,t.ie=a,t.ua=n},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(i(12)),a=s(i(6)),r=s(i(18)),o=i(19);function s(e){return e&&e.__esModule?e:{default:e}}var l=a.default.document;function u(e){return e instanceof u?e:this instanceof u?void(null!=e&&e!==a.default&&(this[0]=e.nodeName?e:void 0!==e[0]&&e[0].nodeName?e[0]:l.querySelector(e),void 0!==this[0]&&null!==this[0]&&(this[0].eventRegistry=this[0].eventRegistry||{}))):new u(e)}u.prototype={on:o.on,off:o.off,trigger:o.trigger},u.extend=n.default,u.data=r.default,u.Event=o.Event;var c=u;t.default=c},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.mask=function(){var e=this,t=this.opts,i=this.el,c=this.dependencyLib;o.EventRuler.off(i);var d=function(t,i){"textarea"!==t.tagName.toLowerCase()&&i.ignorables.push(n.default.ENTER);var s=t.getAttribute("type"),l="input"===t.tagName.toLowerCase()&&i.supportsInputType.includes(s)||t.isContentEditable||"textarea"===t.tagName.toLowerCase();if(!l)if("input"===t.tagName.toLowerCase()){var u=document.createElement("input");u.setAttribute("type",s),l="text"===u.type,u=null}else l="partial";return!1!==l?function(t){var n,s;function l(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==a.getLastValidPosition.call(e)||!0!==i.nullable?(this.inputmask.shadowRoot||document.activeElement)===this&&i.clearMaskOnLostFocus?(e.isRTL?r.clearOptionalTail.call(e,a.getBuffer.call(e).slice()).reverse():r.clearOptionalTail.call(e,a.getBuffer.call(e).slice())).join(""):n.call(this):"":n.call(this)}function u(e){s.call(this,e),this.inputmask&&(0,r.applyInputValue)(this,e)}if(!t.inputmask.__valueGet){if(!0!==i.noValuePatching){if(Object.getOwnPropertyDescriptor){var d=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value"):void 0;d&&d.get&&d.set?(n=d.get,s=d.set,Object.defineProperty(t,"value",{get:l,set:u,configurable:!0})):"input"!==t.tagName.toLowerCase()&&(n=function(){return this.textContent},s=function(e){this.textContent=e},Object.defineProperty(t,"value",{get:l,set:u,configurable:!0}))}else document.__lookupGetter__&&t.__lookupGetter__("value")&&(n=t.__lookupGetter__("value"),s=t.__lookupSetter__("value"),t.__defineGetter__("value",l),t.__defineSetter__("value",u));t.inputmask.__valueGet=n,t.inputmask.__valueSet=s}t.inputmask._valueGet=function(t){return e.isRTL&&!0!==t?n.call(this.el).split("").reverse().join(""):n.call(this.el)},t.inputmask._valueSet=function(t,i){s.call(this.el,null==t?"":!0!==i&&e.isRTL?t.split("").reverse().join(""):t)},void 0===n&&(n=function(){return this.value},s=function(e){this.value=e},function(t){if(c.valHooks&&(void 0===c.valHooks[t]||!0!==c.valHooks[t].inputmaskpatch)){var n=c.valHooks[t]&&c.valHooks[t].get?c.valHooks[t].get:function(e){return e.value},o=c.valHooks[t]&&c.valHooks[t].set?c.valHooks[t].set:function(e,t){return e.value=t,e};c.valHooks[t]={get:function(t){if(t.inputmask){if(t.inputmask.opts.autoUnmask)return t.inputmask.unmaskedvalue();var r=n(t);return-1!==a.getLastValidPosition.call(e,void 0,void 0,t.inputmask.maskset.validPositions)||!0!==i.nullable?r:""}return n(t)},set:function(e,t){var i=o(e,t);return e.inputmask&&(0,r.applyInputValue)(e,t),i},inputmaskpatch:!0}}}(t.type),function(t){o.EventRuler.on(t,"mouseenter",(function(){var t=this.inputmask._valueGet(!0);t!==(e.isRTL?a.getBuffer.call(e).reverse():a.getBuffer.call(e)).join("")&&(0,r.applyInputValue)(this,t)}))}(t))}}(t):t.inputmask=void 0,l}(i,t);if(!1!==d){e.originalPlaceholder=i.placeholder,e.maxLength=void 0!==i?i.maxLength:void 0,-1===e.maxLength&&(e.maxLength=void 0),"inputMode"in i&&null===i.getAttribute("inputmode")&&(i.inputMode=t.inputmode,i.setAttribute("inputmode",t.inputmode)),!0===d&&(t.showMaskOnFocus=t.showMaskOnFocus&&-1===["cc-number","cc-exp"].indexOf(i.autocomplete),s.iphone&&(t.insertModeVisual=!1),o.EventRuler.on(i,"submit",u.EventHandlers.submitEvent),o.EventRuler.on(i,"reset",u.EventHandlers.resetEvent),o.EventRuler.on(i,"blur",u.EventHandlers.blurEvent),o.EventRuler.on(i,"focus",u.EventHandlers.focusEvent),o.EventRuler.on(i,"invalid",u.EventHandlers.invalidEvent),o.EventRuler.on(i,"click",u.EventHandlers.clickEvent),o.EventRuler.on(i,"mouseleave",u.EventHandlers.mouseleaveEvent),o.EventRuler.on(i,"mouseenter",u.EventHandlers.mouseenterEvent),o.EventRuler.on(i,"paste",u.EventHandlers.pasteEvent),o.EventRuler.on(i,"cut",u.EventHandlers.cutEvent),o.EventRuler.on(i,"complete",t.oncomplete),o.EventRuler.on(i,"incomplete",t.onincomplete),o.EventRuler.on(i,"cleared",t.oncleared),!0!==t.inputEventOnly&&(o.EventRuler.on(i,"keydown",u.EventHandlers.keydownEvent),o.EventRuler.on(i,"keypress",u.EventHandlers.keypressEvent),o.EventRuler.on(i,"keyup",u.EventHandlers.keyupEvent)),(s.mobile||t.inputEventOnly)&&i.removeAttribute("maxLength"),o.EventRuler.on(i,"input",u.EventHandlers.inputFallBackEvent),o.EventRuler.on(i,"compositionend",u.EventHandlers.compositionendEvent)),o.EventRuler.on(i,"setvalue",u.EventHandlers.setValueEvent),e.undoValue=a.getBufferTemplate.call(e).join("");var f=(i.inputmask.shadowRoot||document).activeElement;if(""!==i.inputmask._valueGet(!0)||!1===t.clearMaskOnLostFocus||f===i){(0,r.applyInputValue)(i,i.inputmask._valueGet(!0),t);var p=a.getBuffer.call(e).slice();!1===l.isComplete.call(e,p)&&t.clearIncomplete&&a.resetMaskSet.call(e),t.clearMaskOnLostFocus&&f!==i&&(-1===a.getLastValidPosition.call(e)?p=[]:r.clearOptionalTail.call(e,p)),(!1===t.clearMaskOnLostFocus||t.showMaskOnFocus&&f===i||""!==i.inputmask._valueGet(!0))&&(0,r.writeBuffer)(i,p),f===i&&a.caret.call(e,i,a.seekNext.call(e,a.getLastValidPosition.call(e)))}}};var n=function(e){return e&&e.__esModule?e:{default:e}}(i(0)),a=i(1),r=i(5),o=i(11),s=i(8),l=i(4),u=i(7)},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventRuler=void 0;var n=s(i(2)),a=s(i(0)),r=i(1),o=i(5);function s(e){return e&&e.__esModule?e:{default:e}}var l={on:function(e,t,i){var s=e.inputmask.dependencyLib,l=function(t){t.originalEvent&&(t=t.originalEvent||t,arguments[0]=t);var l,u=this,c=u.inputmask,d=c?c.opts:void 0;if(void 0===c&&"FORM"!==this.nodeName){var f=s.data(u,"_inputmask_opts");s(u).off(),f&&new n.default(f).mask(u)}else{if(["submit","reset","setvalue"].includes(t.type)||"FORM"===this.nodeName||!(u.disabled||u.readOnly&&!("keydown"===t.type&&t.ctrlKey&&67===t.keyCode||!1===d.tabThrough&&t.keyCode===a.default.TAB))){switch(t.type){case"input":if(!0===c.skipInputEvent||t.inputType&&"insertCompositionText"===t.inputType)return c.skipInputEvent=!1,t.preventDefault();break;case"keydown":c.skipKeyPressEvent=!1,c.skipInputEvent=c.isComposing=t.keyCode===a.default.KEY_229;break;case"keyup":case"compositionend":c.isComposing&&(c.skipInputEvent=!1);break;case"keypress":if(!0===c.skipKeyPressEvent)return t.preventDefault();c.skipKeyPressEvent=!0;break;case"click":case"focus":return c.validationEvent?(c.validationEvent=!1,e.blur(),(0,o.HandleNativePlaceholder)(e,(c.isRTL?r.getBufferTemplate.call(c).slice().reverse():r.getBufferTemplate.call(c)).join("")),setTimeout((function(){e.focus()}),3e3)):(l=arguments,setTimeout((function(){e.inputmask&&i.apply(u,l)}),0)),!1}var p=i.apply(u,arguments);return!1===p&&(t.preventDefault(),t.stopPropagation()),p}t.preventDefault()}};e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(l),["submit","reset"].includes(t)?null!==e.form&&s(e.form).on(t,l.bind(e)):s(e).on(t,l)},off:function(e,t){if(e.inputmask&&e.inputmask.events){var i=e.inputmask.dependencyLib,n=e.inputmask.events;for(var a in t&&((n=[])[t]=e.inputmask.events[t]),n){for(var r=n[a];0<r.length;){var o=r.pop();["submit","reset"].includes(a)?null!==e.form&&i(e.form).off(a,o):i(e).off(a,o)}delete e.inputmask.events[a]}}}};t.EventRuler=l},function(e,t,i){function n(e){return n="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(e){return _typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof2(e)},n(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(){var t,i,a,r,o,s,l=arguments[0]||{},u=1,c=arguments.length,d=!1;for("boolean"==typeof l&&(d=l,l=arguments[u]||{},u++),"object"!==n(l)&&"function"!=typeof l&&(l={});u<c;u++)if(null!=(t=arguments[u]))for(i in t)a=l[i],l!==(r=t[i])&&(d&&r&&("[object Object]"===Object.prototype.toString.call(r)||(o=Array.isArray(r)))?(s=o?(o=!1,a&&Array.isArray(a)?a:[]):a&&"[object Object]"===Object.prototype.toString.call(a)?a:{},l[i]=e(d,s,r)):void 0!==r&&(l[i]=r));return l}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.replace(n,"\\$1")};var n=new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"].join("|\\")+")","gim")},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,i(15),i(23),i(24),i(25);var n=function(e){return e&&e.__esModule?e:{default:e}}(i(2));var a=n.default;t.default=a},function(e,t,i){var n=function(e){return e&&e.__esModule?e:{default:e}}(i(2));n.default.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"#":{validator:"[0-9A-Fa-f]",casing:"upper"}});var a=new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]");function r(e,t,i,n,r){return e=-1<i-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,-1<i-2&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):"00"+e,a.test(e)}n.default.extendAliases({cssunit:{regex:"[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"},url:{regex:"(https?|ftp)://.*",autoUnmask:!1,keepStatic:!1,tabThrough:!0},ip:{mask:"i[i[i]].j[j[j]].k[k[k]].l[l[l]]",definitions:{i:{validator:r},j:{validator:r},k:{validator:r},l:{validator:r}},onUnMask:function(e,t,i){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,casing:"lower",onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ!#$%&'*+/=?^_`{|}~-]"},"-":{validator:"[0-9A-Za-z-]"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",casing:"upper"}},clearIncomplete:!0,autoUnmask:!0},ssn:{mask:"999-99-9999",postValidation:function(e,t,i,n,a,r,o){return/^(?!219-09-9999|078-05-1120)(?!666|000|9.{2}).{3}-(?!00).{2}-(?!0{4}).{4}$/.test(e.join(""))}}})},function(e,t,i){function n(e){return n="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(e){return _typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof2(e)},n(e)}"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===n("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype})},function(e,t,i){Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw new TypeError('"this" is null or not defined');var i=Object(this),n=i.length>>>0;if(0==n)return!1;for(var a=0|t,r=Math.max(0<=a?a:n-Math.abs(a),0);r<n;){if(i[r]===e)return!0;r++}return!1}})},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i){if(void 0===i)return e.__data?e.__data[t]:null;e.__data=e.__data||{},e.__data[t]=i}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.on=function(e,t){function i(e,i){a.addEventListener?a.addEventListener(e,t,!1):a.attachEvent&&a.attachEvent("on"+e,t),n[e]=n[e]||{},n[e][i]=n[e][i]||[],n[e][i].push(t)}if(l(this[0]))for(var n=this[0].eventRegistry,a=this[0],r=e.split(" "),o=0;o<r.length;o++){var s=r[o].split(".");i(s[0],s[1]||"global")}return this},t.off=function(e,t){var i,n;function a(e,t,a){if(e in i==1)if(n.removeEventListener?n.removeEventListener(e,a,!1):n.detachEvent&&n.detachEvent("on"+e,a),"global"===t)for(var r in i[e])i[e][r].splice(i[e][r].indexOf(a),1);else i[e][t].splice(i[e][t].indexOf(a),1)}function r(e,n){var a,r,o=[];if(0<e.length)if(void 0===t)for(a=0,r=i[e][n].length;a<r;a++)o.push({ev:e,namespace:n&&0<n.length?n:"global",handler:i[e][n][a]});else o.push({ev:e,namespace:n&&0<n.length?n:"global",handler:t});else if(0<n.length)for(var s in i)for(var l in i[s])if(l===n)if(void 0===t)for(a=0,r=i[s][l].length;a<r;a++)o.push({ev:s,namespace:l,handler:i[s][l][a]});else o.push({ev:s,namespace:l,handler:t});return o}if(l(this[0])){i=this[0].eventRegistry,n=this[0];for(var o=e.split(" "),s=0;s<o.length;s++)for(var u=o[s].split("."),c=r(u[0],u[1]),d=0,f=c.length;d<f;d++)a(c[d].ev,c[d].namespace,c[d].handler)}return this},t.trigger=function(e){if(l(this[0]))for(var t=this[0].eventRegistry,i=this[0],n="string"==typeof e?e.split(" "):[e.type],r=0;r<n.length;r++){var s=n[r].split("."),u=s[0],c=s[1]||"global";if(void 0!==document&&"global"===c){var d,f,p={bubbles:!0,cancelable:!0,detail:arguments[1]};if(document.createEvent){try{d=new CustomEvent(u,p)}catch(e){(d=document.createEvent("CustomEvent")).initCustomEvent(u,p.bubbles,p.cancelable,p.detail)}e.type&&(0,a.default)(d,e),i.dispatchEvent(d)}else(d=document.createEventObject()).eventType=u,d.detail=arguments[1],e.type&&(0,a.default)(d,e),i.fireEvent("on"+d.eventType,d)}else if(void 0!==t[u])if(arguments[0]=arguments[0].type?arguments[0]:o.default.Event(arguments[0]),arguments[0].detail=arguments.slice(1),"global"===c)for(var h in t[u])for(f=0;f<t[u][h].length;f++)t[u][h][f].apply(i,arguments);else for(f=0;f<t[u][c].length;f++)t[u][c][f].apply(i,arguments)}return this},t.Event=void 0;var n,a=s(i(12)),r=s(i(6)),o=s(i(9));function s(e){return e&&e.__esModule?e:{default:e}}function l(e){return e instanceof Element}t.Event=n,"function"==typeof r.default.CustomEvent?t.Event=n=r.default.CustomEvent:(t.Event=n=function(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var i=document.createEvent("CustomEvent");return i.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),i},n.prototype=r.default.Event.prototype)},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.generateMaskSet=function(e,t){function i(e,i,a){var r,o,s=!1;if(null!==e&&""!==e||(e=(s=null!==a.regex)?(e=a.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(s=!0,".*")),1===e.length&&!1===a.greedy&&0!==a.repeat&&(a.placeholder=""),0<a.repeat||"*"===a.repeat||"+"===a.repeat){var l="*"===a.repeat?0:"+"===a.repeat?1:a.repeat;e=a.groupmarker[0]+e+a.groupmarker[1]+a.quantifiermarker[0]+l+","+a.repeat+a.quantifiermarker[1]}return o=s?"regex_"+a.regex:a.numericInput?e.split("").reverse().join(""):e,!1!==a.keepStatic&&(o="ks_"+o),void 0===Inputmask.prototype.masksCache[o]||!0===t?(r={mask:e,maskToken:Inputmask.prototype.analyseMask(e,s,a),validPositions:{},_buffer:void 0,buffer:void 0,tests:{},excludes:{},metadata:i,maskLength:void 0,jitOffset:{}},!0!==t&&(Inputmask.prototype.masksCache[o]=r,r=n.default.extend(!0,{},Inputmask.prototype.masksCache[o]))):r=n.default.extend(!0,{},Inputmask.prototype.masksCache[o]),r}if("function"==typeof e.mask&&(e.mask=e.mask(e)),Array.isArray(e.mask)){if(1<e.mask.length){null===e.keepStatic&&(e.keepStatic=!0);var a=e.groupmarker[0];return(e.isRTL?e.mask.reverse():e.mask).forEach((function(t){1<a.length&&(a+=e.groupmarker[1]+e.alternatormarker+e.groupmarker[0]),void 0!==t.mask&&"function"!=typeof t.mask?a+=t.mask:a+=t})),i(a+=e.groupmarker[1],e.mask,e)}e.mask=e.mask.pop()}return null===e.keepStatic&&(e.keepStatic=!1),e.mask&&void 0!==e.mask.mask&&"function"!=typeof e.mask.mask?i(e.mask.mask,e.mask,e):i(e.mask,e.mask,e)},t.analyseMask=function(e,t,i){var n,a,r,o,s,l,u=/(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g,c=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,d=!1,f=new m,p=[],h=[],v=!1;function m(e,t,i,n){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=n||!1,this.quantifier={min:1,max:1}}function g(e,n,a){a=void 0!==a?a:e.matches.length;var r=e.matches[a-1];if(t)0===n.indexOf("[")||d&&/\\d|\\s|\\w]/i.test(n)||"."===n?e.matches.splice(a++,0,{fn:new RegExp(n,i.casing?"i":""),static:!1,optionality:!1,newBlockMarker:void 0===r?"master":r.def!==n,casing:null,def:n,placeholder:void 0,nativeDef:n}):(d&&(n=n[n.length-1]),n.split("").forEach((function(t,n){r=e.matches[a-1],e.matches.splice(a++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||t)?new RegExp("["+(i.staticDefinitionSymbol||t)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===r?"master":r.def!==t&&!0!==r.static,casing:null,def:i.staticDefinitionSymbol||t,placeholder:void 0!==i.staticDefinitionSymbol?t:void 0,nativeDef:(d?"'":"")+t})}))),d=!1;else{var o=i.definitions&&i.definitions[n]||i.usePrototypeDefinitions&&Inputmask.prototype.definitions[n];o&&!d?e.matches.splice(a++,0,{fn:o.validator?"string"==typeof o.validator?new RegExp(o.validator,i.casing?"i":""):new function(){this.test=o.validator}:new RegExp("."),static:o.static||!1,optionality:!1,newBlockMarker:void 0===r?"master":r.def!==(o.definitionSymbol||n),casing:o.casing,def:o.definitionSymbol||n,placeholder:o.placeholder,nativeDef:n,generated:o.generated}):(e.matches.splice(a++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||n)?new RegExp("["+(i.staticDefinitionSymbol||n)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===r?"master":r.def!==n&&!0!==r.static,casing:null,def:i.staticDefinitionSymbol||n,placeholder:void 0!==i.staticDefinitionSymbol?n:void 0,nativeDef:(d?"'":"")+n}),d=!1)}}function y(){if(0<p.length){if(g(o=p[p.length-1],a),o.isAlternator){s=p.pop();for(var e=0;e<s.matches.length;e++)s.matches[e].isGroup&&(s.matches[e].isGroup=!1);0<p.length?(o=p[p.length-1]).matches.push(s):f.matches.push(s)}}else g(f,a)}function b(e){var t=new m(!0);return t.openGroup=!1,t.matches=e,t}function k(){if((r=p.pop()).openGroup=!1,void 0!==r)if(0<p.length){if((o=p[p.length-1]).matches.push(r),o.isAlternator){s=p.pop();for(var e=0;e<s.matches.length;e++)s.matches[e].isGroup=!1,s.matches[e].alternatorGroup=!1;0<p.length?(o=p[p.length-1]).matches.push(s):f.matches.push(s)}}else f.matches.push(r);else y()}function x(e){var t=e.pop();return t.isQuantifier&&(t=b([e.pop(),t])),t}for(t&&(i.optionalmarker[0]=void 0,i.optionalmarker[1]=void 0);n=t?c.exec(e):u.exec(e);){if(a=n[0],t)switch(a.charAt(0)){case"?":a="{0,1}";break;case"+":case"*":a="{"+a+"}";break;case"|":if(0===p.length){var w=b(f.matches);w.openGroup=!0,p.push(w),f.matches=[],v=!0}}if(d)y();else switch(a.charAt(0)){case"$":case"^":t||y();break;case"(?=":case"(?!":case"(?<=":case"(?<!":break;case i.escapeChar:d=!0,t&&y();break;case i.optionalmarker[1]:case i.groupmarker[1]:k();break;case i.optionalmarker[0]:p.push(new m(!1,!0));break;case i.groupmarker[0]:p.push(new m(!0));break;case i.quantifiermarker[0]:var _=new m(!1,!1,!0),E=(a=a.replace(/[{}]/g,"")).split("|"),S=E[0].split(","),P=isNaN(S[0])?S[0]:parseInt(S[0]),C=1===S.length?P:isNaN(S[1])?S[1]:parseInt(S[1]);"*"!==P&&"+"!==P||(P="*"===C?0:1),_.quantifier={min:P,max:C,jit:E[1]};var M=0<p.length?p[p.length-1].matches:f.matches;if((n=M.pop()).isAlternator){M.push(n),M=n.matches;var T=new m(!0),O=M.pop();M.push(T),M=T.matches,n=O}n.isGroup||(n=b([n])),M.push(n),M.push(_);break;case i.alternatormarker:if(0<p.length){var L=(o=p[p.length-1]).matches[o.matches.length-1];l=o.openGroup&&(void 0===L.matches||!1===L.isGroup&&!1===L.isAlternator)?p.pop():x(o.matches)}else l=x(f.matches);if(l.isAlternator)p.push(l);else if(l.alternatorGroup?(s=p.pop(),l.alternatorGroup=!1):s=new m(!1,!1,!1,!0),s.matches.push(l),p.push(s),l.openGroup){l.openGroup=!1;var A=new m(!0);A.alternatorGroup=!0,p.push(A)}break;default:y()}}for(v&&k();0<p.length;)r=p.pop(),f.matches.push(r);return 0<f.matches.length&&(function e(n){n&&n.matches&&n.matches.forEach((function(a,r){var o=n.matches[r+1];(void 0===o||void 0===o.matches||!1===o.isQuantifier)&&a&&a.isGroup&&(a.isGroup=!1,t||(g(a,i.groupmarker[0],0),!0!==a.openGroup&&g(a,i.groupmarker[1]))),e(a)}))}(f),h.push(f)),(i.numericInput||i.isRTL)&&function e(t){for(var n in t.matches=t.matches.reverse(),t.matches)if(Object.prototype.hasOwnProperty.call(t.matches,n)){var a=parseInt(n);if(t.matches[n].isQuantifier&&t.matches[a+1]&&t.matches[a+1].isGroup){var r=t.matches[n];t.matches.splice(n,1),t.matches.splice(a+1,0,r)}void 0!==t.matches[n].matches?t.matches[n]=e(t.matches[n]):t.matches[n]=((o=t.matches[n])===i.optionalmarker[0]?o=i.optionalmarker[1]:o===i.optionalmarker[1]?o=i.optionalmarker[0]:o===i.groupmarker[0]?o=i.groupmarker[1]:o===i.groupmarker[1]&&(o=i.groupmarker[0]),o)}var o;return t}(h[0]),h};var n=function(e){return e&&e.__esModule?e:{default:e}}(i(9))},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={9:{validator:"[0-9０-９]",definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",definitionSymbol:"*"},"*":{validator:"[0-9０-９A-Za-zА-яЁёÀ-ÿµ]"}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={_maxTestPos:500,placeholder:"_",optionalmarker:["[","]"],quantifiermarker:["{","}"],groupmarker:["(",")"],alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:function(){},onincomplete:function(){},oncleared:function(){},repeat:0,greedy:!1,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,insertModeVisual:!0,clearIncomplete:!1,alias:null,onKeyDown:function(){},onBeforeMask:null,onBeforePaste:function(e,t){return"function"==typeof t.onBeforeMask?t.onBeforeMask.call(this,e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:function(){},skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",_radixDance:!1,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","url","password","search"],ignorables:[8,9,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,preValidation:null,postValidation:null,staticDefinitionSymbol:void 0,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"text",importDataAttributes:!0,shiftPositions:!0,usePrototypeDefinitions:!0}},function(e,t,i){var n=l(i(2)),a=l(i(0)),r=l(i(13)),o=i(1);function s(e){return s="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(e){return _typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof2(e)},s(e)}function l(e){return e&&e.__esModule?e:{default:e}}var u=n.default.dependencyLib,c=(new Date).getFullYear(),d={d:["[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",Date.prototype.getDate],dd:["0[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",function(){return g(Date.prototype.getDate.call(this),2)}],ddd:[""],dddd:[""],m:["[1-9]|1[012]",Date.prototype.setMonth,"month",function(){return Date.prototype.getMonth.call(this)+1}],mm:["0[1-9]|1[012]",Date.prototype.setMonth,"month",function(){return g(Date.prototype.getMonth.call(this)+1,2)}],mmm:[""],mmmm:[""],yy:["[0-9]{2}",Date.prototype.setFullYear,"year",function(){return g(Date.prototype.getFullYear.call(this),2)}],yyyy:["[0-9]{4}",Date.prototype.setFullYear,"year",function(){return g(Date.prototype.getFullYear.call(this),4)}],h:["[1-9]|1[0-2]",Date.prototype.setHours,"hours",Date.prototype.getHours],hh:["0[1-9]|1[0-2]",Date.prototype.setHours,"hours",function(){return g(Date.prototype.getHours.call(this),2)}],hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return Date.prototype.getHours}],H:["1?[0-9]|2[0-3]",Date.prototype.setHours,"hours",Date.prototype.getHours],HH:["0[0-9]|1[0-9]|2[0-3]",Date.prototype.setHours,"hours",function(){return g(Date.prototype.getHours.call(this),2)}],Hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return function(){return g(Date.prototype.getHours.call(this),e)}}],M:["[1-5]?[0-9]",Date.prototype.setMinutes,"minutes",Date.prototype.getMinutes],MM:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setMinutes,"minutes",function(){return g(Date.prototype.getMinutes.call(this),2)}],s:["[1-5]?[0-9]",Date.prototype.setSeconds,"seconds",Date.prototype.getSeconds],ss:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setSeconds,"seconds",function(){return g(Date.prototype.getSeconds.call(this),2)}],l:["[0-9]{3}",Date.prototype.setMilliseconds,"milliseconds",function(){return g(Date.prototype.getMilliseconds.call(this),3)}],L:["[0-9]{2}",Date.prototype.setMilliseconds,"milliseconds",function(){return g(Date.prototype.getMilliseconds.call(this),2)}],t:["[ap]"],tt:["[ap]m"],T:["[AP]"],TT:["[AP]M"],Z:[""],o:[""],S:[""]},f={isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};function p(e){var t=new RegExp("\\d+$").exec(e[0]);if(t&&void 0!==t[0]){var i=d[e[0][0]+"x"].slice("");return i[0]=i[0](t[0]),i[3]=i[3](t[0]),i}if(d[e[0]])return d[e[0]]}function h(e){if(!e.tokenizer){var t=[],i=[];for(var n in d)if(/\.*x$/.test(n)){var a=n[0]+"\\d+";-1===i.indexOf(a)&&i.push(a)}else-1===t.indexOf(n[0])&&t.push(n[0]);e.tokenizer="("+(0<i.length?i.join("|")+"|":"")+t.join("+|")+")+?|.",e.tokenizer=new RegExp(e.tokenizer,"g")}return e.tokenizer}function v(e,t,i){if(void 0===e.rawday||!isFinite(e.rawday)&&new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day||"29"==e.day&&!isFinite(e.rawyear)||new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day)return t;if("29"==e.day){var n=k(t.pos,i);if("yyyy"===n.targetMatch[0]&&t.pos-n.targetMatchIndex==2)return t.remove=t.pos+1,t}else if("02"==e.month&&"30"==e.day)return e.day="03",e.date.setDate(3),e.date.setMonth(1),t.insert=[{pos:t.pos,c:"0"},{pos:t.pos+1,c:t.c}],t.caret=o.seekNext.call(this,t.pos+1),t;return!1}function m(e,t,i,n){var a,o,s="";for(h(i).lastIndex=0;a=h(i).exec(e);)if(void 0===t)if(o=p(a))s+="("+o[0]+")";else switch(a[0]){case"[":s+="(";break;case"]":s+=")?";break;default:s+=(0,r.default)(a[0])}else if(o=p(a)){if(!0!==n&&o[3])s+=o[3].call(t.date);else o[2]?s+=t["raw"+o[2]]:s+=a[0]}else s+=a[0];return s}function g(e,t){for(e=String(e),t=t||2;e.length<t;)e="0"+e;return e}function y(e,t,i){var n,a,r,o={date:new Date(1,0,1)},l=e;function u(e,t,i){if(e[n]=t.replace(/[^0-9]/g,"0"),e["raw"+n]=t,void 0!==r){var a=e[n];"day"===n&&0===parseInt(a)&&(a=1),"month"===n&&0<(a=parseInt(a))&&(a-=1),r.call(e.date,a)}}if("string"==typeof l){for(h(i).lastIndex=0;a=h(i).exec(t);){var c=new RegExp("\\d+$").exec(a[0]),f=c?a[0][0]+"x":a[0],p=void 0;if(c){var v=h(i).lastIndex,m=k(a.index,i);h(i).lastIndex=v,p=l.slice(0,l.indexOf(m.nextMatch[0]))}else p=l.slice(0,f.length);Object.prototype.hasOwnProperty.call(d,f)&&(n=d[f][2],r=d[f][1],u(o,p)),l=l.slice(p.length)}return o}if(l&&"object"===s(l)&&Object.prototype.hasOwnProperty.call(l,"date"))return l}function b(e,t){return m(t.inputFormat,{date:e},t)}function k(e,t){var i,n,a=0,r=0;for(h(t).lastIndex=0;n=h(t).exec(t.inputFormat);){var o=new RegExp("\\d+$").exec(n[0]);if(e<=(a+=r=o?parseInt(o[0]):n[0].length)){i=n,n=h(t).exec(t.inputFormat);break}}return{targetMatchIndex:a-r,nextMatch:n,targetMatch:i}}n.default.extendAliases({datetime:{mask:function(e){return e.numericInput=!1,d.S=e.i18n.ordinalSuffix.join("|"),e.inputFormat=f[e.inputFormat]||e.inputFormat,e.displayFormat=f[e.displayFormat]||e.displayFormat||e.inputFormat,e.outputFormat=f[e.outputFormat]||e.outputFormat||e.inputFormat,e.placeholder=""!==e.placeholder?e.placeholder:e.inputFormat.replace(/[[\]]/,""),e.regex=m(e.inputFormat,void 0,e),e.min=y(e.min,e.inputFormat,e),e.max=y(e.max,e.inputFormat,e),null},placeholder:"",inputFormat:"isoDateTime",displayFormat:void 0,outputFormat:void 0,min:null,max:null,skipOptionalPartCharacter:"",i18n:{dayNames:["Mon","Tue","Wed","Thu","Fri","Sat","Sun","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"],ordinalSuffix:["st","nd","rd","th"]},preValidation:function(e,t,i,n,a,r,o,s){if(s)return!0;if(isNaN(i)&&e[t]!==i){var l=k(t,a);if(l.nextMatch&&l.nextMatch[0]===i&&1<l.targetMatch[0].length){var u=d[l.targetMatch[0]][0];if(new RegExp(u).test("0"+e[t-1]))return e[t]=e[t-1],e[t-1]="0",{fuzzy:!0,buffer:e,refreshFromBuffer:{start:t-1,end:t+1},pos:t+1}}}return!0},postValidation:function(e,t,i,n,a,r,o,s){var l,u;if(o)return!0;if(!1===n)return(l=k(t+1,a)).targetMatch&&l.targetMatchIndex===t&&1<l.targetMatch[0].length&&void 0!==d[l.targetMatch[0]]&&(u=d[l.targetMatch[0]][0],new RegExp(u).test("0"+i))?{insert:[{pos:t,c:"0"},{pos:t+1,c:i}],pos:t+1}:n;if(n.fuzzy&&(e=n.buffer,t=n.pos),(l=k(t,a)).targetMatch&&l.targetMatch[0]&&void 0!==d[l.targetMatch[0]]){u=d[l.targetMatch[0]][0];var f=e.slice(l.targetMatchIndex,l.targetMatchIndex+l.targetMatch[0].length);!1===new RegExp(u).test(f.join(""))&&2===l.targetMatch[0].length&&r.validPositions[l.targetMatchIndex]&&r.validPositions[l.targetMatchIndex+1]&&(r.validPositions[l.targetMatchIndex+1].input="0")}var p=n,h=y(e.join(""),a.inputFormat,a);return p&&h.date.getTime()==h.date.getTime()&&(p=function(e,t,i){if(e.year!==e.rawyear){var n=c.toString(),a=e.rawyear.replace(/[^0-9]/g,""),r=n.slice(0,a.length),o=n.slice(a.length);if(2===a.length&&a===r){var s=new Date(c,e.month-1,e.day);e.day==s.getDate()&&(!i.max||i.max.date.getTime()>=s.getTime())&&(e.date.setFullYear(c),e.year=n,t.insert=[{pos:t.pos+1,c:o[0]},{pos:t.pos+2,c:o[1]}])}}return t}(h,p,a),p=function(e,t,i,n,a){if(!t)return t;if(i.min){if(e.rawyear){var r,o=e.rawyear.replace(/[^0-9]/g,""),s=i.min.year.substr(0,o.length);if(o<s){var l=k(t.pos,i);if(o=e.rawyear.substr(0,t.pos-l.targetMatchIndex+1).replace(/[^0-9]/g,"0"),(s=i.min.year.substr(0,o.length))<=o)return t.remove=l.targetMatchIndex+o.length,t;if(o="yyyy"===l.targetMatch[0]?e.rawyear.substr(1,1):e.rawyear.substr(0,1),s=i.min.year.substr(2,1),r=i.max?i.max.year.substr(2,1):o,1===o.length&&s<=o&&o<=r&&!0!==a)return"yyyy"===l.targetMatch[0]?(t.insert=[{pos:t.pos+1,c:o,strict:!0}],t.caret=t.pos+2,n.validPositions[t.pos].input=i.min.year[1]):(t.insert=[{pos:t.pos+1,c:i.min.year[1],strict:!0},{pos:t.pos+2,c:o,strict:!0}],t.caret=t.pos+3,n.validPositions[t.pos].input=i.min.year[0]),t;t=!1}}t&&e.year&&e.year===e.rawyear&&i.min.date.getTime()==i.min.date.getTime()&&(t=i.min.date.getTime()<=e.date.getTime())}return t&&i.max&&i.max.date.getTime()==i.max.date.getTime()&&(t=i.max.date.getTime()>=e.date.getTime()),t}(h,p=v.call(this,h,p,a),a,r,s)),t&&p&&n.pos!==t?{buffer:m(a.inputFormat,h,a).split(""),refreshFromBuffer:{start:t,end:n.pos}}:p},onKeyDown:function(e,t,i,n){e.ctrlKey&&e.keyCode===a.default.RIGHT&&(this.inputmask._valueSet(b(new Date,n)),u(this).trigger("setvalue"))},onUnMask:function(e,t,i){return t?m(i.outputFormat,y(e,i.inputFormat,i),i,!0):t},casing:function(e,t,i,n){return 0==t.nativeDef.indexOf("[ap]")?e.toLowerCase():0==t.nativeDef.indexOf("[AP]")?e.toUpperCase():e},onBeforeMask:function(e,t){return"[object Date]"===Object.prototype.toString.call(e)&&(e=b(e,t)),e},insertMode:!1,shiftPositions:!1,keepStatic:!1,inputmode:"numeric"}})},function(e,t,i){var n=o(i(2)),a=o(i(0)),r=o(i(13));function o(e){return e&&e.__esModule?e:{default:e}}var s=n.default.dependencyLib;function l(e,t){for(var i="",a=0;a<e.length;a++)n.default.prototype.definitions[e.charAt(a)]||t.definitions[e.charAt(a)]||t.optionalmarker[0]===e.charAt(a)||t.optionalmarker[1]===e.charAt(a)||t.quantifiermarker[0]===e.charAt(a)||t.quantifiermarker[1]===e.charAt(a)||t.groupmarker[0]===e.charAt(a)||t.groupmarker[1]===e.charAt(a)||t.alternatormarker===e.charAt(a)?i+="\\"+e.charAt(a):i+=e.charAt(a);return i}function u(e,t,i,n){if(0<e.length&&0<t&&(!i.digitsOptional||n)){var a=e.indexOf(i.radixPoint),r=!1;i.negationSymbol.back===e[e.length-1]&&(r=!0,e.length--),-1===a&&(e.push(i.radixPoint),a=e.length-1);for(var o=1;o<=t;o++)isFinite(e[a+o])||(e[a+o]="0")}return r&&e.push(i.negationSymbol.back),e}function c(e,t){var i=0;if("+"===e){for(i in t.validPositions);i=parseInt(i)}for(var n in t.tests)if(i<=(n=parseInt(n)))for(var a=0,r=t.tests[n].length;a<r;a++)if((void 0===t.validPositions[n]||"-"===e)&&t.tests[n][a].match.def===e)return n+(void 0!==t.validPositions[n]&&"-"!==e?1:0);return i}function d(e,t){var i=-1;for(var n in t.validPositions){var a=t.validPositions[n];if(a&&a.match.def===e){i=parseInt(n);break}}return i}function f(e,t,i,n,a){var r=t.buffer?t.buffer.indexOf(a.radixPoint):-1,o=-1!==r&&new RegExp("[0-9１-９]").test(e);return a._radixDance&&o&&null==t.validPositions[r]?{insert:{pos:r===i?r+1:r,c:a.radixPoint},pos:i}:o}n.default.extendAliases({numeric:{mask:function(e){e.repeat=0,e.groupSeparator===e.radixPoint&&e.digits&&"0"!==e.digits&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=void 0),1<e.placeholder.length&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&(e.positionCaretOnClick="lvp");var t="0",i=e.radixPoint;!0===e.numericInput&&void 0===e.__financeInput?(t="1",e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e._radixDance=!1,i=","===e.radixPoint?"?":"!",""!==e.radixPoint&&void 0===e.definitions[i]&&(e.definitions[i]={},e.definitions[i].validator="["+e.radixPoint+"]",e.definitions[i].placeholder=e.radixPoint,e.definitions[i].static=!0,e.definitions[i].generated=!0)):(e.__financeInput=!1,e.numericInput=!0);var n,a="[+]";if(a+=l(e.prefix,e),""!==e.groupSeparator?(void 0===e.definitions[e.groupSeparator]&&(e.definitions[e.groupSeparator]={},e.definitions[e.groupSeparator].validator="["+e.groupSeparator+"]",e.definitions[e.groupSeparator].placeholder=e.groupSeparator,e.definitions[e.groupSeparator].static=!0,e.definitions[e.groupSeparator].generated=!0),a+=e._mask(e)):a+="9{+}",void 0!==e.digits&&0!==e.digits){var o=e.digits.toString().split(",");isFinite(o[0])&&o[1]&&isFinite(o[1])?a+=i+t+"{"+e.digits+"}":(isNaN(e.digits)||0<parseInt(e.digits))&&(e.digitsOptional?(n=a+i+t+"{0,"+e.digits+"}",e.keepStatic=!0):a+=i+t+"{"+e.digits+"}")}return a+=l(e.suffix,e),a+="[-]",n&&(a=[n+l(e.suffix,e)+"[-]",a]),e.greedy=!1,function(e){void 0===e.parseMinMaxOptions&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp((0,r.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp((0,r.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(e),a},_mask:function(e){return"("+e.groupSeparator+"999){+|1}"},digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",_radixDance:!0,groupSeparator:"",allowMinus:!0,negationSymbol:{front:"-",back:""},prefix:"",suffix:"",min:null,max:null,SetMaxOnOverflow:!1,step:1,inputType:"text",unmaskAsNumber:!1,roundingFN:Math.round,inputmode:"numeric",shortcuts:{k:"000",m:"000000"},placeholder:"0",greedy:!1,rightAlign:!0,insertMode:!0,autoUnmask:!1,skipOptionalPartCharacter:"",definitions:{0:{validator:f},1:{validator:f,definitionSymbol:"9"},"+":{validator:function(e,t,i,n,a){return a.allowMinus&&("-"===e||e===a.negationSymbol.front)}},"-":{validator:function(e,t,i,n,a){return a.allowMinus&&e===a.negationSymbol.back}}},preValidation:function(e,t,i,n,a,r,o,s){if(!1!==a.__financeInput&&i===a.radixPoint)return!1;var l;if(l=a.shortcuts&&a.shortcuts[i]){if(1<l.length)for(var u=[],f=0;f<l.length;f++)u.push({pos:t+f,c:l[f],strict:!1});return{insert:u}}var p=e.indexOf(a.radixPoint),h=t;if(t=function(e,t,i,n,a){return a._radixDance&&a.numericInput&&t!==a.negationSymbol.back&&e<=i&&(0<i||t==a.radixPoint)&&(void 0===n.validPositions[e-1]||n.validPositions[e-1].input!==a.negationSymbol.back)&&(e-=1),e}(t,i,p,r,a),"-"===i||i===a.negationSymbol.front){if(!0!==a.allowMinus)return!1;var v=!1,m=d("+",r),g=d("-",r);return-1!==m&&(v=[m,g]),!1!==v?{remove:v,caret:h-a.negationSymbol.front.length}:{insert:[{pos:c("+",r),c:a.negationSymbol.front,fromIsValid:!0},{pos:c("-",r),c:a.negationSymbol.back,fromIsValid:void 0}],caret:h+a.negationSymbol.back.length}}if(i===a.groupSeparator)return{caret:h};if(s)return!0;if(-1!==p&&!0===a._radixDance&&!1===n&&i===a.radixPoint&&void 0!==a.digits&&(isNaN(a.digits)||0<parseInt(a.digits))&&p!==t)return{caret:a._radixDance&&t===p-1?p+1:p};if(!1===a.__financeInput)if(n){if(a.digitsOptional)return{rewritePosition:o.end};if(!a.digitsOptional){if(o.begin>p&&o.end<=p)return i===a.radixPoint?{insert:{pos:p+1,c:"0",fromIsValid:!0},rewritePosition:p}:{rewritePosition:p+1};if(o.begin<p)return{rewritePosition:o.begin-1}}}else if(!a.showMaskOnHover&&!a.showMaskOnFocus&&!a.digitsOptional&&0<a.digits&&""===this.__valueGet.call(this))return{rewritePosition:p};return{rewritePosition:t}},postValidation:function(e,t,i,n,a,r,o){if(!1===n)return n;if(o)return!0;if(null!==a.min||null!==a.max){var l=a.onUnMask(e.slice().reverse().join(""),void 0,s.extend({},a,{unmaskAsNumber:!0}));if(null!==a.min&&l<a.min&&(l.toString().length>a.min.toString().length||l<0))return!1;if(null!==a.max&&l>a.max)return!!a.SetMaxOnOverflow&&{refreshFromBuffer:!0,buffer:u(a.max.toString().replace(".",a.radixPoint).split(""),a.digits,a).reverse()}}return n},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var n=e.replace(i.prefix,"");return n=(n=n.replace(i.suffix,"")).replace(new RegExp((0,r.default)(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(n=n.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==n.indexOf(i.radixPoint)&&(n=n.replace(r.default.call(this,i.radixPoint),".")),n=(n=n.replace(new RegExp("^"+(0,r.default)(i.negationSymbol.front)),"-")).replace(new RegExp((0,r.default)(i.negationSymbol.back)+"$"),""),Number(n)):n},isComplete:function(e,t){var i=(t.numericInput?e.slice().reverse():e).join("");return i=(i=(i=(i=(i=i.replace(new RegExp("^"+(0,r.default)(t.negationSymbol.front)),"-")).replace(new RegExp((0,r.default)(t.negationSymbol.back)+"$"),"")).replace(t.prefix,"")).replace(t.suffix,"")).replace(new RegExp((0,r.default)(t.groupSeparator)+"([0-9]{3})","g"),"$1"),","===t.radixPoint&&(i=i.replace((0,r.default)(t.radixPoint),".")),isFinite(i)},onBeforeMask:function(e,t){var i=t.radixPoint||",";isFinite(t.digits)&&(t.digits=parseInt(t.digits)),"number"!=typeof e&&"number"!==t.inputType||""===i||(e=e.toString().replace(".",i));var n="-"===e.charAt(0)||e.charAt(0)===t.negationSymbol.front,a=e.split(i),o=a[0].replace(/[^\-0-9]/g,""),s=1<a.length?a[1].replace(/[^0-9]/g,""):"",l=1<a.length;e=o+(""!==s?i+s:s);var c=0;if(""!==i&&(c=t.digitsOptional?t.digits<s.length?t.digits:s.length:t.digits,""!==s||!t.digitsOptional)){var d=Math.pow(10,c||1);e=e.replace((0,r.default)(i),"."),isNaN(parseFloat(e))||(e=(t.roundingFN(parseFloat(e)*d)/d).toFixed(c)),e=e.toString().replace(".",i)}if(0===t.digits&&-1!==e.indexOf(i)&&(e=e.substring(0,e.indexOf(i))),null!==t.min||null!==t.max){var f=e.toString().replace(i,".");null!==t.min&&f<t.min?e=t.min.toString().replace(".",i):null!==t.max&&f>t.max&&(e=t.max.toString().replace(".",i))}return n&&"-"!==e.charAt(0)&&(e="-"+e),u(e.toString().split(""),c,t,l).join("")},onBeforeWrite:function(e,t,i,n){function a(e,t){if(!1!==n.__financeInput||t){var i=e.indexOf(n.radixPoint);-1!==i&&e.splice(i,1)}if(""!==n.groupSeparator)for(;-1!==(i=e.indexOf(n.groupSeparator));)e.splice(i,1);return e}var o,l=function(e,t){var i=new RegExp("(^"+(""!==t.negationSymbol.front?(0,r.default)(t.negationSymbol.front)+"?":"")+(0,r.default)(t.prefix)+")(.*)("+(0,r.default)(t.suffix)+(""!=t.negationSymbol.back?(0,r.default)(t.negationSymbol.back)+"?":"")+"$)").exec(e.slice().reverse().join("")),n=i?i[2]:"",a=!1;return n&&(n=n.split(t.radixPoint.charAt(0))[0],a=new RegExp("^[0"+t.groupSeparator+"]*").exec(n)),!(!a||!(1<a[0].length||0<a[0].length&&a[0].length<n.length))&&a}(t,n);if(l)for(var c=t.join("").lastIndexOf(l[0].split("").reverse().join(""))-(l[0]==l.input?0:1),d=l[0]==l.input?1:0,f=l[0].length-d;0<f;f--)delete this.maskset.validPositions[c+f],delete t[c+f];if(e)switch(e.type){case"blur":case"checkval":if(null!==n.min){var p=n.onUnMask(t.slice().reverse().join(""),void 0,s.extend({},n,{unmaskAsNumber:!0}));if(null!==n.min&&p<n.min)return{refreshFromBuffer:!0,buffer:u(n.min.toString().replace(".",n.radixPoint).split(""),n.digits,n).reverse()}}if(t[t.length-1]===n.negationSymbol.front){var h=new RegExp("(^"+(""!=n.negationSymbol.front?(0,r.default)(n.negationSymbol.front)+"?":"")+(0,r.default)(n.prefix)+")(.*)("+(0,r.default)(n.suffix)+(""!=n.negationSymbol.back?(0,r.default)(n.negationSymbol.back)+"?":"")+"$)").exec(a(t.slice(),!0).reverse().join(""));0==(h?h[2]:"")&&(o={refreshFromBuffer:!0,buffer:[0]})}else""!==n.radixPoint&&t[0]===n.radixPoint&&(o&&o.buffer?o.buffer.shift():(t.shift(),o={refreshFromBuffer:!0,buffer:a(t)}));if(n.enforceDigitsOnBlur){var v=(o=o||{})&&o.buffer||t.slice().reverse();o.refreshFromBuffer=!0,o.buffer=u(v,n.digits,n,!0).reverse()}}return o},onKeyDown:function(e,t,i,n){var r,o=s(this);if(e.ctrlKey)switch(e.keyCode){case a.default.UP:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())+parseInt(n.step)),o.trigger("setvalue"),!1;case a.default.DOWN:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())-parseInt(n.step)),o.trigger("setvalue"),!1}if(!e.shiftKey&&(e.keyCode===a.default.DELETE||e.keyCode===a.default.BACKSPACE||e.keyCode===a.default.BACKSPACE_SAFARI)&&i.begin!==t.length){if(t[e.keyCode===a.default.DELETE?i.begin-1:i.end]===n.negationSymbol.front)return r=t.slice().reverse(),""!==n.negationSymbol.front&&r.shift(),""!==n.negationSymbol.back&&r.pop(),o.trigger("setvalue",[r.join(""),i.begin]),!1;if(!0===n._radixDance){var l=t.indexOf(n.radixPoint);if(n.digitsOptional){if(0===l)return(r=t.slice().reverse()).pop(),o.trigger("setvalue",[r.join(""),i.begin>=r.length?r.length:i.begin]),!1}else if(-1!==l&&(i.begin<l||i.end<l||e.keyCode===a.default.DELETE&&i.begin===l))return i.begin!==i.end||e.keyCode!==a.default.BACKSPACE&&e.keyCode!==a.default.BACKSPACE_SAFARI||i.begin++,(r=t.slice().reverse()).splice(r.length-i.begin,i.begin-i.end+1),r=u(r,n.digits,n).join(""),o.trigger("setvalue",[r,i.begin>=r.length?l+1:i.begin]),!1}}}},currency:{prefix:"",groupSeparator:",",alias:"numeric",digits:2,digitsOptional:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0},percentage:{alias:"numeric",min:0,max:100,suffix:" %",digits:0,allowMinus:!1},indianns:{alias:"numeric",_mask:function(e){return"("+e.groupSeparator+"99){*|1}("+e.groupSeparator+"999){1|1}"},groupSeparator:",",radixPoint:".",placeholder:"0",digits:2,digitsOptional:!1}})},function(e,t,i){var n=f(i(6)),a=f(i(2));function r(e){return r="function"==typeof Symbol&&"symbol"==_typeof2(Symbol.iterator)?function(e){return _typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof2(e)},r(e)}function o(e){var t=u();return function(){var i,n=d(e);if(t){var a=d(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}(this,i)}}function s(e){var t="function"==typeof Map?new Map:void 0;return s=function(e){if(null===e||(i=e,-1===Function.toString.call(i).indexOf("[native code]")))return e;var i;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return l(e,arguments,d(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),c(n,e)},s(e)}function l(e,t,i){return l=u()?Reflect.construct:function(e,t,i){var n=[null];n.push.apply(n,t);var a=new(Function.bind.apply(e,n));return i&&c(a,i.prototype),a},l.apply(null,arguments)}function u(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function c(e,t){return c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},c(e,t)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}function f(e){return e&&e.__esModule?e:{default:e}}var p=n.default.document;if(p&&p.head&&p.head.attachShadow&&n.default.customElements&&void 0===n.default.customElements.get("input-mask")){var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(i,e);var t=o(i);function i(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i);var n=(e=t.call(this)).getAttributeNames(),r=e.attachShadow({mode:"closed"}),o=p.createElement("input");for(var s in o.type="text",r.appendChild(o),n)Object.prototype.hasOwnProperty.call(n,s)&&o.setAttribute(n[s],e.getAttribute(n[s]));var l=new a.default;return l.dataAttribute="",l.mask(o),o.inputmask.shadowRoot=r,e}return i}(s(HTMLElement));n.default.customElements.define("input-mask",h)}}],installedModules={},__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(e,t,i){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==_typeof2(e)&&e&&e.__esModule)return e;var i=Object.create(null);if(__webpack_require__.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)__webpack_require__.d(i,n,function(t){return e[t]}.bind(null,n));return i},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=14);function __webpack_require__(e){if(installedModules[e])return installedModules[e].exports;var t=installedModules[e]={i:e,l:!1,exports:{}};return modules[e].call(t.exports,t,t.exports,__webpack_require__),t.l=!0,t.exports}var modules,installedModules}));var B=Object.defineProperty,V=Object.getOwnPropertySymbols,W=Object.prototype.hasOwnProperty,Y=Object.prototype.propertyIsEnumerable,L=function(e,t,i){return t in e?B(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i},x=function(e,t){for(var i in t||(t={}))W.call(t,i)&&L(e,i,t[i]);if(V){var n,a=_createForOfIteratorHelper(V(t));try{for(a.s();!(n=a.n()).done;){i=n.value;Y.call(t,i)&&L(e,i,t[i])}}catch(e){a.e(e)}finally{a.f()}}return e},d=function(e,t,i){return L(e,"symbol"!=_typeof(t)?t+"":t,i),i};!function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).JustValidate=t()}(void 0,(function(){var e,t,i,n,a=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,r=/^[0-9]+$/,o=/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/,s=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,l=function(e){var t=e;return"string"==typeof e&&(t=e.trim()),!t},u=function(e){return a.test(e)},c=function(e,t){return e.length>t},f=function(e,t){return e.length<t},p=function(e){return r.test(e)},h=function(e){return o.test(e)},v=function(e){return s.test(e)},m=function(e,t){return e>t},g=function(e,t){return e<t};(t=e||(e={})).Required="required",t.Email="email",t.MinLength="minLength",t.MaxLength="maxLength",t.Password="password",t.Number="number",t.MaxNumber="maxNumber",t.MinNumber="minNumber",t.StrongPassword="strongPassword",t.CustomRegexp="customRegexp",function(e){e.Required="required"}(i||(i={})),function(e){e.Label="label",e.LabelArrow="labelArrow"}(n||(n={}));var y=function(e){return!!e&&"function"==typeof e.then},b={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",focusInvalidField:!0,lockForm:!0,testingMode:!1},k=function(){function t(e,i,n){var a=this;_classCallCheck(this,t),d(this,"form",null),d(this,"fields",{}),d(this,"groupFields",{}),d(this,"errors",{}),d(this,"isValid",!1),d(this,"isSubmitted",!1),d(this,"globalConfig",b),d(this,"errorLabels",[]),d(this,"eventListeners",[]),d(this,"dictLocale",[]),d(this,"currentLocale"),d(this,"customStyleTags",{}),d(this,"onSuccessCallback"),d(this,"onFailCallback"),d(this,"tooltips",[]),d(this,"lastScrollPosition"),d(this,"isScrollTick"),d(this,"refreshAllTooltips",(function(){a.tooltips.forEach((function(e){e.refresh()}))})),d(this,"handleDocumentScroll",(function(){a.lastScrollPosition=window.scrollY,a.isScrollTick||(window.requestAnimationFrame((function(){a.refreshAllTooltips(),a.isScrollTick=!1})),a.isScrollTick=!0)})),d(this,"formSubmitHandler",(function(e){e.preventDefault(),a.isSubmitted=!0,a.globalConfig.lockForm&&a.lockForm(),a.validate().then((function(){var t,i;a.isValid?null==(t=a.onSuccessCallback)||t.call(a,e):null==(i=a.onFailCallback)||i.call(a,a.fields),a.globalConfig.lockForm&&a.unlockForm()}))})),d(this,"handleFieldChange",(function(e){var t,i;for(var n in a.fields){var r=a.fields[n];if(r.elem===e){t=r,i=n;break}}!t||!i||a.validateField(i,t,!0)})),d(this,"handleGroupChange",(function(e){var t,i;for(var n in a.groupFields){var r=a.groupFields[n];if(r.elems.find((function(t){return t===e}))){t=r,i=n;break}}!t||!i||a.validateGroup(i,t)})),d(this,"handlerChange",(function(e){!e.target||(a.handleFieldChange(e.target),a.handleGroupChange(e.target),a.renderErrors())})),this.initialize(e,i,n)}return _createClass(t,[{key:"initialize",value:function(e,t,i){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=b,this.errorLabels=[],this.eventListeners=[],this.customStyleTags={},this.tooltips=[],"string"==typeof e){var a=document.querySelector(e);if(!a)throw Error("Form with ".concat(e," selector not found! Please check the form selector"));this.setForm(a)}else{if(!(e instanceof HTMLFormElement))throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");this.setForm(e)}if(this.globalConfig=x(x({},b),t),i&&(this.dictLocale=i),this.isTooltip()){var r=document.createElement("style");r.textContent=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",this.customStyleTags[n.Label]=document.head.appendChild(r),this.addListener("scroll",document,this.handleDocumentScroll)}}},{key:"getLocalisedString",value:function(e){var t;return this.currentLocale&&this.dictLocale.length&&(null==(t=this.dictLocale.find((function(t){return t.key===e})))?void 0:t.dict[this.currentLocale])||e}},{key:"getFieldErrorMessage",value:function(t){return this.getLocalisedString(t.errorMessage)||function(t,i){switch(t){case e.Required:return"The field is required";case e.Email:return"Email has invalid format";case e.MaxLength:return"The field must contain a maximum of :value characters".replace(":value",String(i));case e.MinLength:return"The field must contain a minimum of :value characters".replace(":value",String(i));case e.Password:return"Password must contain minimum eight characters, at least one letter and one number";case e.Number:return"Value should be a number";case e.StrongPassword:return"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character";case e.MaxNumber:return"Number should be less or equal than :value".replace(":value",String(i));case e.MinNumber:return"Number should be more or equal than :value".replace(":value",String(i));default:return"Value is incorrect"}}(t.rule,t.value)}},{key:"getGroupErrorMessage",value:function(e){return this.getLocalisedString(e.errorMessage)||function(e){return e===i.Required?"The field is required":"Group is incorrect"}(e.rule)}},{key:"setFieldInvalid",value:function(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t)}},{key:"setGroupInvalid",value:function(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}},{key:"setGroupValid",value:function(e){this.groupFields[e].isValid=!0}},{key:"getElemValue",value:function(e){return"checkbox"===e.type?e.checked:e.value}},{key:"validateGroupRule",value:function(e,t,n,a){if(a.rule===i.Required)("radio"===t||"checkbox"===t)&&(n.every((function(e){return!e.checked}))?this.setGroupInvalid(e,a):this.setGroupValid(e))}},{key:"validateFieldRule",value:function(t,i,n){var a=this,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=n.value,s=this.getElemValue(i);switch(n.rule){case e.Required:l(s)&&this.setFieldInvalid(t,n);break;case e.Email:if("string"!=typeof s){this.setFieldInvalid(t,n);break}u(s)||this.setFieldInvalid(t,n);break;case e.MaxLength:if(!o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("number"!=typeof o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("string"!=typeof s){this.setFieldInvalid(t,n);break}c(s,o)&&this.setFieldInvalid(t,n);break;case e.MinLength:if(!o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("number"!=typeof o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("string"!=typeof s){this.setFieldInvalid(t,n);break}f(s,o)&&this.setFieldInvalid(t,n);break;case e.Password:if("string"!=typeof s){this.setFieldInvalid(t,n);break}h(s)||this.setFieldInvalid(t,n);break;case e.StrongPassword:if("string"!=typeof s){this.setFieldInvalid(t,n);break}v(s)||this.setFieldInvalid(t,n);break;case e.Number:if("string"!=typeof s){this.setFieldInvalid(t,n);break}p(s)||this.setFieldInvalid(t,n);break;case e.MaxNumber:if(!o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("number"!=typeof o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("string"!=typeof s){this.setFieldInvalid(t,n);break}var d=+s;(Number.isNaN(d)||m(d,o))&&this.setFieldInvalid(t,n);break;case e.MinNumber:if(!o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field is not defined. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("number"!=typeof o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field should be a number. The field will be always invalid.")),void this.setFieldInvalid(t,n);if("string"!=typeof s){this.setFieldInvalid(t,n);break}var b=+s;(Number.isNaN(b)||g(b,o))&&this.setFieldInvalid(t,n);break;case e.CustomRegexp:if(!o)return console.error("Value for ".concat(n.rule," rule for [").concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,n);var k;try{k=new RegExp(o)}catch(e){console.error("Value for ".concat(n.rule," rule for [").concat(t,"] should be a valid regexp. This field will be always invalid.")),this.setFieldInvalid(t,n);break}k.test(String(s))||this.setFieldInvalid(t,n);break;default:if(!n.validator)return console.error("Validator for custom rule for [".concat(t,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(t,n);if("function"!=typeof n.validator)return console.error("Validator for custom rule for [".concat(t,"] field should be a function. This field will be always invalid.")),void this.setFieldInvalid(t,n);var x=n.validator(s,this.fields);if("boolean"!=typeof x&&"function"!=typeof x&&console.error("Validator return value for [".concat(t,"] field should be boolean or function. It will be cast to boolean.")),"function"==typeof x&&!r){var w=x();return y(w)?w.then((function(e){e||a.setFieldInvalid(t,n)})).catch((function(){a.setFieldInvalid(t,n)})):(console.error("Validator function for custom rule for [".concat(t,"] field should return a Promise. This field will be always invalid.")),void this.setFieldInvalid(t,n))}x||this.setFieldInvalid(t,n)}}},{key:"validateField",value:function(e,t){var i=this,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t.isValid=!0;var a=[];return _toConsumableArray(t.rules).reverse().forEach((function(r){var o=i.validateFieldRule(e,t.elem,r,n);y(o)&&a.push(o)})),Promise.allSettled(a)}},{key:"validateGroup",value:function(e,t){var i=this,n=[];return _toConsumableArray(t.rules).reverse().forEach((function(a){var r=i.validateGroupRule(e,t.type,t.elems,a);y(r)&&n.push(r)})),Promise.allSettled(n)}},{key:"focusInvalidField",value:function(){var e=this,t=function(){var t=e.fields[i];if(!t.isValid)return setTimeout((function(){return t.elem.focus()}),0),"break"};for(var i in this.fields){if("break"===t())break}}},{key:"afterSubmitValidation",value:function(){this.renderErrors(),this.globalConfig.focusInvalidField&&this.focusInvalidField()}},{key:"validate",value:function(){var e=this;return new Promise((function(t){var i=[];Object.keys(e.fields).forEach((function(t){var n=e.fields[t],a=e.validateField(t,n);y(a)&&i.push(a)})),Object.keys(e.groupFields).forEach((function(t){var n=e.groupFields[t],a=e.validateGroup(t,n);y(a)&&i.push(a)})),i.length?Promise.allSettled(i).then((function(){e.afterSubmitValidation(),t(!0)})):(e.afterSubmitValidation(),t(!1))}))}},{key:"setForm",value:function(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}},{key:"addListener",value:function(e,t,i){t.addEventListener(e,i),this.eventListeners.push({type:e,elem:t,func:i})}},{key:"removeListener",value:function(e,t,i){t.removeEventListener(e,i)}},{key:"addField",value:function(t,i,n){if("string"!=typeof t)throw Error("Field selector is not valid. Please specify a string selector.");var a=document.querySelector(t);if(!a)throw Error("Field with ".concat(t," selector not found! Please check the field selector."));if(!Array.isArray(i)||!i.length)throw Error("Rules argument for the field [".concat(t,"] should be an array and should contain at least 1 element."));return i.forEach((function(i){if(!("rule"in i)&&!("validator"in i))throw Error("Rules argument for the field [".concat(t,"] must contain at least one rule or validator property."));if(!(i.validator||i.rule&&Object.values(e).includes(i.rule)))throw Error("Rule should be one of these types: ".concat(Object.values(e).join(", "),". Provided value: ").concat(i.rule))})),this.fields[t]={elem:a,rules:i,isValid:void 0,config:n},this.setListeners(a),this.isSubmitted&&this.validate(),this}},{key:"removeField",value:function(e){if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");return this.fields[e]?(this.destroy(),delete this.fields[e],this.refresh(),this):(console.error("Field not found. Check the field selector."),this)}},{key:"addRequiredGroup",value:function(e,t,n){var a=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");var r=document.querySelector(e);if(!r)throw Error("Group with ".concat(e," selector not found! Please check the group selector."));var o=r.querySelectorAll("input"),s=Array.from(o).every((function(e){return"radio"===e.type})),l=Array.from(o).every((function(e){return"checkbox"===e.type}));if(!s&&!l)throw Error("Group should contain either or checkboxes or radio buttons");return this.groupFields[e]={rules:[{rule:i.Required,errorMessage:t}],groupElem:r,elems:Array.from(o),type:s?"radio":"checkbox",isDirty:!1,isValid:void 0,config:n},o.forEach((function(e){a.setListeners(e)})),this}},{key:"getListenerType",value:function(e){switch(e){case"checkbox":case"select-one":case"radio":return"change";default:return"keyup"}}},{key:"setListeners",value:function(e){var t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}},{key:"clearErrors",value:function(){var e,t,i,n=this;this.errorLabels.forEach((function(e){return e.remove()}));var a=function(){var i=n.fields[r],a=(null==(e=i.config)?void 0:e.errorFieldStyle)||n.globalConfig.errorFieldStyle;Object.keys(a).forEach((function(e){i.elem.style[e]=""})),i.elem.classList.remove((null==(t=i.config)?void 0:t.errorFieldCssClass)||n.globalConfig.errorFieldCssClass)};for(var r in this.fields)a();var o=function(){var e=n.groupFields[s],t=(null==(i=e.config)?void 0:i.errorFieldStyle)||n.globalConfig.errorFieldStyle;Object.keys(t).forEach((function(t){e.elems.forEach((function(i){var a;i.style[t]="",i.classList.remove((null==(a=e.config)?void 0:a.errorFieldCssClass)||n.globalConfig.errorFieldCssClass)}))}))};for(var s in this.groupFields)o();this.tooltips=[]}},{key:"isTooltip",value:function(){return!!this.globalConfig.tooltip}},{key:"lockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}},{key:"unlockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}},{key:"renderTooltip",value:function(e,t,i){var n,a=this,r=e.getBoundingClientRect(),o=r.top,s=r.left,l=r.width,u=r.height,c=t.getBoundingClientRect(),d=i||(null==(n=this.globalConfig.tooltip)?void 0:n.position);switch(d){case"left":t.style.top="".concat(o+u/2-c.height/2,"px"),t.style.left="".concat(s-c.width-5,"px");break;case"top":t.style.top="".concat(o-c.height-5,"px"),t.style.left="".concat(s+l/2-c.width/2,"px");break;case"right":t.style.top="".concat(o+u/2-c.height/2,"px"),t.style.left="".concat(s+l+5,"px");break;case"bottom":t.style.top="".concat(o+u+5,"px"),t.style.left="".concat(s+l/2-c.width/2,"px")}return t.dataset.direction=d,{refresh:function(){a.renderTooltip(e,t,i)}}}},{key:"createErrorLabelElem",value:function(e,t,i){var n=document.createElement("div");n.innerHTML=t;var a=this.isTooltip()?null==i?void 0:i.errorLabelStyle:(null==i?void 0:i.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(n.style,a),n.classList.add((null==i?void 0:i.errorLabelCssClass)||this.globalConfig.errorLabelCssClass,"just-validate-error-label"),this.isTooltip()&&(n.dataset.tooltip="true"),this.globalConfig.testingMode&&(n.dataset.testId="error-label-".concat(e)),this.errorLabels.push(n),n}},{key:"renderErrors",value:function(){var e,t,i,n,a,r,o,s,l,u,c,d,f=this;if(this.isSubmitted){this.clearErrors(),this.isValid=!0;var p=function(){var i=f.groupFields[h];if(i.isValid)return"continue";f.isValid=!1,i.elems.forEach((function(e){var t,n;Object.assign(e.style,(null==(t=i.config)?void 0:t.errorFieldStyle)||f.globalConfig.errorFieldStyle),e.classList.add((null==(n=i.config)?void 0:n.errorFieldCssClass)||f.globalConfig.errorFieldCssClass)}));var n=f.createErrorLabelElem(h,i.errorMessage,i.config);i.groupElem.appendChild(n),f.isTooltip()&&f.tooltips.push(f.renderTooltip(i.groupElem,n,null==(t=null==(e=i.config)?void 0:e.tooltip)?void 0:t.position))};for(var h in this.groupFields)p();for(var v in this.fields){var m=this.fields[v];if(!m.isValid){this.isValid=!1,m.elem.classList.add((null==(i=m.config)?void 0:i.errorFieldCssClass)||this.globalConfig.errorFieldCssClass);var g=this.createErrorLabelElem(v,m.errorMessage,m.config);if("checkbox"===m.elem.type||"radio"===m.elem.type){var y=document.querySelector('label[for="'.concat(m.elem.getAttribute("id"),'"]'));"label"===(null==(a=null==(n=m.elem.parentElement)?void 0:n.tagName)?void 0:a.toLowerCase())?null==(o=null==(r=m.elem.parentElement)?void 0:r.parentElement)||o.appendChild(g):y?null==(s=y.parentElement)||s.appendChild(g):null==(l=m.elem.parentElement)||l.appendChild(g)}else null==(u=m.elem.parentElement)||u.appendChild(g);this.isTooltip()&&this.tooltips.push(this.renderTooltip(m.elem,g,null==(d=null==(c=m.config)?void 0:c.tooltip)?void 0:d.position))}}}}},{key:"destroy",value:function(){var e=this;this.eventListeners.forEach((function(t){e.removeListener(t.type,t.elem,t.func)})),Object.keys(this.customStyleTags).forEach((function(t){e.customStyleTags[t].remove()})),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}},{key:"refresh",value:function(){var e=this;this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach((function(t){e.addField(t,_toConsumableArray(e.fields[t].rules),e.fields[t].config)}))):console.error("Cannot initialize the library! Form is not defined")}},{key:"setCurrentLocale",value:function(e){"string"==typeof e||void 0===e?(this.currentLocale=e,this.isSubmitted&&this.validate()):console.error("Current locale should be a string")}},{key:"onSuccess",value:function(e){return this.onSuccessCallback=e,this}},{key:"onFail",value:function(e){return this.onFailCallback=e,this}}]),t}();return k})),document.addEventListener("DOMContentLoaded",(function(){ymaps.ready((function(){var e=new ymaps.Map("map",{center:[55.893112068852496,37.48429849999997],zoom:15},{searchControlProvider:"yandex#search"}),t=new ymaps.Placemark(e.getCenter(),{hintContent:"Собственный значок метки",balloonContent:"Это красивая метка"},{iconLayout:"default#image",iconImageHref:"images/location.png",iconImageSize:[30,42],iconImageOffset:[-5,-38]});e.geoObjects.add(t)}))}));var content=document.querySelector(".parts-card__hidden"),show=document.getElementById("showContent");show.addEventListener("click",(function(){content.classList.toggle("parts-card__hidden--visible"),show.innerText="Свернуть все",(show.innerText="Свернуть все")&&show.addEventListener("click",(function(){show.innerText="Показать все"}))})),window.onload=function(){document.body.classList.add("loaded_hiding"),window.setTimeout((function(){document.body.classList.add("loaded"),document.body.classList.remove("loaded_hiding")}),500)},
/*! WOW - v1.1.2 - 2015-08-19
* Copyright (c) 2015 Matthieu Aussaguel; Licensed MIT */
function(){var e,t,i,n,a,r=function(e,t){return function(){return e.apply(t,arguments)}},o=[].indexOf||function(e){for(var t=0,i=this.length;i>t;t++)if(t in this&&this[t]===e)return t;return-1};t=function(){function e(){}return e.prototype.extend=function(e,t){var i,n;for(i in t)n=t[i],null==e[i]&&(e[i]=n);return e},e.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},e.prototype.createEvent=function(e,t,i,n){var a;return null==t&&(t=!1),null==i&&(i=!1),null==n&&(n=null),null!=document.createEvent?(a=document.createEvent("CustomEvent")).initCustomEvent(e,t,i,n):null!=document.createEventObject?(a=document.createEventObject()).eventType=e:a.eventName=e,a},e.prototype.emitEvent=function(e,t){return null!=e.dispatchEvent?e.dispatchEvent(t):t in(null!=e)?e[t]():"on"+t in(null!=e)?e["on"+t]():void 0},e.prototype.addEvent=function(e,t,i){return null!=e.addEventListener?e.addEventListener(t,i,!1):null!=e.attachEvent?e.attachEvent("on"+t,i):e[t]=i},e.prototype.removeEvent=function(e,t,i){return null!=e.removeEventListener?e.removeEventListener(t,i,!1):null!=e.detachEvent?e.detachEvent("on"+t,i):delete e[t]},e.prototype.innerHeight=function(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight},e}(),i=this.WeakMap||this.MozWeakMap||(i=function(){function e(){this.keys=[],this.values=[]}return e.prototype.get=function(e){var t,i,n,a;for(t=i=0,n=(a=this.keys).length;n>i;t=++i)if(a[t]===e)return this.values[t]},e.prototype.set=function(e,t){var i,n,a,r;for(i=n=0,a=(r=this.keys).length;a>n;i=++n)if(r[i]===e)return void(this.values[i]=t);return this.keys.push(e),this.values.push(t)},e}()),e=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver||(e=function(){function e(){"undefined"!=typeof console&&null!==console&&console.warn("MutationObserver is not supported by your browser."),"undefined"!=typeof console&&null!==console&&console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")}return e.notSupported=!0,e.prototype.observe=function(){},e}()),n=this.getComputedStyle||function(e){return this.getPropertyValue=function(t){var i;return"float"===t&&(t="styleFloat"),a.test(t)&&t.replace(a,(function(e,t){return t.toUpperCase()})),(null!=(i=e.currentStyle)?i[t]:void 0)||null},this},a=/(\-([a-z]){1})/g,this.WOW=function(){function a(e){null==e&&(e={}),this.scrollCallback=r(this.scrollCallback,this),this.scrollHandler=r(this.scrollHandler,this),this.resetAnimation=r(this.resetAnimation,this),this.start=r(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),null!=e.scrollContainer&&(this.config.scrollContainer=document.querySelector(e.scrollContainer)),this.animationNameCache=new i,this.wowEvent=this.util().createEvent(this.config.boxClass)}return a.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},a.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():this.util().addEvent(document,"DOMContentLoaded",this.start),this.finished=[]},a.prototype.start=function(){var t,i,n,a;if(this.stopped=!1,this.boxes=function(){var e,i,n,a;for(a=[],e=0,i=(n=this.element.querySelectorAll("."+this.config.boxClass)).length;i>e;e++)t=n[e],a.push(t);return a}.call(this),this.all=function(){var e,i,n,a;for(a=[],e=0,i=(n=this.boxes).length;i>e;e++)t=n[e],a.push(t);return a}.call(this),this.boxes.length)if(this.disabled())this.resetStyle();else for(i=0,n=(a=this.boxes).length;n>i;i++)t=a[i],this.applyStyle(t,!0);return this.disabled()||(this.util().addEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().addEvent(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live?new e(function(e){return function(t){var i,n,a,r,o;for(o=[],i=0,n=t.length;n>i;i++)r=t[i],o.push(function(){var e,t,i,n;for(n=[],e=0,t=(i=r.addedNodes||[]).length;t>e;e++)a=i[e],n.push(this.doSync(a));return n}.call(e));return o}}(this)).observe(document.body,{childList:!0,subtree:!0}):void 0},a.prototype.stop=function(){return this.stopped=!0,this.util().removeEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().removeEvent(window,"resize",this.scrollHandler),null!=this.interval?clearInterval(this.interval):void 0},a.prototype.sync=function(){return e.notSupported?this.doSync(this.element):void 0},a.prototype.doSync=function(e){var t,i,n,a,r;if(null==e&&(e=this.element),1===e.nodeType){for(r=[],i=0,n=(a=(e=e.parentNode||e).querySelectorAll("."+this.config.boxClass)).length;n>i;i++)t=a[i],o.call(this.all,t)<0?(this.boxes.push(t),this.all.push(t),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(t,!0),r.push(this.scrolled=!0)):r.push(void 0);return r}},a.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(e),this.util().emitEvent(e,this.wowEvent),this.util().addEvent(e,"animationend",this.resetAnimation),this.util().addEvent(e,"oanimationend",this.resetAnimation),this.util().addEvent(e,"webkitAnimationEnd",this.resetAnimation),this.util().addEvent(e,"MSAnimationEnd",this.resetAnimation),e},a.prototype.applyStyle=function(e,t){var i,n,a;return n=e.getAttribute("data-wow-duration"),i=e.getAttribute("data-wow-delay"),a=e.getAttribute("data-wow-iteration"),this.animate(function(r){return function(){return r.customStyle(e,t,n,i,a)}}(this))},a.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},a.prototype.resetStyle=function(){var e,t,i,n,a;for(a=[],t=0,i=(n=this.boxes).length;i>t;t++)e=n[t],a.push(e.style.visibility="visible");return a},a.prototype.resetAnimation=function(e){var t;return e.type.toLowerCase().indexOf("animationend")>=0?(t=e.target||e.srcElement).className=t.className.replace(this.config.animateClass,"").trim():void 0},a.prototype.customStyle=function(e,t,i,n,a){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),n&&this.vendorSet(e.style,{animationDelay:n}),a&&this.vendorSet(e.style,{animationIterationCount:a}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},a.prototype.vendors=["moz","webkit"],a.prototype.vendorSet=function(e,t){var i,n,a,r;for(i in n=[],t)a=t[i],e[""+i]=a,n.push(function(){var t,n,o,s;for(s=[],t=0,n=(o=this.vendors).length;n>t;t++)r=o[t],s.push(e[""+r+i.charAt(0).toUpperCase()+i.substr(1)]=a);return s}.call(this));return n},a.prototype.vendorCSS=function(e,t){var i,a,r,o,s,l;for(o=(s=n(e)).getPropertyCSSValue(t),i=0,a=(r=this.vendors).length;a>i;i++)l=r[i],o=o||s.getPropertyCSSValue("-"+l+"-"+t);return o},a.prototype.animationName=function(e){var t;try{t=this.vendorCSS(e,"animation-name").cssText}catch(i){t=n(e).getPropertyValue("animation-name")}return"none"===t?"":t},a.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},a.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},a.prototype.scrollHandler=function(){return this.scrolled=!0},a.prototype.scrollCallback=function(){var e;return!this.scrolled||(this.scrolled=!1,this.boxes=function(){var t,i,n,a;for(a=[],t=0,i=(n=this.boxes).length;i>t;t++)(e=n[t])&&(this.isVisible(e)?this.show(e):a.push(e));return a}.call(this),this.boxes.length||this.config.live)?void 0:this.stop()},a.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},a.prototype.isVisible=function(e){var t,i,n,a,r;return i=e.getAttribute("data-wow-offset")||this.config.offset,a=(r=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset)+Math.min(this.element.clientHeight,this.util().innerHeight())-i,t=(n=this.offsetTop(e))+e.clientHeight,a>=n&&t>=r},a.prototype.util=function(){return null!=this._util?this._util:this._util=new t},a.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},a}()}.call(void 0);var obj={},prop=null==obj?void 0:obj.prop;console.log(prop);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1cmdlci5qcyIsImZvcm0uanMiLCJpbnB1dG1hc2subWluLmpzIiwianVzdC12YWxpZGF0ZS5taW4uanMiLCJtYXAuanMiLCJtb3JlYnRuLmpzIiwicHJlbG9hZGVyLmpzIiwid293Lm1pbi5qcyIsIm1haW4uanMiXSwibmFtZXMiOlsiYnVyZ2VyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwibWVudSIsIm1lbnVMaW5rcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiYm9keSIsImZvckVhY2giLCJlbCIsInJlbW92ZSIsInZhbGlkYXRpb25Gb3JtIiwiSnVzdFZhbGlkYXRlIiwic2VsZWN0b3IiLCJJbnB1dG1hc2siLCJtYXNrIiwiYWRkRmllbGQiLCJydWxlIiwidmFsdWUiLCJlcnJvck1lc3NhZ2UiLCJ2YWxpZGF0b3IiLCJuYW1lIiwiaW5wdXRtYXNrIiwidW5tYXNrZWR2YWx1ZSIsImxlbmd0aCIsInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIl90eXBlb2YyIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwiYSIsImkiLCJ3aW5kb3ciLCJtb2R1bGVzIiwiSlNPTiIsInBhcnNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY2FyZXQiLCJpbnB1dCIsImJlZ2luIiwiZW5kIiwibm90cmFuc2xhdGUiLCJpc0RlbGV0ZSIsInJhbmdlIiwib3B0cyIsInRoaXMiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImdldFJhbmdlQXQiLCJjb21tb25BbmNlc3RvckNvbnRhaW5lciIsInBhcmVudE5vZGUiLCJzdGFydE9mZnNldCIsImVuZE9mZnNldCIsInNlbGVjdGlvbiIsImNyZWF0ZVJhbmdlIiwiZHVwbGljYXRlIiwibW92ZVN0YXJ0IiwiX3ZhbHVlR2V0IiwidGV4dCIsInRyYW5zbGF0ZVBvc2l0aW9uIiwiY2FsbCIsIkFycmF5IiwiaXNBcnJheSIsImlzUlRMIiwic2Nyb2xsQ2FsYyIsInBhcnNlSW50Iiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImN1cnJlbnRTdHlsZSIsImZvbnRTaXplIiwic2Nyb2xsTGVmdCIsInNjcm9sbFdpZHRoIiwiY2FyZXRQb3MiLCJpbnNlcnRNb2RlVmlzdWFsIiwiaW5zZXJ0TW9kZSIsInNoYWRvd1Jvb3QiLCJhY3RpdmVFbGVtZW50Iiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJmaXJzdENoaWxkIiwidGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImFwcGVuZENoaWxkIiwic2V0U3RhcnQiLCJzZXRFbmQiLCJjb2xsYXBzZSIsInNlbCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiY3JlYXRlVGV4dFJhbmdlIiwibW92ZUVuZCIsInNlbGVjdCIsImRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uIiwicmV0dXJuRGVmaW5pdGlvbiIsInBvcyIsInRlc3RQb3MiLCJtYXNrc2V0IiwiJCIsImRlcGVuZGVuY3lMaWIiLCJidWZmZXIiLCJfdmFsaWRhdGlvblRlc3RzIiwiZ2V0TWFza1RlbXBsYXRlIiwiZ2V0TGFzdFZhbGlkUG9zaXRpb24iLCJibCIsImx2cCIsInBvc2l0aW9ucyIsImx2VGVzdCIsInZhbGlkUG9zaXRpb25zIiwibmR4SW50bHpyIiwibG9jYXRvciIsInNsaWNlIiwiZ2V0VGVzdFRlbXBsYXRlIiwiZXh0ZW5kIiwibHZUZXN0QWx0IiwiYWx0ZXJuYXRpb24iLCJtYXRjaCIsIm9wdGlvbmFsaXR5Iiwib3B0aW9uYWxRdWFudGlmaWVyIiwibmV3QmxvY2tNYXJrZXIiLCJfdmFsaWRhdGlvbiIsImNoZWNrQWx0ZXJuYXRpb25NYXRjaCIsInRvU3RyaW5nIiwic3BsaXQiLCJnZXRUZXN0cyIsImRlZiIsImdldFBsYWNlaG9sZGVyIiwibCIsImRldGVybWluZU5ld0NhcmV0UG9zaXRpb24iLCJzZWxlY3RlZENhcmV0IiwidGFiYmVkIiwicG9zaXRpb25DYXJldE9uQ2xpY2siLCJnZXRCdWZmZXIiLCJzZWVrTmV4dCIsImNsaWNrUG9zIiwicmFkaXhQb2ludCIsImRpZ2l0cyIsInZwcyIsInJhZGl4UG9zIiwiaW5kZXhPZiIsInZwIiwiZG9SYWRpeEZvY3VzIiwiam9pbiIsIm51bWVyaWNJbnB1dCIsImNsaWNrUG9zaXRpb24iLCJsdmNsaWNrUG9zaXRpb24iLCJsYXN0UG9zaXRpb24iLCJpc01hc2siLCJ0dCIsInBsYWNlaG9sZGVyIiwia2VlcFN0YXRpYyIsIm5ld1BvcyIsImdldEJ1ZmZlclRlbXBsYXRlIiwiX2J1ZmZlciIsInJlc2V0TWFza1NldCIsInNvZnQiLCJwIiwic2Vla1ByZXZpb3VzIiwibmV3QmxvY2siLCJwb3NpdGlvbiIsImdldFRlc3QiLCJub0NhY2hlIiwiY2xvc2VzdFRvIiwic3RyaWN0IiwiYmVmb3JlIiwiYWZ0ZXIiLCJ2YWxpZHMiLCJwb3NOZHgiLCJwc05keCIsImdlbmVyYXRlZElucHV0IiwiZnV6enkiLCJ0ZXN0IiwiZm4iLCJ0ZXN0cyIsInRlc3RUZW1wbGF0ZSIsImRldGVybWluZVRlc3RUZW1wbGF0ZSIsInRlc3RQbGFjZUhvbGRlciIsImdyZWVkeSIsIk1hdGgiLCJhYnMiLCJfbWFzayIsIl9pbnB1dG1hc2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3dpbmRvdyIsIl9tYXNrTGV4ZXIiLCJfcG9zaXRpb25pbmciLCJfaW5wdXRIYW5kbGluZyIsIl9ldmVudHJ1bGVyIiwiX2RlZmluaXRpb25zIiwiX2RlZmF1bHRzIiwiX3R5cGVvZiIsIm9iaiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRhdGFLZXkiLCJhbGlhcyIsIm9wdGlvbnMiLCJpbnRlcm5hbCIsImV2ZW50cyIsImRlZmF1bHRzIiwibm9NYXNrc0NhY2hlIiwiZGVmaW5pdGlvbnMiLCJ1c2VyT3B0aW9ucyIsInJlc29sdmVBbGlhcyIsInJlZnJlc2hWYWx1ZSIsInVuZG9WYWx1ZSIsIiRlbCIsInNraXBLZXlQcmVzc0V2ZW50Iiwic2tpcElucHV0RXZlbnQiLCJ2YWxpZGF0aW9uRXZlbnQiLCJpZ25vcmFibGUiLCJtYXhMZW5ndGgiLCJtb3VzZUVudGVyIiwib3JpZ2luYWxQbGFjZWhvbGRlciIsImlzQ29tcG9zaW5nIiwiYWxpYXNTdHIiLCJhbGlhc0RlZmluaXRpb24iLCJhbGlhc2VzIiwiZGF0YUF0dHJpYnV0ZSIsIm1hc2tzQ2FjaGUiLCJlbGVtcyIsInRoYXQiLCJnZXRFbGVtZW50QnlJZCIsIm5vZGVOYW1lIiwiZnJvbSIsIm5keCIsInNjb3BlZE9wdHMiLCJucHQiLCJpbXBvcnRPcHRpb24iLCJvcHRpb24iLCJvcHRpb25EYXRhIiwiYXR0ck9wdGlvbiIsImdldEF0dHJpYnV0ZSIsImltcG9ydERhdGFBdHRyaWJ1dGVzIiwiZGF0YW9wdGlvbnMiLCJhdHRyT3B0aW9ucyIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsImRpciIsInJpZ2h0QWxpZ24iLCJzdHlsZSIsInRleHRBbGlnbiIsInJlbW92ZUF0dHJpYnV0ZSIsImtleXMiLCJpbXBvcnRBdHRyaWJ1dGVPcHRpb25zIiwiZ2VuZXJhdGVNYXNrU2V0IiwiYXV0b1VubWFzayIsImRhdGEiLCJub3JlbWFzayIsInZhbHVlQnVmZmVyIiwib25CZWZvcmVNYXNrIiwiY2hlY2tWYWwiLCJvbkJlZm9yZVdyaXRlIiwiY3YiLCJfdmFsdWVTZXQiLCJFdmVudFJ1bGVyIiwib2ZmIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJfX3ZhbHVlR2V0IiwiZ2V0Iiwic2V0IiwiX192YWx1ZVNldCIsImNvbmZpZ3VyYWJsZSIsIl9fbG9va3VwR2V0dGVyX18iLCJfX2RlZmluZUdldHRlcl9fIiwiX19kZWZpbmVTZXR0ZXJfXyIsImdldGVtcHR5bWFzayIsImhhc01hc2tlZFZhbHVlIiwiaXNDb21wbGV0ZSIsImdldG1ldGFkYXRhIiwibWV0YWRhdGEiLCJtYXNrVGFyZ2V0IiwibXRkdCIsImlzVmFsaWQiLCJyZXZlcnNlIiwicmwiLCJsbWliIiwic3BsaWNlIiwiZm9ybWF0IiwiZm9ybWF0dGVkVmFsdWUiLCJzZXRWYWx1ZSIsInRyaWdnZXIiLCJhbmFseXNlTWFzayIsImV4dGVuZERlZmF1bHRzIiwiZXh0ZW5kRGVmaW5pdGlvbnMiLCJkZWZpbml0aW9uIiwiZXh0ZW5kQWxpYXNlcyIsInVubWFzayIsIl9kZWZhdWx0IiwiZ2V0TG9jYXRvciIsInRzdCIsImFsaWduIiwibWxvYyIsImdldERlY2lzaW9uVGFrZXIiLCJkZWNpc2lvblRha2VyIiwicmV0dXJuUEwiLCJjaGFyQXQiLCJwcmV2VGVzdCIsInN0YXRpY0FsdGVybmF0aW9ucyIsInB1c2giLCJ0c3RQcyIsInRzdExvY2F0b3IiLCJjbG9zZXN0IiwiYmVzdE1hdGNoIiwidGFyZ2V0TG9jYXRvciIsImRpc3RhbmNlIiwibGF0ZXN0TWF0Y2giLCJtYXNrVG9rZW5zIiwibWFza1Rva2VuIiwibmR4SW5pdGlhbGl6ZXIiLCJtYXRjaGVzIiwiaW5zZXJ0U3RvcCIsImNhY2hlRGVwZW5kZW5jeSIsInJlc29sdmVUZXN0RnJvbVRva2VuIiwibG9vcE5keCIsInF1YW50aWZpZXJSZWN1cnNlIiwiaGFuZGxlTWF0Y2giLCJpc0ZpcnN0TWF0Y2giLCJ0b2tlbkdyb3VwIiwiZmlyc3RNYXRjaCIsImV2ZXJ5IiwiaXNRdWFudGlmaWVyIiwiaGFzT3duUHJvcGVydHkiLCJyZXNvbHZlTmR4SW5pdGlhbGl6ZXIiLCJhbHRlcm5hdGVOZHgiLCJ0YXJnZXRBbHRlcm5hdGlvbiIsImluZGV4UG9zIiwibG1udCIsIm5keFBvcyIsImJlc3RNYXRjaEFsdEluZGV4IiwiaXNTdWJzZXRPZiIsInNvdXJjZSIsInRhcmdldCIsImV4cGFuZCIsInBhdHRlcm4iLCJleHBhbmRlZCIsInN0YXJ0IiwiY2hhckNvZGVBdCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsIm5hdGl2ZURlZiIsInJlZ2V4IiwiUmVnRXhwIiwic2V0TWVyZ2VMb2NhdG9ycyIsInRhcmdldE1hdGNoIiwiYWx0TWF0Y2giLCJhbHRlcm5hdGlvbk5keCIsInNob3VsZE1lcmdlIiwibG9jTmR4IiwiaXNTYW1lTGV2ZWwiLCJfbWF4VGVzdFBvcyIsImNkIiwiaXNHcm91cCIsImlzT3B0aW9uYWwiLCJvcHRpb25hbFRva2VuIiwibXRjaHNOZHgiLCJtdGNoIiwiaXNBbHRlcm5hdG9yIiwibWFsdE1hdGNoZXMiLCJhbHRlcm5hdGVUb2tlbiIsIm1hbHRlcm5hdGVNYXRjaGVzIiwiY3VycmVudE1hdGNoZXMiLCJsb29wTmR4Q250IiwiYWx0SW5kZXgiLCJzaGlmdCIsImFtbmR4IiwiY3VycmVudFBvcyIsIm5keEluaXRpYWxpemVyQ2xvbmUiLCJhbHRJbmRleEFyciIsImV4Y2x1ZGVzIiwiYWx0SW5kZXhBcnJDbG9uZSIsImV4bCIsImV4Y2x1ZGVTZXQiLCJpc0Zpbml0ZSIsInVuTWF0Y2hlZEFsdGVybmF0aW9uIiwiY29uY2F0IiwibmR4MSIsImRyb3BNYXRjaCIsImppdCIsIm5keDIiLCJhbHRNYXRjaDIiLCJpbmNsdWRlcyIsInF0IiwicW5keCIsImlzTmFOIiwicXVhbnRpZmllciIsIm1heCIsIm1pbiIsImppdE9mZnNldCIsInRuZHgiLCJwcmV2aW91c1BvcyIsIm1lcmdlTG9jYXRvcnMiLCJtdG5keCIsInN0YXRpYyIsImNhc2luZyIsImJhc2VPbklucHV0IiwibWluaW1hbFBvcyIsImluY2x1ZGVNb2RlIiwibm9KaXQiLCJjbGVhck9wdGlvbmFsVGFpbCIsImppdFJlbmRlclN0YXRpYyIsIm1hc2tUZW1wbGF0ZSIsInNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIiLCJqaXRNYXNraW5nIiwiZ3JvdXBTZXBhcmF0b3IiLCJwb3AiLCJtYXNrTGVuZ3RoIiwiYWx0ZXJuYXRlIiwiYWx0QXJyMSIsImFsdEFycjIiLCJuYSIsIm5hTmR4IiwiYWx0QXJyQyIsImlzTWF0Y2giLCJuYUFyciIsImFsbmR4IiwicmVmcmVzaEZyb21CdWZmZXIiLCJyZXZhbGlkYXRlTWFzayIsImhhbmRsZVJlbW92ZSIsImsiLCJmcm9tSXNWYWxpZCIsIl9rZXljb2RlIiwiQkFDS1NQQUNFIiwiREVMRVRFIiwicGVuZCIsIm9mZnNldCIsInJlc3VsdCIsIl9ldmVudGhhbmRsZXJzIiwibWFza1BvcyIsImMiLCJyQWx0UG9zIiwibGFzdEFsdCIsImFsdFBvcyIsInByZXZBbHRQb3MiLCJ2YWxpZFBvcyIsImRlY2lzaW9uUG9zIiwibmV4dFBvcyIsInZhbGlkUHNDbG9uZSIsInRzdENsb25lIiwiaXNWYWxpZFJzbHQiLCJyZXR1cm5Sc2x0IiwibEFsdFBvcyIsInZhbGlkSW5wdXRzIiwicmVzdWx0UG9zIiwiZWxlbSIsInRvVXBwZXJDYXNlIiwicG9zQmVmb3JlIiwiU1BBQ0UiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJyZXBlYXQiLCJjb21wbGV0ZSIsImxycCIsImFtbCIsImZyb21BbHRlcm5hdGUiLCJ2YWxpZGF0ZU9ubHkiLCJmcm9tQ2hlY2t2YWwiLCJpc1NlbGVjdGlvbiIsInBvc09iaiIsInByb2Nlc3NDb21tYW5kT2JqZWN0IiwiY29tbWFuZE9iaiIsInNvcnQiLCJiIiwiaW5zZXJ0IiwicmVmcmVzaCIsInJld3JpdGVQb3NpdGlvbiIsIl9pc1ZhbGlkIiwicnNsdCIsInZhbGlkYXRlZFBvcyIsInBvc2l0aW9uc0Nsb25lIiwicHJlVmFsaWRhdGlvbiIsImN1cnJlbnRQb3NWYWxpZCIsInNraXAiLCJuUG9zIiwic25Qb3MiLCJ0cmFja2JhY2tQb3NpdGlvbnMiLCJwb3N0VmFsaWRhdGlvbiIsInBvc3RSZXN1bHQiLCJwb3NpdGlvbkNhbk1hdGNoRGVmaW5pdGlvbiIsInRlc3REZWZpbml0aW9uIiwidmFsaWQiLCJzaGlmdFBvc2l0aW9ucyIsImJmZnIiLCJrZXlwcmVzcyIsIkV2ZW50Iiwid2hpY2giLCJ2YWxSZXN1bHQiLCJFdmVudEhhbmRsZXJzIiwia2V5cHJlc3NFdmVudCIsImZvcndhcmRQb3NpdGlvbiIsIm9yaWdpbmFsUG9zIiwiZmlsbE9ubHkiLCJwcyIsIm5wIiwiY3ZwSW5wdXQiLCJ2YWxpZFRlc3QiLCJJc0VuY2xvc2VkU3RhdGljIiwicG9zTWF0Y2giLCJwcmV2TWF0Y2giLCJuZXh0TWF0Y2giLCJ0IiwiY2FuTWF0Y2giLCJqIiwiYXBwbHlJbnB1dFZhbHVlIiwiSGFuZGxlTmF0aXZlUGxhY2Vob2xkZXIiLCJfZW52aXJvbm1lbnQiLCJpZSIsIm5wdFZhbHVlIiwid3JpdGVCdWZmZXIiLCJ1bVZhbHVlIiwicG5keCIsInVubWFza2VkVmFsdWUiLCJvblVuTWFzayIsImJ1ZmZlclZhbHVlIiwiY2xlYXJNYXNrT25Mb3N0Rm9jdXMiLCJjbGVhckluY29tcGxldGUiLCJ0ZW1wbGF0ZSIsIndyaXRlT3V0IiwibnB0dmwiLCJpbml0aWF0aW5nRXZlbnQiLCJpbnB1dFZhbHVlIiwiY2hhckNvZGVzIiwiaW5pdGlhbE5keCIsInN0YXRpY01hdGNoZXMiLCJwcmV2Q2FyZXRQb3MiLCJjaGFyQ29kZSIsInRhcmdldFRlbXBsYXRlIiwiY2hhckNvZGVOZHgiLCJpc1RlbXBsYXRlTWF0Y2giLCJzbmR4IiwibmV4dFZhbGlkIiwibmV4dFNuZHgiLCJ0eXBlIiwiZXZlbnQiLCJ0cmlnZ2VyRXZlbnRzIiwia2V5Q29kZSIsIiRpbnB1dCIsIm5wdFZhbCIsInNldFRpbWVvdXQiLCJldmFsIiwia2V5ZG93bkV2ZW50IiwiZSIsImtkUmVzdWx0Iiwib25LZXlEb3duIiwiaXBob25lIiwiQkFDS1NQQUNFX1NBRkFSSSIsImN0cmxLZXkiLCJYIiwicHJldmVudERlZmF1bHQiLCJFTkQiLCJQQUdFX0RPV04iLCJzaGlmdEtleSIsIkhPTUUiLCJQQUdFX1VQIiwidW5kb09uRXNjYXBlIiwiRVNDQVBFIiwiYWx0S2V5IiwidGFiVGhyb3VnaCIsIlRBQiIsIlJJR0hUIiwiTEVGVCIsImNhcmV0UG9zX2JlZ2luIiwiaWdub3JhYmxlcyIsImNoZWNrdmFsIiwibWV0YUtleSIsIkVOVEVSIiwibG9jYXRpb24iLCJ3cml0ZU91dEJ1ZmZlciIsIm9uS2V5VmFsaWRhdGlvbiIsImtleXVwRXZlbnQiLCJLRVlfMjI5IiwicGFzdGVFdmVudCIsInRlbXBWYWx1ZSIsInZhbHVlQmVmb3JlQ2FyZXQiLCJzdWJzdHIiLCJ2YWx1ZUFmdGVyQ2FyZXQiLCJjbGlwYm9hcmREYXRhIiwiZ2V0RGF0YSIsInBhc3RlVmFsdWUiLCJvbkJlZm9yZVBhc3RlIiwiaW5wdXRGYWxsQmFja0V2ZW50IiwiaWVtb2JpbGUiLCJpbnB1dENoYXIiLCJpdiIsImllTW9iaWxlSGFuZGxlciIsImNoYW5nZXMiLCJmcm9udFBhcnQiLCJiYWNrUGFydCIsImZyb250QnVmZmVyUGFydCIsImJhY2tCdWZmZXJQYXJ0IiwiZnBsIiwiYnBsIiwiYWN0aW9uIiwidW5zaGlmdCIsIm5ld0J1ZmZlciIsIm9sZEJ1ZmZlciIsImFuYWx5c2VDaGFuZ2VzIiwiZm9jdXMiLCJlbnRyeSIsImtleWRvd24iLCJjb21wb3NpdGlvbmVuZEV2ZW50Iiwic2V0VmFsdWVFdmVudCIsImFyZ3VtZW50XzEiLCJhcmd1bWVudF8yIiwiZGV0YWlsIiwiZm9jdXNFdmVudCIsInNob3dNYXNrT25Gb2N1cyIsInBvc2l0aW9uQ2FyZXRPblRhYiIsImNsaWNrRXZlbnQiLCJpbnZhbGlkRXZlbnQiLCJtb3VzZWxlYXZlRXZlbnQiLCJuZXdDYXJldFBvc2l0aW9uIiwiY3V0RXZlbnQiLCJjbGlwRGF0YSIsInNldERhdGEiLCJleGVjQ29tbWFuZCIsImJsdXJFdmVudCIsIm1vdXNlZW50ZXJFdmVudCIsInNob3dNYXNrT25Ib3ZlciIsInN1Ym1pdEV2ZW50IiwicmVtb3ZlTWFza09uU3VibWl0IiwicmVzZXRFdmVudCIsIm1vYmlsZSIsInVhIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiX2V4dGVuZCIsIl9kYXRhIiwiX2V2ZW50cyIsIkRlcGVuZGVuY3lMaWIiLCJldmVudFJlZ2lzdHJ5Iiwib24iLCJpc1N1cHBvcnRlZCIsInRhZ05hbWUiLCJlbGVtZW50VHlwZSIsInN1cHBvcnRzSW5wdXRUeXBlIiwiaXNDb250ZW50RWRpdGFibGUiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwidmFsdWVHZXQiLCJ2YWx1ZVNldCIsImdldHRlciIsIm51bGxhYmxlIiwic2V0dGVyIiwibm9WYWx1ZVBhdGNoaW5nIiwidmFsdWVQcm9wZXJ0eSIsInRleHRDb250ZW50IiwiX19sb29rdXBTZXR0ZXJfXyIsIm92ZXJydWxlUlRMIiwidmFsSG9va3MiLCJpbnB1dG1hc2twYXRjaCIsInZhbGhvb2tHZXQiLCJ2YWxob29rU2V0IiwicGF0Y2hWYWxob29rIiwiaW5zdGFsbE5hdGl2ZVZhbHVlU2V0RmFsbGJhY2siLCJwYXRjaFZhbHVlUHJvcGVydHkiLCJpc0VsZW1lbnRUeXBlU3VwcG9ydGVkIiwiaW5wdXRNb2RlIiwiaW5wdXRtb2RlIiwiYXV0b2NvbXBsZXRlIiwib25jb21wbGV0ZSIsIm9uaW5jb21wbGV0ZSIsIm9uY2xlYXJlZCIsImlucHV0RXZlbnRPbmx5IiwiZXZlbnROYW1lIiwiZXZlbnRIYW5kbGVyIiwiZXYiLCJvcmlnaW5hbEV2ZW50IiwiaW1PcHRzIiwiZGlzYWJsZWQiLCJyZWFkT25seSIsImlucHV0VHlwZSIsImJsdXIiLCJyZXR1cm5WYWwiLCJzdG9wUHJvcGFnYXRpb24iLCJmb3JtIiwiYmluZCIsImV2QXJyIiwic3JjIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJkZWVwIiwic3RyIiwiZXNjYXBlUmVnZXhSZWdleCIsIl9pbnB1dG1hc2syIiwiQSIsImlwVmFsaWRhdG9yUmVnZXgiLCJpcFZhbGlkYXRvciIsImNocnMiLCJjc3N1bml0IiwidXJsIiwiaXAiLCJtYXNrZWRWYWx1ZSIsImVtYWlsIiwicGFzdGVkVmFsdWUiLCJtYWMiLCJ2aW4iLCJWIiwic3NuIiwiY3VycmVudFJlc3VsdCIsIl9fcHJvdG9fXyIsIm9iamVjdCIsInNlYXJjaEVsZW1lbnQiLCJmcm9tSW5kZXgiLCJUeXBlRXJyb3IiLCJvIiwibGVuIiwibiIsIm93bmVyIiwia2V5IiwiX19kYXRhIiwiaGFuZGxlciIsImFkZEV2ZW50IiwibmFtZXNwYWNlIiwiYXR0YWNoRXZlbnQiLCJpc1ZhbGlkRWxlbWVudCIsImVuZHgiLCJuc0V2ZW50IiwicmVtb3ZlRXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGV0YWNoRXZlbnQiLCJubXNwIiwicmVzb2x2ZU5hbWVzcGFjZSIsImhuZHgiLCJobmRMIiwiZXZ0cyIsImV2TmR4Iiwib2ZmRXZlbnRzIiwib2ZmRXZlbnRzTCIsImV2bnQiLCJwYXJhbXMiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNyZWF0ZUV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiY3JlYXRlRXZlbnRPYmplY3QiLCJldmVudFR5cGUiLCJmaXJlRXZlbnQiLCJFbGVtZW50IiwiZXZ0Iiwibm9jYWNoZSIsImdlbmVyYXRlTWFzayIsIm1hc2tzZXREZWZpbml0aW9uIiwibWFza2RlZktleSIsInJlZ2V4TWFzayIsInJlcGVhdFN0YXJ0IiwiZ3JvdXBtYXJrZXIiLCJxdWFudGlmaWVybWFya2VyIiwiYWx0TWFzayIsIm1zayIsImFsdGVybmF0b3JtYXJrZXIiLCJtIiwib3BlbmluZ1Rva2VuIiwiY3VycmVudE9wZW5pbmdUb2tlbiIsImFsdGVybmF0b3IiLCJsYXN0TWF0Y2giLCJ0b2tlbml6ZXIiLCJyZWdleFRva2VuaXplciIsImVzY2FwZWQiLCJjdXJyZW50VG9rZW4iLCJNYXNrVG9rZW4iLCJvcGVuZW5pbmdzIiwiY2xvc2VSZWdleEdyb3VwIiwib3Blbkdyb3VwIiwiYWx0ZXJuYXRvckdyb3VwIiwiaW5zZXJ0VGVzdERlZmluaXRpb24iLCJtdG9rZW4iLCJlbGVtZW50Iiwic3RhdGljRGVmaW5pdGlvblN5bWJvbCIsIm1hc2tkZWYiLCJ1c2VQcm90b3R5cGVEZWZpbml0aW9ucyIsImRlZmluaXRpb25TeW1ib2wiLCJnZW5lcmF0ZWQiLCJkZWZhdWx0Q2FzZSIsIm1uZHgiLCJncm91cGlmeSIsImdyb3VwVG9rZW4iLCJjbG9zZUdyb3VwIiwiZ3JvdXBRdWFudGlmaWVyIiwib3B0aW9uYWxtYXJrZXIiLCJleGVjIiwiYWx0UmVnZXhHcm91cCIsImVzY2FwZUNoYXIiLCJtcWoiLCJtcSIsIm1xMCIsIm1xMSIsInRtcE1hdGNoIiwic3ViVG9rZW4iLCJ2ZXJpZnlHcm91cE1hcmtlciIsInRva2VuIiwibmV4dFRva2VuIiwicmV2ZXJzZVRva2VucyIsImludE1hdGNoIiwic3QiLCJfcmFkaXhEYW5jZSIsIl9lc2NhcGVSZWdleCIsImN1cnJlbnRZZWFyIiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwiZm9ybWF0Q29kZSIsImQiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsImRkIiwicGFkIiwiZGRkIiwiZGRkZCIsInNldE1vbnRoIiwiZ2V0TW9udGgiLCJtbSIsIm1tbSIsIm1tbW0iLCJ5eSIsInNldEZ1bGxZZWFyIiwieXl5eSIsImgiLCJzZXRIb3VycyIsImdldEhvdXJzIiwiaGgiLCJoeCIsIngiLCJIIiwiSEgiLCJIeCIsIk0iLCJzZXRNaW51dGVzIiwiZ2V0TWludXRlcyIsIk1NIiwicyIsInNldFNlY29uZHMiLCJnZXRTZWNvbmRzIiwic3MiLCJzZXRNaWxsaXNlY29uZHMiLCJnZXRNaWxsaXNlY29uZHMiLCJMIiwiVCIsIlRUIiwiWiIsIlMiLCJmb3JtYXRBbGlhcyIsImlzb0RhdGUiLCJpc29UaW1lIiwiaXNvRGF0ZVRpbWUiLCJpc29VdGNEYXRlVGltZSIsImZvcm1hdGNvZGUiLCJkeW5NYXRjaGVzIiwiZmNvZGUiLCJnZXRUb2tlbml6ZXIiLCJ0b2tlbnMiLCJkeW50b2tlbnMiLCJkeW5Ub2tlbiIsImlzVmFsaWREYXRlIiwiZGF0ZVBhcnRzIiwicmF3ZGF5IiwiZGF0ZSIsInJhd21vbnRoIiwibW9udGgiLCJkYXkiLCJyYXd5ZWFyIiwidG9rZW5NYXRjaCIsImdldFRva2VuTWF0Y2giLCJ0YXJnZXRNYXRjaEluZGV4IiwiZGF0ZU9ialZhbHVlIiwicmF3IiwibGFzdEluZGV4IiwidmFsIiwibWFza1N0cmluZyIsInRhcmdldFByb3AiLCJkYXRlT3BlcmF0aW9uIiwiZGF0ZU9iaiIsImRhdGF2YWx1ZSIsInRva2FuTWF0Y2giLCJpbmRleCIsImltcG9ydERhdGUiLCJpbnB1dEZvcm1hdCIsImNhbGNQb3MiLCJtYXRjaExlbmd0aCIsImRhdGV0aW1lIiwiaTE4biIsIm9yZGluYWxTdWZmaXgiLCJkaXNwbGF5Rm9ybWF0Iiwib3V0cHV0Rm9ybWF0IiwiZGF5TmFtZXMiLCJtb250aE5hbWVzIiwicGFydCIsImdldFRpbWUiLCJ5ZWFyIiwiY3JybnR5ZWFyIiwiZW50ZXJlZFBhcnQiLCJjdXJyZW50WWVhclBhcnQiLCJjdXJyZW50WWVhck5leHRQYXJ0IiwiZW50cnlDdXJyZW50WWVhciIsInByZWZpbGxZZWFyIiwibWF4WWVhciIsInJhd1llYXIiLCJtaW5ZZWFyIiwiaXNEYXRlSW5SYW5nZSIsImluaXRpYWxWYWx1ZSIsImF1dG9Fc2NhcGUiLCJ0eHQiLCJlc2NhcGVkVHh0IiwiYWxpZ25EaWdpdHMiLCJmb3JjZSIsImRpZ2l0c09wdGlvbmFsIiwicmFkaXhQb3NpdGlvbiIsIm5lZ2F0aW9uQmFjayIsIm5lZ2F0aW9uU3ltYm9sIiwiYmFjayIsImZpbmRWYWxpZGF0b3IiLCJzeW1ib2wiLCJ0c3ROZHgiLCJuZHhsIiwiZmluZFZhbGlkIiwicmV0IiwiZGVjaW1hbFZhbGlkYXRvciIsIm51bWVyaWMiLCJkZWNpbWFsRGVmIiwicmFkaXhQb2ludERlZiIsIl9fZmluYW5jZUlucHV0IiwicHJlZml4IiwiZHEiLCJzdWZmaXgiLCJwYXJzZU1pbk1heE9wdGlvbnMiLCJwYXJzZUZsb2F0IiwiTmFOIiwiTnVtYmVyIiwiTUlOX1ZBTFVFIiwiTUFYX1ZBTFVFIiwiZW5mb3JjZURpZ2l0c09uQmx1ciIsImFsbG93TWludXMiLCJmcm9udCIsIlNldE1heE9uT3ZlcmZsb3ciLCJzdGVwIiwidW5tYXNrQXNOdW1iZXIiLCJyb3VuZGluZ0ZOIiwicm91bmQiLCJzaG9ydGN1dHMiLCJpbnNlcnRzIiwiaW5pdFBvcyIsImhhbm5kbGVSYWRpeERhbmNlIiwiaXNOZWdhdGl2ZSIsInVubWFza2VkIiwicHJvY2Vzc1ZhbHVlIiwiaXNOYWd0aXZlIiwidmFsdWVQYXJ0cyIsImludGVnZXJQYXJ0IiwiZGVjaW1hbFBhcnQiLCJmb3JjZURpZ2l0cyIsImRpZ2l0c0ZhY3RvciIsInBvdyIsInRvRml4ZWQiLCJzdWJzdHJpbmciLCJudW1iZXJWYWx1ZSIsInN0cmlwQnVmZmVyIiwic3RyaXBSYWRpeCIsImxlYWRpbmd6ZXJvZXMiLCJudW1iZXJNYXRjaGVzIiwibnVtYmVyIiwiY2hlY2tGb3JMZWFkaW5nWmVyb2VzIiwiY2FyZXROZHgiLCJsYXN0SW5kZXhPZiIsIm5tYnJNdGNocyIsIlVQIiwiRE9XTiIsImN1cnJlbmN5IiwiZGVjaW1hbCIsImludGVnZXIiLCJwZXJjZW50YWdlIiwiaW5kaWFubnMiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZiIsIk5ld1RhcmdldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfd3JhcE5hdGl2ZVN1cGVyIiwiQ2xhc3MiLCJfY2FjaGUiLCJNYXAiLCJGdW5jdGlvbiIsImhhcyIsIldyYXBwZXIiLCJfY29uc3RydWN0IiwiY3JlYXRlIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwiX3NldFByb3RvdHlwZU9mIiwiUGFyZW50IiwiaW5zdGFuY2UiLCJzaGFtIiwiUHJveHkiLCJzZXRQcm90b3R5cGVPZiIsImhlYWQiLCJhdHRhY2hTaGFkb3ciLCJjdXN0b21FbGVtZW50cyIsIklucHV0bWFza0VsZW1lbnQiLCJfSFRNTEVsZW1lbnQiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJfdGhpcyIsIkNvbnN0cnVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwiYXR0cmlidXRlTmFtZXMiLCJnZXRBdHRyaWJ1dGVOYW1lcyIsInNoYWRvdyIsIm1vZGUiLCJhdHRyIiwiaW0iLCJIVE1MRWxlbWVudCIsImluc3RhbGxlZE1vZHVsZXMiLCJyIiwidG9TdHJpbmdUYWciLCJucyIsInByb3BlcnR5IiwibW9kdWxlSWQiLCJCIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiVyIsIlkiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImYiLCJ1IiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsImRvbmUiLCJlcnIiLCJnbG9iYWxUaGlzIiwiZyIsIkMiLCJQIiwidHJpbSIsIk4iLCJHIiwicSIsIk8iLCJ6IiwiRCIsIlJlcXVpcmVkIiwiRW1haWwiLCJNaW5MZW5ndGgiLCJNYXhMZW5ndGgiLCJQYXNzd29yZCIsIk1heE51bWJlciIsIk1pbk51bWJlciIsIlN0cm9uZ1Bhc3N3b3JkIiwiQ3VzdG9tUmVnZXhwIiwiTGFiZWwiLCJMYWJlbEFycm93IiwidiIsInRoZW4iLCJlcnJvckZpZWxkU3R5bGUiLCJjb2xvciIsImJvcmRlciIsImVycm9yRmllbGRDc3NDbGFzcyIsImVycm9yTGFiZWxTdHlsZSIsImVycm9yTGFiZWxDc3NDbGFzcyIsImZvY3VzSW52YWxpZEZpZWxkIiwibG9ja0Zvcm0iLCJ0ZXN0aW5nTW9kZSIsInRvb2x0aXBzIiwibGFzdFNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsWSIsImlzU2Nyb2xsVGljayIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInJlZnJlc2hBbGxUb29sdGlwcyIsImlzU3VibWl0dGVkIiwiZ2xvYmFsQ29uZmlnIiwidmFsaWRhdGUiLCJvblN1Y2Nlc3NDYWxsYmFjayIsIm9uRmFpbENhbGxiYWNrIiwiZmllbGRzIiwidW5sb2NrRm9ybSIsInZhbGlkYXRlRmllbGQiLCJncm91cEZpZWxkcyIsImZpbmQiLCJ2YWxpZGF0ZUdyb3VwIiwiaGFuZGxlRmllbGRDaGFuZ2UiLCJoYW5kbGVHcm91cENoYW5nZSIsInJlbmRlckVycm9ycyIsImluaXRpYWxpemUiLCJfY3JlYXRlQ2xhc3MiLCJlcnJvcnMiLCJlcnJvckxhYmVscyIsImV2ZW50TGlzdGVuZXJzIiwiY3VzdG9tU3R5bGVUYWdzIiwiRXJyb3IiLCJzZXRGb3JtIiwiSFRNTEZvcm1FbGVtZW50IiwiZGljdExvY2FsZSIsImlzVG9vbHRpcCIsImFkZExpc3RlbmVyIiwiaGFuZGxlRG9jdW1lbnRTY3JvbGwiLCJjdXJyZW50TG9jYWxlIiwiZGljdCIsImdldExvY2FsaXNlZFN0cmluZyIsIl8iLCJnZXRGaWVsZEVycm9yTWVzc2FnZSIsImdldEdyb3VwRXJyb3JNZXNzYWdlIiwiY2hlY2tlZCIsInNldEdyb3VwSW52YWxpZCIsInNldEdyb3VwVmFsaWQiLCJfdGhpczIiLCJ1bmRlZmluZWQiLCJnZXRFbGVtVmFsdWUiLCJzZXRGaWVsZEludmFsaWQiLCJjb25zb2xlIiwiZXJyb3IiLCJfdW51c2VkIiwiX3RoaXMzIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwicnVsZXMiLCJ2YWxpZGF0ZUZpZWxkUnVsZSIsIlByb21pc2UiLCJhbGxTZXR0bGVkIiwiX3RoaXM0IiwidmFsaWRhdGVHcm91cFJ1bGUiLCJfdGhpczUiLCJfbG9vcCIsIl90aGlzNiIsImFmdGVyU3VibWl0VmFsaWRhdGlvbiIsInJlbW92ZUxpc3RlbmVyIiwiZm9ybVN1Ym1pdEhhbmRsZXIiLCJmdW5jIiwidmFsdWVzIiwiY29uZmlnIiwic2V0TGlzdGVuZXJzIiwiZGVzdHJveSIsIl90aGlzNyIsImdyb3VwRWxlbSIsImlzRGlydHkiLCJnZXRMaXN0ZW5lclR5cGUiLCJoYW5kbGVyQ2hhbmdlIiwiX3RoaXM4IiwiX2xvb3AyIiwiX2xvb3AzIiwidG9vbHRpcCIsInBvaW50ZXJFdmVudHMiLCJ3ZWJraXRGaWx0ZXIiLCJmaWx0ZXIiLCJ5IiwiX3RoaXM5IiwiX2UkZ2V0Qm91bmRpbmdDbGllbnRSIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwiZGF0YXNldCIsImRpcmVjdGlvbiIsInJlbmRlclRvb2x0aXAiLCJpbm5lckhUTUwiLCJhc3NpZ24iLCJhZGQiLCJ0ZXN0SWQiLCJfdGhpczEwIiwiY2xlYXJFcnJvcnMiLCJfbG9vcDQiLCJGIiwidyIsIkkiLCJjcmVhdGVFcnJvckxhYmVsRWxlbSIsInBhcmVudEVsZW1lbnQiLCJfdGhpczExIiwiX3RoaXMxMiIsInltYXBzIiwicmVhZHkiLCJteU1hcCIsImNlbnRlciIsInpvb20iLCJzZWFyY2hDb250cm9sUHJvdmlkZXIiLCJteVBsYWNlbWFyayIsIlBsYWNlbWFyayIsImdldENlbnRlciIsImhpbnRDb250ZW50IiwiYmFsbG9vbkNvbnRlbnQiLCJpY29uTGF5b3V0IiwiaWNvbkltYWdlSHJlZiIsImljb25JbWFnZVNpemUiLCJpY29uSW1hZ2VPZmZzZXQiLCJnZW9PYmplY3RzIiwiY29udGVudCIsInNob3ciLCJpbm5lclRleHQiLCJvbmxvYWQiLCJpc01vYmlsZSIsImVtaXRFdmVudCIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50SGVpZ2h0IiwiV2Vha01hcCIsIk1veldlYWtNYXAiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2Via2l0TXV0YXRpb25PYnNlcnZlciIsIk1vek11dGF0aW9uT2JzZXJ2ZXIiLCJ3YXJuIiwibm90U3VwcG9ydGVkIiwib2JzZXJ2ZSIsImdldFByb3BlcnR5VmFsdWUiLCJXT1ciLCJzY3JvbGxDYWxsYmFjayIsInNjcm9sbEhhbmRsZXIiLCJyZXNldEFuaW1hdGlvbiIsInNjcm9sbGVkIiwidXRpbCIsInNjcm9sbENvbnRhaW5lciIsImFuaW1hdGlvbk5hbWVDYWNoZSIsIndvd0V2ZW50IiwiYm94Q2xhc3MiLCJhbmltYXRlQ2xhc3MiLCJsaXZlIiwiY2FsbGJhY2siLCJpbml0IiwicmVhZHlTdGF0ZSIsImZpbmlzaGVkIiwic3RvcHBlZCIsImJveGVzIiwiYWxsIiwicmVzZXRTdHlsZSIsImFwcGx5U3R5bGUiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiYWRkZWROb2RlcyIsImRvU3luYyIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJzdG9wIiwiY2xlYXJJbnRlcnZhbCIsInN5bmMiLCJub2RlVHlwZSIsImNsYXNzTmFtZSIsImFuaW1hdGUiLCJjdXN0b21TdHlsZSIsInZpc2liaWxpdHkiLCJzcmNFbGVtZW50IiwiY2FjaGVBbmltYXRpb25OYW1lIiwidmVuZG9yU2V0IiwiYW5pbWF0aW9uRHVyYXRpb24iLCJhbmltYXRpb25EZWxheSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYW5pbWF0aW9uTmFtZSIsImNhY2hlZEFuaW1hdGlvbk5hbWUiLCJ2ZW5kb3JzIiwidmVuZG9yQ1NTIiwiZ2V0UHJvcGVydHlDU1NWYWx1ZSIsImNzc1RleHQiLCJpc1Zpc2libGUiLCJvZmZzZXRUb3AiLCJvZmZzZXRQYXJlbnQiLCJzY3JvbGxUb3AiLCJwYWdlWU9mZnNldCIsIl91dGlsIiwicHJvcCIsImxvZyJdLCJtYXBwaW5ncyI6ImFBQUEsSUFBSUEsT0FBU0MsU0FBU0MsY0FBYyxXQUNoQ0MsS0FBT0YsU0FBU0MsY0FBYyxnQkFDOUJFLFVBQVlILFNBQVNJLGlCQUFpQixzQjs7Ozs7OzswdEZBRTFDTCxPQUFPTSxpQkFBaUIsU0FBUyxXQUMvQk4sT0FBT08sVUFBVUMsT0FBTyxrQkFDeEJMLEtBQUtJLFVBQVVDLE9BQU8sdUJBQ3RCUCxTQUFTUSxLQUFLRixVQUFVQyxPQUFPLGNBRWpDLElBRUFKLFVBQVVNLFNBQVEsU0FBVUMsR0FDMUJBLEVBQUdMLGlCQUFpQixTQUFTLFdBQzNCTixPQUFPTyxVQUFVQyxPQUFPLGtCQUN4QkwsS0FBS0ksVUFBVUssT0FBTyx1QkFDdEJYLFNBQVNRLEtBQUtGLFVBQVVLLE9BQU8sY0FDakMsR0FDRixJQ2pCQVgsU0FBU0ssaUJBQWlCLG9CQUFvQixXQUM1QyxJQUFNTyxFQUFpQixJQUFJQyxhQUFhLGtCQUNsQ0MsRUFBV2QsU0FBU0MsY0FBYyxxQkFDN0IsSUFBSWMsVUFBVSxzQkFDdEJDLEtBQUtGLEdBR1JGLEVB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LENBQ0osQ0EvUlcsRUFnU2QsRUFDQ3RlLFVBQUksR0MvWU4sSUFBTWtJLElBQU0sQ0FBQyxFQUNQd2pDLEtBQU94akMsZUFBRyxFQUFIQSxJQUFLd2pDLEtBQ2xCbEosUUFBUW1KLElBQUlEIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBidXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1cmdlclwiKTtcclxubGV0IG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlci1saXN0XCIpO1xyXG5sZXQgbWVudUxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5oZWFkZXItbGlzdF9faXRlbVwiKTtcclxuXHJcbmJ1cmdlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIGJ1cmdlci5jbGFzc0xpc3QudG9nZ2xlKFwiYnVyZ2VyLS1hY3RpdmVcIik7XHJcbiAgbWVudS5jbGFzc0xpc3QudG9nZ2xlKFwiaGVhZGVyLWxpc3QtLWFjdGl2ZVwiKTtcclxuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoXCJzdG9wLXNjcm9sbFwiKTtcclxuIFxyXG59KTtcclxuXHJcbm1lbnVMaW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xyXG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBidXJnZXIuY2xhc3NMaXN0LnRvZ2dsZShcImJ1cmdlci0tYWN0aXZlXCIpO1xyXG4gICAgbWVudS5jbGFzc0xpc3QucmVtb3ZlKFwiaGVhZGVyLWxpc3QtLWFjdGl2ZVwiKTtcclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcInN0b3Atc2Nyb2xsXCIpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbiIsImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgdmFsaWRhdGlvbkZvcm0gPSBuZXcgSnVzdFZhbGlkYXRlKCcuY29udGFjdHMtZm9ybScpO1xuICBjb25zdCBzZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFt0eXBlPSd0ZWwnXVwiKTtcbiAgY29uc3QgaW0gPSBuZXcgSW5wdXRtYXNrKFwiKzcgKDk5OSktOTk5LTk5LTk5XCIpO1xuICBpbS5tYXNrKHNlbGVjdG9yKTtcblxuXG4gIHZhbGlkYXRpb25Gb3JtXG4gICAgLmFkZEZpZWxkKCcuY29udGFjdHMtZm9ybV9fbmFtZScsIFt7XG4gICAgICBydWxlOiAnbWluTGVuZ3RoJyxcbiAgICAgIHZhbHVlOiAzLFxuICAgICAgZXJyb3JNZXNzYWdlOiBcItCd0LXQtNC+0YHRgtCw0YLQvtGH0L3QvtC1INC60L7Qu9C40YfQtdGB0YLQstC+INGB0LjQvNCy0L7Qu9C+0LJcIlxuICAgIH0sXG4gICAge1xuICAgICAgcnVsZTogJ21heExlbmd0aCcsXG4gICAgICB2YWx1ZTogNSxcbiAgICAgIGVycm9yTWVzc2FnZTogXCLQktGLINCy0LLQtdC70Lgg0LHQvtC70YzRiNC1LCDRh9C10Lwg0L/QvtC70L7QttC10L3QvlwiXG4gICAgfVxuICBdKVxuXG4gIC5hZGRGaWVsZCgnLmNvbnRhY3RzLWZvcm1fX3Bob25lJywgW3tcbiAgICBydWxlOiBcImZ1bmN0aW9uXCIsXG4gICAgdmFsaWRhdG9yOiBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICAgIGNvbnN0IHBob25lID0gc2VsZWN0b3IuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKTtcbiAgICAgIHJldHVybiBwaG9uZS5sZW5ndGggPT09IDEwXG4gICAgfSxcbiAgICBlcnJvck1lc3NhZ2U6ICfQndC10LTQvtGB0YLQsNGC0L7Rh9C90L7QtSDQutC+0LvQuNGH0LXRgdGC0LLQviDRgdC40LzQstC+0LvQvtCyJyxcbiAgfV0pO1xuICBcbn0pIiwiLyohXG4gKiBkaXN0L2lucHV0bWFzay5taW5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Sb2JpbkhlcmJvdHMvSW5wdXRtYXNrXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAgLSAyMDIwIFJvYmluIEhlcmJvdHNcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogVmVyc2lvbjogNS4wLjYtYmV0YS4xNlxuICovXG4hZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCxmYWN0b3J5KXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1mYWN0b3J5KCk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGZhY3RvcnkpO2Vsc2V7dmFyIGE9ZmFjdG9yeSgpO2Zvcih2YXIgaSBpbiBhKShcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzOnJvb3QpW2ldPWFbaV19fSh3aW5kb3csZnVuY3Rpb24oKXtyZXR1cm4gbW9kdWxlcz1bZnVuY3Rpb24obW9kdWxlKXttb2R1bGUuZXhwb3J0cz1KU09OLnBhcnNlKCd7XCJCQUNLU1BBQ0VcIjo4LFwiQkFDS1NQQUNFX1NBRkFSSVwiOjEyNyxcIkRFTEVURVwiOjQ2LFwiRE9XTlwiOjQwLFwiRU5EXCI6MzUsXCJFTlRFUlwiOjEzLFwiRVNDQVBFXCI6MjcsXCJIT01FXCI6MzYsXCJJTlNFUlRcIjo0NSxcIkxFRlRcIjozNyxcIlBBR0VfRE9XTlwiOjM0LFwiUEFHRV9VUFwiOjMzLFwiUklHSFRcIjozOSxcIlNQQUNFXCI6MzIsXCJUQUJcIjo5LFwiVVBcIjozOCxcIlhcIjo4OCxcIkNPTlRST0xcIjoxNyxcIktFWV8yMjlcIjoyMjl9Jyl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuY2FyZXQ9Y2FyZXQsZXhwb3J0cy5kZXRlcm1pbmVMYXN0UmVxdWlyZWRQb3NpdGlvbj1kZXRlcm1pbmVMYXN0UmVxdWlyZWRQb3NpdGlvbixleHBvcnRzLmRldGVybWluZU5ld0NhcmV0UG9zaXRpb249ZGV0ZXJtaW5lTmV3Q2FyZXRQb3NpdGlvbixleHBvcnRzLmdldEJ1ZmZlcj1nZXRCdWZmZXIsZXhwb3J0cy5nZXRCdWZmZXJUZW1wbGF0ZT1nZXRCdWZmZXJUZW1wbGF0ZSxleHBvcnRzLmdldExhc3RWYWxpZFBvc2l0aW9uPWdldExhc3RWYWxpZFBvc2l0aW9uLGV4cG9ydHMuaXNNYXNrPWlzTWFzayxleHBvcnRzLnJlc2V0TWFza1NldD1yZXNldE1hc2tTZXQsZXhwb3J0cy5zZWVrTmV4dD1zZWVrTmV4dCxleHBvcnRzLnNlZWtQcmV2aW91cz1zZWVrUHJldmlvdXMsZXhwb3J0cy50cmFuc2xhdGVQb3NpdGlvbj10cmFuc2xhdGVQb3NpdGlvbjt2YXIgX3ZhbGlkYXRpb25UZXN0cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLF92YWxpZGF0aW9uPV9fd2VicGFja19yZXF1aXJlX18oNCksX21hc2s9X193ZWJwYWNrX3JlcXVpcmVfXygxMCk7ZnVuY3Rpb24gY2FyZXQoaW5wdXQsYmVnaW4sZW5kLG5vdHJhbnNsYXRlLGlzRGVsZXRlKXt2YXIgaW5wdXRtYXNrPXRoaXMsb3B0cz10aGlzLm9wdHMscmFuZ2U7aWYodm9pZCAwPT09YmVnaW4pcmV0dXJuXCJzZWxlY3Rpb25TdGFydFwiaW4gaW5wdXQmJlwic2VsZWN0aW9uRW5kXCJpbiBpbnB1dD8oYmVnaW49aW5wdXQuc2VsZWN0aW9uU3RhcnQsZW5kPWlucHV0LnNlbGVjdGlvbkVuZCk6d2luZG93LmdldFNlbGVjdGlvbj8ocmFuZ2U9d2luZG93LmdldFNlbGVjdGlvbigpLmdldFJhbmdlQXQoMCkscmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXIucGFyZW50Tm9kZSE9PWlucHV0JiZyYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lciE9PWlucHV0fHwoYmVnaW49cmFuZ2Uuc3RhcnRPZmZzZXQsZW5kPXJhbmdlLmVuZE9mZnNldCkpOmRvY3VtZW50LnNlbGVjdGlvbiYmZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlJiYocmFuZ2U9ZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCksYmVnaW49MC1yYW5nZS5kdXBsaWNhdGUoKS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwtaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpLmxlbmd0aCksZW5kPWJlZ2luK3JhbmdlLnRleHQubGVuZ3RoKSx7YmVnaW46bm90cmFuc2xhdGU/YmVnaW46dHJhbnNsYXRlUG9zaXRpb24uY2FsbCh0aGlzLGJlZ2luKSxlbmQ6bm90cmFuc2xhdGU/ZW5kOnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwodGhpcyxlbmQpfTtpZihBcnJheS5pc0FycmF5KGJlZ2luKSYmKGVuZD10aGlzLmlzUlRMP2JlZ2luWzBdOmJlZ2luWzFdLGJlZ2luPXRoaXMuaXNSVEw/YmVnaW5bMV06YmVnaW5bMF0pLHZvaWQgMCE9PWJlZ2luLmJlZ2luJiYoZW5kPXRoaXMuaXNSVEw/YmVnaW4uYmVnaW46YmVnaW4uZW5kLGJlZ2luPXRoaXMuaXNSVEw/YmVnaW4uZW5kOmJlZ2luLmJlZ2luKSxcIm51bWJlclwiPT10eXBlb2YgYmVnaW4pe2JlZ2luPW5vdHJhbnNsYXRlP2JlZ2luOnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwodGhpcyxiZWdpbiksZW5kPW5vdHJhbnNsYXRlP2VuZDp0cmFuc2xhdGVQb3NpdGlvbi5jYWxsKHRoaXMsZW5kKSxlbmQ9XCJudW1iZXJcIj09dHlwZW9mIGVuZD9lbmQ6YmVnaW47dmFyIHNjcm9sbENhbGM9cGFyc2VJbnQoKChpbnB1dC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldENvbXB1dGVkU3R5bGU/KGlucHV0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZShpbnB1dCxudWxsKTppbnB1dC5jdXJyZW50U3R5bGUpLmZvbnRTaXplKSplbmQ7aWYoaW5wdXQuc2Nyb2xsTGVmdD1zY3JvbGxDYWxjPmlucHV0LnNjcm9sbFdpZHRoP3Njcm9sbENhbGM6MCxpbnB1dC5pbnB1dG1hc2suY2FyZXRQb3M9e2JlZ2luOmJlZ2luLGVuZDplbmR9LG9wdHMuaW5zZXJ0TW9kZVZpc3VhbCYmITE9PT1vcHRzLmluc2VydE1vZGUmJmJlZ2luPT09ZW5kJiYoaXNEZWxldGV8fGVuZCsrKSxpbnB1dD09PShpbnB1dC5pbnB1dG1hc2suc2hhZG93Um9vdHx8ZG9jdW1lbnQpLmFjdGl2ZUVsZW1lbnQpaWYoXCJzZXRTZWxlY3Rpb25SYW5nZVwiaW4gaW5wdXQpaW5wdXQuc2V0U2VsZWN0aW9uUmFuZ2UoYmVnaW4sZW5kKTtlbHNlIGlmKHdpbmRvdy5nZXRTZWxlY3Rpb24pe2lmKHJhbmdlPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCksdm9pZCAwPT09aW5wdXQuZmlyc3RDaGlsZHx8bnVsbD09PWlucHV0LmZpcnN0Q2hpbGQpe3ZhciB0ZXh0Tm9kZT1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtpbnB1dC5hcHBlbmRDaGlsZCh0ZXh0Tm9kZSl9cmFuZ2Uuc2V0U3RhcnQoaW5wdXQuZmlyc3RDaGlsZCxiZWdpbjxpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoP2JlZ2luOmlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGgpLHJhbmdlLnNldEVuZChpbnB1dC5maXJzdENoaWxkLGVuZDxpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoP2VuZDppbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoKSxyYW5nZS5jb2xsYXBzZSghMCk7dmFyIHNlbD13aW5kb3cuZ2V0U2VsZWN0aW9uKCk7c2VsLnJlbW92ZUFsbFJhbmdlcygpLHNlbC5hZGRSYW5nZShyYW5nZSl9ZWxzZSBpbnB1dC5jcmVhdGVUZXh0UmFuZ2UmJihyYW5nZT1pbnB1dC5jcmVhdGVUZXh0UmFuZ2UoKSxyYW5nZS5jb2xsYXBzZSghMCkscmFuZ2UubW92ZUVuZChcImNoYXJhY3RlclwiLGVuZCkscmFuZ2UubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsYmVnaW4pLHJhbmdlLnNlbGVjdCgpKX19ZnVuY3Rpb24gZGV0ZXJtaW5lTGFzdFJlcXVpcmVkUG9zaXRpb24ocmV0dXJuRGVmaW5pdGlvbil7dmFyIGlucHV0bWFzaz10aGlzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0LCQ9dGhpcy5kZXBlbmRlbmN5TGliLGJ1ZmZlcj1fdmFsaWRhdGlvblRlc3RzLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHRoaXMsITAsZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbCh0aGlzKSwhMCwhMCksYmw9YnVmZmVyLmxlbmd0aCxwb3MsbHZwPWdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwodGhpcykscG9zaXRpb25zPXt9LGx2VGVzdD1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW2x2cF0sbmR4SW50bHpyPXZvaWQgMCE9PWx2VGVzdD9sdlRlc3QubG9jYXRvci5zbGljZSgpOnZvaWQgMCx0ZXN0UG9zO2Zvcihwb3M9bHZwKzE7cG9zPGJ1ZmZlci5sZW5ndGg7cG9zKyspdGVzdFBvcz1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3RUZW1wbGF0ZS5jYWxsKHRoaXMscG9zLG5keEludGx6cixwb3MtMSksbmR4SW50bHpyPXRlc3RQb3MubG9jYXRvci5zbGljZSgpLHBvc2l0aW9uc1twb3NdPSQuZXh0ZW5kKCEwLHt9LHRlc3RQb3MpO3ZhciBsdlRlc3RBbHQ9bHZUZXN0JiZ2b2lkIDAhPT1sdlRlc3QuYWx0ZXJuYXRpb24/bHZUZXN0LmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXTp2b2lkIDA7Zm9yKHBvcz1ibC0xO2x2cDxwb3MmJih0ZXN0UG9zPXBvc2l0aW9uc1twb3NdLCh0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsaXR5fHx0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllciYmdGVzdFBvcy5tYXRjaC5uZXdCbG9ja01hcmtlcnx8bHZUZXN0QWx0JiYobHZUZXN0QWx0IT09cG9zaXRpb25zW3Bvc10ubG9jYXRvcltsdlRlc3QuYWx0ZXJuYXRpb25dJiYxIT10ZXN0UG9zLm1hdGNoLnN0YXRpY3x8ITA9PT10ZXN0UG9zLm1hdGNoLnN0YXRpYyYmdGVzdFBvcy5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0mJl92YWxpZGF0aW9uLmNoZWNrQWx0ZXJuYXRpb25NYXRjaC5jYWxsKHRoaXMsdGVzdFBvcy5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIiksbHZUZXN0QWx0LnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpKSYmXCJcIiE9PV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdHMuY2FsbCh0aGlzLHBvcylbMF0uZGVmKSkmJmJ1ZmZlcltwb3NdPT09X3ZhbGlkYXRpb25UZXN0cy5nZXRQbGFjZWhvbGRlci5jYWxsKHRoaXMscG9zLHRlc3RQb3MubWF0Y2gpKTtwb3MtLSlibC0tO3JldHVybiByZXR1cm5EZWZpbml0aW9uP3tsOmJsLGRlZjpwb3NpdGlvbnNbYmxdP3Bvc2l0aW9uc1tibF0ubWF0Y2g6dm9pZCAwfTpibH1mdW5jdGlvbiBkZXRlcm1pbmVOZXdDYXJldFBvc2l0aW9uKHNlbGVjdGVkQ2FyZXQsdGFiYmVkKXt2YXIgaW5wdXRtYXNrPXRoaXMsbWFza3NldD10aGlzLm1hc2tzZXQsb3B0cz10aGlzLm9wdHM7ZnVuY3Rpb24gZG9SYWRpeEZvY3VzKGNsaWNrUG9zKXtpZihcIlwiIT09b3B0cy5yYWRpeFBvaW50JiYwIT09b3B0cy5kaWdpdHMpe3ZhciB2cHM9bWFza3NldC52YWxpZFBvc2l0aW9ucztpZih2b2lkIDA9PT12cHNbY2xpY2tQb3NdfHx2cHNbY2xpY2tQb3NdLmlucHV0PT09X3ZhbGlkYXRpb25UZXN0cy5nZXRQbGFjZWhvbGRlci5jYWxsKGlucHV0bWFzayxjbGlja1Bvcykpe2lmKGNsaWNrUG9zPHNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLC0xKSlyZXR1cm4hMDt2YXIgcmFkaXhQb3M9Z2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5pbmRleE9mKG9wdHMucmFkaXhQb2ludCk7aWYoLTEhPT1yYWRpeFBvcyl7Zm9yKHZhciB2cCBpbiB2cHMpaWYodnBzW3ZwXSYmcmFkaXhQb3M8dnAmJnZwc1t2cF0uaW5wdXQhPT1fdmFsaWRhdGlvblRlc3RzLmdldFBsYWNlaG9sZGVyLmNhbGwoaW5wdXRtYXNrLHZwKSlyZXR1cm4hMTtyZXR1cm4hMH19fXJldHVybiExfWlmKHRhYmJlZCYmKGlucHV0bWFzay5pc1JUTD9zZWxlY3RlZENhcmV0LmVuZD1zZWxlY3RlZENhcmV0LmJlZ2luOnNlbGVjdGVkQ2FyZXQuYmVnaW49c2VsZWN0ZWRDYXJldC5lbmQpLHNlbGVjdGVkQ2FyZXQuYmVnaW49PT1zZWxlY3RlZENhcmV0LmVuZCl7c3dpdGNoKG9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2spe2Nhc2VcIm5vbmVcIjpicmVhaztjYXNlXCJzZWxlY3RcIjpzZWxlY3RlZENhcmV0PXtiZWdpbjowLGVuZDpnZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmxlbmd0aH07YnJlYWs7Y2FzZVwiaWdub3JlXCI6c2VsZWN0ZWRDYXJldC5lbmQ9c2VsZWN0ZWRDYXJldC5iZWdpbj1zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxnZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGlucHV0bWFzaykpO2JyZWFrO2Nhc2VcInJhZGl4Rm9jdXNcIjppZihkb1JhZGl4Rm9jdXMoc2VsZWN0ZWRDYXJldC5iZWdpbikpe3ZhciByYWRpeFBvcz1nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIikuaW5kZXhPZihvcHRzLnJhZGl4UG9pbnQpO3NlbGVjdGVkQ2FyZXQuZW5kPXNlbGVjdGVkQ2FyZXQuYmVnaW49b3B0cy5udW1lcmljSW5wdXQ/c2Vla05leHQuY2FsbChpbnB1dG1hc2sscmFkaXhQb3MpOnJhZGl4UG9zO2JyZWFrfWRlZmF1bHQ6dmFyIGNsaWNrUG9zaXRpb249c2VsZWN0ZWRDYXJldC5iZWdpbixsdmNsaWNrUG9zaXRpb249Z2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2ssY2xpY2tQb3NpdGlvbiwhMCksbGFzdFBvc2l0aW9uPXNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLC0xIT09bHZjbGlja1Bvc2l0aW9ufHxpc01hc2suY2FsbChpbnB1dG1hc2ssMCk/bHZjbGlja1Bvc2l0aW9uOi0xKTtpZihjbGlja1Bvc2l0aW9uPD1sYXN0UG9zaXRpb24pc2VsZWN0ZWRDYXJldC5lbmQ9c2VsZWN0ZWRDYXJldC5iZWdpbj1pc01hc2suY2FsbChpbnB1dG1hc2ssY2xpY2tQb3NpdGlvbiwhMSwhMCk/Y2xpY2tQb3NpdGlvbjpzZWVrTmV4dC5jYWxsKGlucHV0bWFzayxjbGlja1Bvc2l0aW9uKTtlbHNle3ZhciBsdnA9bWFza3NldC52YWxpZFBvc2l0aW9uc1tsdmNsaWNrUG9zaXRpb25dLHR0PV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdFRlbXBsYXRlLmNhbGwoaW5wdXRtYXNrLGxhc3RQb3NpdGlvbixsdnA/bHZwLm1hdGNoLmxvY2F0b3I6dm9pZCAwLGx2cCkscGxhY2Vob2xkZXI9X3ZhbGlkYXRpb25UZXN0cy5nZXRQbGFjZWhvbGRlci5jYWxsKGlucHV0bWFzayxsYXN0UG9zaXRpb24sdHQubWF0Y2gpO2lmKFwiXCIhPT1wbGFjZWhvbGRlciYmZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKVtsYXN0UG9zaXRpb25dIT09cGxhY2Vob2xkZXImJiEwIT09dHQubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiYhMCE9PXR0Lm1hdGNoLm5ld0Jsb2NrTWFya2VyfHwhaXNNYXNrLmNhbGwoaW5wdXRtYXNrLGxhc3RQb3NpdGlvbixvcHRzLmtlZXBTdGF0aWMsITApJiZ0dC5tYXRjaC5kZWY9PT1wbGFjZWhvbGRlcil7dmFyIG5ld1Bvcz1zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxsYXN0UG9zaXRpb24pOyhuZXdQb3M8PWNsaWNrUG9zaXRpb258fGNsaWNrUG9zaXRpb249PT1sYXN0UG9zaXRpb24pJiYobGFzdFBvc2l0aW9uPW5ld1Bvcyl9c2VsZWN0ZWRDYXJldC5lbmQ9c2VsZWN0ZWRDYXJldC5iZWdpbj1sYXN0UG9zaXRpb259fXJldHVybiBzZWxlY3RlZENhcmV0fX1mdW5jdGlvbiBnZXRCdWZmZXIobm9DYWNoZSl7dmFyIGlucHV0bWFzaz10aGlzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0O3JldHVybiB2b2lkIDAhPT1tYXNrc2V0LmJ1ZmZlciYmITAhPT1ub0NhY2hlfHwobWFza3NldC5idWZmZXI9X3ZhbGlkYXRpb25UZXN0cy5nZXRNYXNrVGVtcGxhdGUuY2FsbCh0aGlzLCEwLGdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwodGhpcyksITApLHZvaWQgMD09PW1hc2tzZXQuX2J1ZmZlciYmKG1hc2tzZXQuX2J1ZmZlcj1tYXNrc2V0LmJ1ZmZlci5zbGljZSgpKSksbWFza3NldC5idWZmZXJ9ZnVuY3Rpb24gZ2V0QnVmZmVyVGVtcGxhdGUoKXt2YXIgaW5wdXRtYXNrPXRoaXMsbWFza3NldD10aGlzLm1hc2tzZXQ7cmV0dXJuIHZvaWQgMD09PW1hc2tzZXQuX2J1ZmZlciYmKG1hc2tzZXQuX2J1ZmZlcj1fdmFsaWRhdGlvblRlc3RzLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHRoaXMsITEsMSksdm9pZCAwPT09bWFza3NldC5idWZmZXImJihtYXNrc2V0LmJ1ZmZlcj1tYXNrc2V0Ll9idWZmZXIuc2xpY2UoKSkpLG1hc2tzZXQuX2J1ZmZlcn1mdW5jdGlvbiBnZXRMYXN0VmFsaWRQb3NpdGlvbihjbG9zZXN0VG8sc3RyaWN0LHZhbGlkUG9zaXRpb25zKXt2YXIgbWFza3NldD10aGlzLm1hc2tzZXQsYmVmb3JlPS0xLGFmdGVyPS0xLHZhbGlkcz12YWxpZFBvc2l0aW9uc3x8bWFza3NldC52YWxpZFBvc2l0aW9ucztmb3IodmFyIHBvc05keCBpbiB2b2lkIDA9PT1jbG9zZXN0VG8mJihjbG9zZXN0VG89LTEpLHZhbGlkcyl7dmFyIHBzTmR4PXBhcnNlSW50KHBvc05keCk7dmFsaWRzW3BzTmR4XSYmKHN0cmljdHx8ITAhPT12YWxpZHNbcHNOZHhdLmdlbmVyYXRlZElucHV0KSYmKHBzTmR4PD1jbG9zZXN0VG8mJihiZWZvcmU9cHNOZHgpLGNsb3Nlc3RUbzw9cHNOZHgmJihhZnRlcj1wc05keCkpfXJldHVybi0xPT09YmVmb3JlfHxiZWZvcmU9PWNsb3Nlc3RUbz9hZnRlcjotMT09YWZ0ZXI/YmVmb3JlOmNsb3Nlc3RUby1iZWZvcmU8YWZ0ZXItY2xvc2VzdFRvP2JlZm9yZTphZnRlcn1mdW5jdGlvbiBpc01hc2socG9zLHN0cmljdCxmdXp6eSl7dmFyIGlucHV0bWFzaz10aGlzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0LHRlc3Q9X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0VGVtcGxhdGUuY2FsbCh0aGlzLHBvcykubWF0Y2g7aWYoXCJcIj09PXRlc3QuZGVmJiYodGVzdD1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbCh0aGlzLHBvcykubWF0Y2gpLCEwIT09dGVzdC5zdGF0aWMpcmV0dXJuIHRlc3QuZm47aWYoITA9PT1mdXp6eSYmdm9pZCAwIT09bWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdJiYhMCE9PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXS5nZW5lcmF0ZWRJbnB1dClyZXR1cm4hMDtpZighMCE9PXN0cmljdCYmLTE8cG9zKXtpZihmdXp6eSl7dmFyIHRlc3RzPV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdHMuY2FsbCh0aGlzLHBvcyk7cmV0dXJuIHRlc3RzLmxlbmd0aD4xKyhcIlwiPT09dGVzdHNbdGVzdHMubGVuZ3RoLTFdLm1hdGNoLmRlZj8xOjApfXZhciB0ZXN0VGVtcGxhdGU9X3ZhbGlkYXRpb25UZXN0cy5kZXRlcm1pbmVUZXN0VGVtcGxhdGUuY2FsbCh0aGlzLHBvcyxfdmFsaWRhdGlvblRlc3RzLmdldFRlc3RzLmNhbGwodGhpcyxwb3MpKSx0ZXN0UGxhY2VIb2xkZXI9X3ZhbGlkYXRpb25UZXN0cy5nZXRQbGFjZWhvbGRlci5jYWxsKHRoaXMscG9zLHRlc3RUZW1wbGF0ZS5tYXRjaCk7cmV0dXJuIHRlc3RUZW1wbGF0ZS5tYXRjaC5kZWYhPT10ZXN0UGxhY2VIb2xkZXJ9cmV0dXJuITF9ZnVuY3Rpb24gcmVzZXRNYXNrU2V0KHNvZnQpe3ZhciBtYXNrc2V0PXRoaXMubWFza3NldDttYXNrc2V0LmJ1ZmZlcj12b2lkIDAsITAhPT1zb2Z0JiYobWFza3NldC52YWxpZFBvc2l0aW9ucz17fSxtYXNrc2V0LnA9MCl9ZnVuY3Rpb24gc2Vla05leHQocG9zLG5ld0Jsb2NrLGZ1enp5KXt2YXIgaW5wdXRtYXNrPXRoaXM7dm9pZCAwPT09ZnV6enkmJihmdXp6eT0hMCk7Zm9yKHZhciBwb3NpdGlvbj1wb3MrMTtcIlwiIT09X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxwb3NpdGlvbikubWF0Y2guZGVmJiYoITA9PT1uZXdCbG9jayYmKCEwIT09X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxwb3NpdGlvbikubWF0Y2gubmV3QmxvY2tNYXJrZXJ8fCFpc01hc2suY2FsbCh0aGlzLHBvc2l0aW9uLHZvaWQgMCwhMCkpfHwhMCE9PW5ld0Jsb2NrJiYhaXNNYXNrLmNhbGwodGhpcyxwb3NpdGlvbix2b2lkIDAsZnV6enkpKTspcG9zaXRpb24rKztyZXR1cm4gcG9zaXRpb259ZnVuY3Rpb24gc2Vla1ByZXZpb3VzKHBvcyxuZXdCbG9jayl7dmFyIGlucHV0bWFzaz10aGlzLHBvc2l0aW9uPXBvcy0xO2lmKHBvczw9MClyZXR1cm4gMDtmb3IoOzA8cG9zaXRpb24mJighMD09PW5ld0Jsb2NrJiYoITAhPT1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbCh0aGlzLHBvc2l0aW9uKS5tYXRjaC5uZXdCbG9ja01hcmtlcnx8IWlzTWFzay5jYWxsKHRoaXMscG9zaXRpb24sdm9pZCAwLCEwKSl8fCEwIT09bmV3QmxvY2smJiFpc01hc2suY2FsbCh0aGlzLHBvc2l0aW9uLHZvaWQgMCwhMCkpOylwb3NpdGlvbi0tO3JldHVybiBwb3NpdGlvbn1mdW5jdGlvbiB0cmFuc2xhdGVQb3NpdGlvbihwb3Mpe3ZhciBpbnB1dG1hc2s9dGhpcyxvcHRzPXRoaXMub3B0cyxlbD10aGlzLmVsO3JldHVybiF0aGlzLmlzUlRMfHxcIm51bWJlclwiIT10eXBlb2YgcG9zfHxvcHRzLmdyZWVkeSYmXCJcIj09PW9wdHMucGxhY2Vob2xkZXJ8fCFlbHx8KHBvcz1NYXRoLmFicyh0aGlzLl92YWx1ZUdldCgpLmxlbmd0aC1wb3MpKSxwb3N9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmRlZmF1bHQ9dm9pZCAwLF9fd2VicGFja19yZXF1aXJlX18oMTYpLF9fd2VicGFja19yZXF1aXJlX18oMTcpO3ZhciBfbWFzaz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEwKSxfaW5wdXRtYXNrPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXyg5KSksX3dpbmRvdz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oNikpLF9tYXNrTGV4ZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyMCksX3ZhbGlkYXRpb25UZXN0cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLF9wb3NpdGlvbmluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF92YWxpZGF0aW9uPV9fd2VicGFja19yZXF1aXJlX18oNCksX2lucHV0SGFuZGxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxfZXZlbnRydWxlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDExKSxfZGVmaW5pdGlvbnM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKSksX2RlZmF1bHRzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygyMikpO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiB0eXBlb2Ygb2JqfTpmdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygb2JqfSxfdHlwZW9mKG9iail9ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fXZhciBkb2N1bWVudD1fd2luZG93LmRlZmF1bHQuZG9jdW1lbnQsZGF0YUtleT1cIl9pbnB1dG1hc2tfb3B0c1wiO2Z1bmN0aW9uIElucHV0bWFzayhhbGlhcyxvcHRpb25zLGludGVybmFsKXtpZighKHRoaXMgaW5zdGFuY2VvZiBJbnB1dG1hc2spKXJldHVybiBuZXcgSW5wdXRtYXNrKGFsaWFzLG9wdGlvbnMsaW50ZXJuYWwpO3RoaXMuZGVwZW5kZW5jeUxpYj1faW5wdXRtYXNrLmRlZmF1bHQsdGhpcy5lbD12b2lkIDAsdGhpcy5ldmVudHM9e30sdGhpcy5tYXNrc2V0PXZvaWQgMCwhMCE9PWludGVybmFsJiYoXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhbGlhcyk/b3B0aW9ucz1hbGlhczoob3B0aW9ucz1vcHRpb25zfHx7fSxhbGlhcyYmKG9wdGlvbnMuYWxpYXM9YWxpYXMpKSx0aGlzLm9wdHM9X2lucHV0bWFzay5kZWZhdWx0LmV4dGVuZCghMCx7fSx0aGlzLmRlZmF1bHRzLG9wdGlvbnMpLHRoaXMubm9NYXNrc0NhY2hlPW9wdGlvbnMmJnZvaWQgMCE9PW9wdGlvbnMuZGVmaW5pdGlvbnMsdGhpcy51c2VyT3B0aW9ucz1vcHRpb25zfHx7fSxyZXNvbHZlQWxpYXModGhpcy5vcHRzLmFsaWFzLG9wdGlvbnMsdGhpcy5vcHRzKSksdGhpcy5yZWZyZXNoVmFsdWU9ITEsdGhpcy51bmRvVmFsdWU9dm9pZCAwLHRoaXMuJGVsPXZvaWQgMCx0aGlzLnNraXBLZXlQcmVzc0V2ZW50PSExLHRoaXMuc2tpcElucHV0RXZlbnQ9ITEsdGhpcy52YWxpZGF0aW9uRXZlbnQ9ITEsdGhpcy5pZ25vcmFibGU9ITEsdGhpcy5tYXhMZW5ndGgsdGhpcy5tb3VzZUVudGVyPSExLHRoaXMub3JpZ2luYWxQbGFjZWhvbGRlcj12b2lkIDAsdGhpcy5pc0NvbXBvc2luZz0hMX1mdW5jdGlvbiByZXNvbHZlQWxpYXMoYWxpYXNTdHIsb3B0aW9ucyxvcHRzKXt2YXIgYWxpYXNEZWZpbml0aW9uPUlucHV0bWFzay5wcm90b3R5cGUuYWxpYXNlc1thbGlhc1N0cl07cmV0dXJuIGFsaWFzRGVmaW5pdGlvbj8oYWxpYXNEZWZpbml0aW9uLmFsaWFzJiZyZXNvbHZlQWxpYXMoYWxpYXNEZWZpbml0aW9uLmFsaWFzLHZvaWQgMCxvcHRzKSxfaW5wdXRtYXNrLmRlZmF1bHQuZXh0ZW5kKCEwLG9wdHMsYWxpYXNEZWZpbml0aW9uKSxfaW5wdXRtYXNrLmRlZmF1bHQuZXh0ZW5kKCEwLG9wdHMsb3B0aW9ucyksITApOihudWxsPT09b3B0cy5tYXNrJiYob3B0cy5tYXNrPWFsaWFzU3RyKSwhMSl9ZnVuY3Rpb24gaW1wb3J0QXR0cmlidXRlT3B0aW9ucyhucHQsb3B0cyx1c2VyT3B0aW9ucyxkYXRhQXR0cmlidXRlKXtmdW5jdGlvbiBpbXBvcnRPcHRpb24ob3B0aW9uLG9wdGlvbkRhdGEpe3ZhciBhdHRyT3B0aW9uPVwiXCI9PT1kYXRhQXR0cmlidXRlP29wdGlvbjpkYXRhQXR0cmlidXRlK1wiLVwiK29wdGlvbjtvcHRpb25EYXRhPXZvaWQgMCE9PW9wdGlvbkRhdGE/b3B0aW9uRGF0YTpucHQuZ2V0QXR0cmlidXRlKGF0dHJPcHRpb24pLG51bGwhPT1vcHRpb25EYXRhJiYoXCJzdHJpbmdcIj09dHlwZW9mIG9wdGlvbkRhdGEmJigwPT09b3B0aW9uLmluZGV4T2YoXCJvblwiKT9vcHRpb25EYXRhPV93aW5kb3cuZGVmYXVsdFtvcHRpb25EYXRhXTpcImZhbHNlXCI9PT1vcHRpb25EYXRhP29wdGlvbkRhdGE9ITE6XCJ0cnVlXCI9PT1vcHRpb25EYXRhJiYob3B0aW9uRGF0YT0hMCkpLHVzZXJPcHRpb25zW29wdGlvbl09b3B0aW9uRGF0YSl9aWYoITA9PT1vcHRzLmltcG9ydERhdGFBdHRyaWJ1dGVzKXt2YXIgYXR0ck9wdGlvbnM9bnB0LmdldEF0dHJpYnV0ZShkYXRhQXR0cmlidXRlKSxvcHRpb24sZGF0YW9wdGlvbnMsb3B0aW9uRGF0YSxwO2lmKGF0dHJPcHRpb25zJiZcIlwiIT09YXR0ck9wdGlvbnMmJihhdHRyT3B0aW9ucz1hdHRyT3B0aW9ucy5yZXBsYWNlKC8nL2csJ1wiJyksZGF0YW9wdGlvbnM9SlNPTi5wYXJzZShcIntcIithdHRyT3B0aW9ucytcIn1cIikpLGRhdGFvcHRpb25zKWZvcihwIGluIG9wdGlvbkRhdGE9dm9pZCAwLGRhdGFvcHRpb25zKWlmKFwiYWxpYXNcIj09PXAudG9Mb3dlckNhc2UoKSl7b3B0aW9uRGF0YT1kYXRhb3B0aW9uc1twXTticmVha31mb3Iob3B0aW9uIGluIGltcG9ydE9wdGlvbihcImFsaWFzXCIsb3B0aW9uRGF0YSksdXNlck9wdGlvbnMuYWxpYXMmJnJlc29sdmVBbGlhcyh1c2VyT3B0aW9ucy5hbGlhcyx1c2VyT3B0aW9ucyxvcHRzKSxvcHRzKXtpZihkYXRhb3B0aW9ucylmb3IocCBpbiBvcHRpb25EYXRhPXZvaWQgMCxkYXRhb3B0aW9ucylpZihwLnRvTG93ZXJDYXNlKCk9PT1vcHRpb24udG9Mb3dlckNhc2UoKSl7b3B0aW9uRGF0YT1kYXRhb3B0aW9uc1twXTticmVha31pbXBvcnRPcHRpb24ob3B0aW9uLG9wdGlvbkRhdGEpfX1yZXR1cm4gX2lucHV0bWFzay5kZWZhdWx0LmV4dGVuZCghMCxvcHRzLHVzZXJPcHRpb25zKSxcInJ0bFwiIT09bnB0LmRpciYmIW9wdHMucmlnaHRBbGlnbnx8KG5wdC5zdHlsZS50ZXh0QWxpZ249XCJyaWdodFwiKSxcInJ0bFwiIT09bnB0LmRpciYmIW9wdHMubnVtZXJpY0lucHV0fHwobnB0LmRpcj1cImx0clwiLG5wdC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXJcIiksb3B0cy5pc1JUTD0hMCksT2JqZWN0LmtleXModXNlck9wdGlvbnMpLmxlbmd0aH1JbnB1dG1hc2sucHJvdG90eXBlPXtkYXRhQXR0cmlidXRlOlwiZGF0YS1pbnB1dG1hc2tcIixkZWZhdWx0czpfZGVmYXVsdHMuZGVmYXVsdCxkZWZpbml0aW9uczpfZGVmaW5pdGlvbnMuZGVmYXVsdCxhbGlhc2VzOnt9LG1hc2tzQ2FjaGU6e30sZ2V0IGlzUlRMKCl7cmV0dXJuIHRoaXMub3B0cy5pc1JUTHx8dGhpcy5vcHRzLm51bWVyaWNJbnB1dH0sbWFzazpmdW5jdGlvbiBtYXNrKGVsZW1zKXt2YXIgdGhhdD10aGlzO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlbGVtcyYmKGVsZW1zPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1zKXx8ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtcykpLGVsZW1zPWVsZW1zLm5vZGVOYW1lP1tlbGVtc106QXJyYXkuaXNBcnJheShlbGVtcyk/ZWxlbXM6QXJyYXkuZnJvbShlbGVtcyksZWxlbXMuZm9yRWFjaChmdW5jdGlvbihlbCxuZHgpe3ZhciBzY29wZWRPcHRzPV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQoITAse30sdGhhdC5vcHRzKTtpZihpbXBvcnRBdHRyaWJ1dGVPcHRpb25zKGVsLHNjb3BlZE9wdHMsX2lucHV0bWFzay5kZWZhdWx0LmV4dGVuZCghMCx7fSx0aGF0LnVzZXJPcHRpb25zKSx0aGF0LmRhdGFBdHRyaWJ1dGUpKXt2YXIgbWFza3NldD0oMCxfbWFza0xleGVyLmdlbmVyYXRlTWFza1NldCkoc2NvcGVkT3B0cyx0aGF0Lm5vTWFza3NDYWNoZSk7dm9pZCAwIT09bWFza3NldCYmKHZvaWQgMCE9PWVsLmlucHV0bWFzayYmKGVsLmlucHV0bWFzay5vcHRzLmF1dG9Vbm1hc2s9ITAsZWwuaW5wdXRtYXNrLnJlbW92ZSgpKSxlbC5pbnB1dG1hc2s9bmV3IElucHV0bWFzayh2b2lkIDAsdm9pZCAwLCEwKSxlbC5pbnB1dG1hc2sub3B0cz1zY29wZWRPcHRzLGVsLmlucHV0bWFzay5ub01hc2tzQ2FjaGU9dGhhdC5ub01hc2tzQ2FjaGUsZWwuaW5wdXRtYXNrLnVzZXJPcHRpb25zPV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQoITAse30sdGhhdC51c2VyT3B0aW9ucyksZWwuaW5wdXRtYXNrLmVsPWVsLGVsLmlucHV0bWFzay4kZWw9KDAsX2lucHV0bWFzay5kZWZhdWx0KShlbCksZWwuaW5wdXRtYXNrLm1hc2tzZXQ9bWFza3NldCxfaW5wdXRtYXNrLmRlZmF1bHQuZGF0YShlbCxkYXRhS2V5LHRoYXQudXNlck9wdGlvbnMpLF9tYXNrLm1hc2suY2FsbChlbC5pbnB1dG1hc2spKX19KSxlbGVtcyYmZWxlbXNbMF0mJmVsZW1zWzBdLmlucHV0bWFza3x8dGhpc30sb3B0aW9uOmZ1bmN0aW9uIG9wdGlvbihvcHRpb25zLG5vcmVtYXNrKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2Ygb3B0aW9ucz90aGlzLm9wdHNbb3B0aW9uc106XCJvYmplY3RcIj09PV90eXBlb2Yob3B0aW9ucyk/KF9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQodGhpcy51c2VyT3B0aW9ucyxvcHRpb25zKSx0aGlzLmVsJiYhMCE9PW5vcmVtYXNrJiZ0aGlzLm1hc2sodGhpcy5lbCksdGhpcyk6dm9pZCAwfSx1bm1hc2tlZHZhbHVlOmZ1bmN0aW9uIHVubWFza2VkdmFsdWUodmFsdWUpe2lmKHRoaXMubWFza3NldD10aGlzLm1hc2tzZXR8fCgwLF9tYXNrTGV4ZXIuZ2VuZXJhdGVNYXNrU2V0KSh0aGlzLm9wdHMsdGhpcy5ub01hc2tzQ2FjaGUpLHZvaWQgMD09PXRoaXMuZWx8fHZvaWQgMCE9PXZhbHVlKXt2YXIgdmFsdWVCdWZmZXI9KFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub3B0cy5vbkJlZm9yZU1hc2smJnRoaXMub3B0cy5vbkJlZm9yZU1hc2suY2FsbCh0aGlzLHZhbHVlLHRoaXMub3B0cyl8fHZhbHVlKS5zcGxpdChcIlwiKTtfaW5wdXRIYW5kbGluZy5jaGVja1ZhbC5jYWxsKHRoaXMsdm9pZCAwLCExLCExLHZhbHVlQnVmZmVyKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLm9wdHMub25CZWZvcmVXcml0ZSYmdGhpcy5vcHRzLm9uQmVmb3JlV3JpdGUuY2FsbCh0aGlzLHZvaWQgMCxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcyksMCx0aGlzLm9wdHMpfXJldHVybiBfaW5wdXRIYW5kbGluZy51bm1hc2tlZHZhbHVlLmNhbGwodGhpcyx0aGlzLmVsKX0scmVtb3ZlOmZ1bmN0aW9uIHJlbW92ZSgpe2lmKHRoaXMuZWwpe19pbnB1dG1hc2suZGVmYXVsdC5kYXRhKHRoaXMuZWwsZGF0YUtleSxudWxsKTt2YXIgY3Y9dGhpcy5vcHRzLmF1dG9Vbm1hc2s/KDAsX2lucHV0SGFuZGxpbmcudW5tYXNrZWR2YWx1ZSkodGhpcy5lbCk6dGhpcy5fdmFsdWVHZXQodGhpcy5vcHRzLmF1dG9Vbm1hc2spLHZhbHVlUHJvcGVydHk7Y3YhPT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbCh0aGlzKS5qb2luKFwiXCIpP3RoaXMuX3ZhbHVlU2V0KGN2LHRoaXMub3B0cy5hdXRvVW5tYXNrKTp0aGlzLl92YWx1ZVNldChcIlwiKSxfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9mZih0aGlzLmVsKSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJiZPYmplY3QuZ2V0UHJvdG90eXBlT2Y/KHZhbHVlUHJvcGVydHk9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcy5lbCksXCJ2YWx1ZVwiKSx2YWx1ZVByb3BlcnR5JiZ0aGlzLl9fdmFsdWVHZXQmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLmVsLFwidmFsdWVcIix7Z2V0OnRoaXMuX192YWx1ZUdldCxzZXQ6dGhpcy5fX3ZhbHVlU2V0LGNvbmZpZ3VyYWJsZTohMH0pKTpkb2N1bWVudC5fX2xvb2t1cEdldHRlcl9fJiZ0aGlzLmVsLl9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSYmdGhpcy5fX3ZhbHVlR2V0JiYodGhpcy5lbC5fX2RlZmluZUdldHRlcl9fKFwidmFsdWVcIix0aGlzLl9fdmFsdWVHZXQpLHRoaXMuZWwuX19kZWZpbmVTZXR0ZXJfXyhcInZhbHVlXCIsdGhpcy5fX3ZhbHVlU2V0KSksdGhpcy5lbC5pbnB1dG1hc2s9dm9pZCAwfXJldHVybiB0aGlzLmVsfSxnZXRlbXB0eW1hc2s6ZnVuY3Rpb24gZ2V0ZW1wdHltYXNrKCl7cmV0dXJuIHRoaXMubWFza3NldD10aGlzLm1hc2tzZXR8fCgwLF9tYXNrTGV4ZXIuZ2VuZXJhdGVNYXNrU2V0KSh0aGlzLm9wdHMsdGhpcy5ub01hc2tzQ2FjaGUpLF9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKHRoaXMpLmpvaW4oXCJcIil9LGhhc01hc2tlZFZhbHVlOmZ1bmN0aW9uIGhhc01hc2tlZFZhbHVlKCl7cmV0dXJuIXRoaXMub3B0cy5hdXRvVW5tYXNrfSxpc0NvbXBsZXRlOmZ1bmN0aW9uIGlzQ29tcGxldGUoKXtyZXR1cm4gdGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsX21hc2tMZXhlci5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksX3ZhbGlkYXRpb24uaXNDb21wbGV0ZS5jYWxsKHRoaXMsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKHRoaXMpKX0sZ2V0bWV0YWRhdGE6ZnVuY3Rpb24gZ2V0bWV0YWRhdGEoKXtpZih0aGlzLm1hc2tzZXQ9dGhpcy5tYXNrc2V0fHwoMCxfbWFza0xleGVyLmdlbmVyYXRlTWFza1NldCkodGhpcy5vcHRzLHRoaXMubm9NYXNrc0NhY2hlKSxBcnJheS5pc0FycmF5KHRoaXMubWFza3NldC5tZXRhZGF0YSkpe3ZhciBtYXNrVGFyZ2V0PV92YWxpZGF0aW9uVGVzdHMuZ2V0TWFza1RlbXBsYXRlLmNhbGwodGhpcywhMCwwLCExKS5qb2luKFwiXCIpO3JldHVybiB0aGlzLm1hc2tzZXQubWV0YWRhdGEuZm9yRWFjaChmdW5jdGlvbihtdGR0KXtyZXR1cm4gbXRkdC5tYXNrIT09bWFza1RhcmdldHx8KG1hc2tUYXJnZXQ9bXRkdCwhMSl9KSxtYXNrVGFyZ2V0fXJldHVybiB0aGlzLm1hc2tzZXQubWV0YWRhdGF9LGlzVmFsaWQ6ZnVuY3Rpb24gaXNWYWxpZCh2YWx1ZSl7aWYodGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsX21hc2tMZXhlci5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksdmFsdWUpe3ZhciB2YWx1ZUJ1ZmZlcj0oXCJmdW5jdGlvblwiPT10eXBlb2YgdGhpcy5vcHRzLm9uQmVmb3JlTWFzayYmdGhpcy5vcHRzLm9uQmVmb3JlTWFzay5jYWxsKHRoaXMsdmFsdWUsdGhpcy5vcHRzKXx8dmFsdWUpLnNwbGl0KFwiXCIpO19pbnB1dEhhbmRsaW5nLmNoZWNrVmFsLmNhbGwodGhpcyx2b2lkIDAsITAsITEsdmFsdWVCdWZmZXIpfWVsc2UgdmFsdWU9dGhpcy5pc1JUTD9fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcykuc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcykuam9pbihcIlwiKTtmb3IodmFyIGJ1ZmZlcj1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcykscmw9X3Bvc2l0aW9uaW5nLmRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uLmNhbGwodGhpcyksbG1pYj1idWZmZXIubGVuZ3RoLTE7cmw8bG1pYiYmIV9wb3NpdGlvbmluZy5pc01hc2suY2FsbCh0aGlzLGxtaWIpO2xtaWItLSk7cmV0dXJuIGJ1ZmZlci5zcGxpY2UocmwsbG1pYisxLXJsKSxfdmFsaWRhdGlvbi5pc0NvbXBsZXRlLmNhbGwodGhpcyxidWZmZXIpJiZ2YWx1ZT09PSh0aGlzLmlzUlRMP19wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbCh0aGlzKS5zbGljZSgpLnJldmVyc2UoKS5qb2luKFwiXCIpOl9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbCh0aGlzKS5qb2luKFwiXCIpKX0sZm9ybWF0OmZ1bmN0aW9uIGZvcm1hdCh2YWx1ZSxtZXRhZGF0YSl7dGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsX21hc2tMZXhlci5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSk7dmFyIHZhbHVlQnVmZmVyPShcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLm9wdHMub25CZWZvcmVNYXNrJiZ0aGlzLm9wdHMub25CZWZvcmVNYXNrLmNhbGwodGhpcyx2YWx1ZSx0aGlzLm9wdHMpfHx2YWx1ZSkuc3BsaXQoXCJcIik7X2lucHV0SGFuZGxpbmcuY2hlY2tWYWwuY2FsbCh0aGlzLHZvaWQgMCwhMCwhMSx2YWx1ZUJ1ZmZlcik7dmFyIGZvcm1hdHRlZFZhbHVlPXRoaXMuaXNSVEw/X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKHRoaXMpLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIik6X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKHRoaXMpLmpvaW4oXCJcIik7cmV0dXJuIG1ldGFkYXRhP3t2YWx1ZTpmb3JtYXR0ZWRWYWx1ZSxtZXRhZGF0YTp0aGlzLmdldG1ldGFkYXRhKCl9OmZvcm1hdHRlZFZhbHVlfSxzZXRWYWx1ZTpmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSl7dGhpcy5lbCYmKDAsX2lucHV0bWFzay5kZWZhdWx0KSh0aGlzLmVsKS50cmlnZ2VyKFwic2V0dmFsdWVcIixbdmFsdWVdKX0sYW5hbHlzZU1hc2s6X21hc2tMZXhlci5hbmFseXNlTWFza30sSW5wdXRtYXNrLmV4dGVuZERlZmF1bHRzPWZ1bmN0aW9uKG9wdGlvbnMpe19pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQoITAsSW5wdXRtYXNrLnByb3RvdHlwZS5kZWZhdWx0cyxvcHRpb25zKX0sSW5wdXRtYXNrLmV4dGVuZERlZmluaXRpb25zPWZ1bmN0aW9uKGRlZmluaXRpb24pe19pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQoITAsSW5wdXRtYXNrLnByb3RvdHlwZS5kZWZpbml0aW9ucyxkZWZpbml0aW9uKX0sSW5wdXRtYXNrLmV4dGVuZEFsaWFzZXM9ZnVuY3Rpb24oYWxpYXMpe19pbnB1dG1hc2suZGVmYXVsdC5leHRlbmQoITAsSW5wdXRtYXNrLnByb3RvdHlwZS5hbGlhc2VzLGFsaWFzKX0sSW5wdXRtYXNrLmZvcm1hdD1mdW5jdGlvbih2YWx1ZSxvcHRpb25zLG1ldGFkYXRhKXtyZXR1cm4gSW5wdXRtYXNrKG9wdGlvbnMpLmZvcm1hdCh2YWx1ZSxtZXRhZGF0YSl9LElucHV0bWFzay51bm1hc2s9ZnVuY3Rpb24odmFsdWUsb3B0aW9ucyl7cmV0dXJuIElucHV0bWFzayhvcHRpb25zKS51bm1hc2tlZHZhbHVlKHZhbHVlKX0sSW5wdXRtYXNrLmlzVmFsaWQ9ZnVuY3Rpb24odmFsdWUsb3B0aW9ucyl7cmV0dXJuIElucHV0bWFzayhvcHRpb25zKS5pc1ZhbGlkKHZhbHVlKX0sSW5wdXRtYXNrLnJlbW92ZT1mdW5jdGlvbihlbGVtcyl7XCJzdHJpbmdcIj09dHlwZW9mIGVsZW1zJiYoZWxlbXM9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbXMpfHxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW1zKSksZWxlbXM9ZWxlbXMubm9kZU5hbWU/W2VsZW1zXTplbGVtcyxlbGVtcy5mb3JFYWNoKGZ1bmN0aW9uKGVsKXtlbC5pbnB1dG1hc2smJmVsLmlucHV0bWFzay5yZW1vdmUoKX0pfSxJbnB1dG1hc2suc2V0VmFsdWU9ZnVuY3Rpb24oZWxlbXMsdmFsdWUpe1wic3RyaW5nXCI9PXR5cGVvZiBlbGVtcyYmKGVsZW1zPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1zKXx8ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtcykpLGVsZW1zPWVsZW1zLm5vZGVOYW1lP1tlbGVtc106ZWxlbXMsZWxlbXMuZm9yRWFjaChmdW5jdGlvbihlbCl7ZWwuaW5wdXRtYXNrP2VsLmlucHV0bWFzay5zZXRWYWx1ZSh2YWx1ZSk6KDAsX2lucHV0bWFzay5kZWZhdWx0KShlbCkudHJpZ2dlcihcInNldHZhbHVlXCIsW3ZhbHVlXSl9KX0sSW5wdXRtYXNrLmRlcGVuZGVuY3lMaWI9X2lucHV0bWFzay5kZWZhdWx0LF93aW5kb3cuZGVmYXVsdC5JbnB1dG1hc2s9SW5wdXRtYXNrO3ZhciBfZGVmYXVsdD1JbnB1dG1hc2s7ZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBnZXRMb2NhdG9yKHRzdCxhbGlnbil7dmFyIGxvY2F0b3I9KG51bGwhPXRzdC5hbHRlcm5hdGlvbj90c3QubWxvY1tnZXREZWNpc2lvblRha2VyKHRzdCldOnRzdC5sb2NhdG9yKS5qb2luKFwiXCIpO2lmKFwiXCIhPT1sb2NhdG9yKWZvcig7bG9jYXRvci5sZW5ndGg8YWxpZ247KWxvY2F0b3IrPVwiMFwiO3JldHVybiBsb2NhdG9yfWZ1bmN0aW9uIGdldERlY2lzaW9uVGFrZXIodHN0KXt2YXIgZGVjaXNpb25UYWtlcj10c3QubG9jYXRvclt0c3QuYWx0ZXJuYXRpb25dO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBkZWNpc2lvblRha2VyJiYwPGRlY2lzaW9uVGFrZXIubGVuZ3RoJiYoZGVjaXNpb25UYWtlcj1kZWNpc2lvblRha2VyLnNwbGl0KFwiLFwiKVswXSksdm9pZCAwIT09ZGVjaXNpb25UYWtlcj9kZWNpc2lvblRha2VyLnRvU3RyaW5nKCk6XCJcIn1mdW5jdGlvbiBnZXRQbGFjZWhvbGRlcihwb3MsdGVzdCxyZXR1cm5QTCl7dmFyIGlucHV0bWFzaz10aGlzLG9wdHM9dGhpcy5vcHRzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0O2lmKHRlc3Q9dGVzdHx8Z2V0VGVzdC5jYWxsKHRoaXMscG9zKS5tYXRjaCx2b2lkIDAhPT10ZXN0LnBsYWNlaG9sZGVyfHwhMD09PXJldHVyblBMKXJldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHRlc3QucGxhY2Vob2xkZXI/dGVzdC5wbGFjZWhvbGRlcihvcHRzKTp0ZXN0LnBsYWNlaG9sZGVyO2lmKCEwIT09dGVzdC5zdGF0aWMpcmV0dXJuIG9wdHMucGxhY2Vob2xkZXIuY2hhckF0KHBvcyVvcHRzLnBsYWNlaG9sZGVyLmxlbmd0aCk7aWYoLTE8cG9zJiZ2b2lkIDA9PT1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc10pe3ZhciB0ZXN0cz1nZXRUZXN0cy5jYWxsKHRoaXMscG9zKSxzdGF0aWNBbHRlcm5hdGlvbnM9W10scHJldlRlc3Q7aWYodGVzdHMubGVuZ3RoPjErKFwiXCI9PT10ZXN0c1t0ZXN0cy5sZW5ndGgtMV0ubWF0Y2guZGVmPzE6MCkpZm9yKHZhciBpPTA7aTx0ZXN0cy5sZW5ndGg7aSsrKWlmKFwiXCIhPT10ZXN0c1tpXS5tYXRjaC5kZWYmJiEwIT09dGVzdHNbaV0ubWF0Y2gub3B0aW9uYWxpdHkmJiEwIT09dGVzdHNbaV0ubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiYoITA9PT10ZXN0c1tpXS5tYXRjaC5zdGF0aWN8fHZvaWQgMD09PXByZXZUZXN0fHwhMSE9PXRlc3RzW2ldLm1hdGNoLmZuLnRlc3QocHJldlRlc3QubWF0Y2guZGVmLG1hc2tzZXQscG9zLCEwLG9wdHMpKSYmKHN0YXRpY0FsdGVybmF0aW9ucy5wdXNoKHRlc3RzW2ldKSwhMD09PXRlc3RzW2ldLm1hdGNoLnN0YXRpYyYmKHByZXZUZXN0PXRlc3RzW2ldKSwxPHN0YXRpY0FsdGVybmF0aW9ucy5sZW5ndGgmJi9bMC05YS1iQS1aXS8udGVzdChzdGF0aWNBbHRlcm5hdGlvbnNbMF0ubWF0Y2guZGVmKSkpcmV0dXJuIG9wdHMucGxhY2Vob2xkZXIuY2hhckF0KHBvcyVvcHRzLnBsYWNlaG9sZGVyLmxlbmd0aCl9cmV0dXJuIHRlc3QuZGVmfWZ1bmN0aW9uIGdldE1hc2tUZW1wbGF0ZShiYXNlT25JbnB1dCxtaW5pbWFsUG9zLGluY2x1ZGVNb2RlLG5vSml0LGNsZWFyT3B0aW9uYWxUYWlsKXt2YXIgaW5wdXRtYXNrPXRoaXMsb3B0cz10aGlzLm9wdHMsbWFza3NldD10aGlzLm1hc2tzZXQsZ3JlZWR5PW9wdHMuZ3JlZWR5O2NsZWFyT3B0aW9uYWxUYWlsJiYob3B0cy5ncmVlZHk9ITEpLG1pbmltYWxQb3M9bWluaW1hbFBvc3x8MDt2YXIgbWFza1RlbXBsYXRlPVtdLG5keEludGx6cixwb3M9MCx0ZXN0LHRlc3RQb3Msaml0UmVuZGVyU3RhdGljO2Rve2lmKCEwPT09YmFzZU9uSW5wdXQmJm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXSl0ZXN0UG9zPWNsZWFyT3B0aW9uYWxUYWlsJiYhMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXS5tYXRjaC5vcHRpb25hbGl0eSYmdm9pZCAwPT09bWFza3NldC52YWxpZFBvc2l0aW9uc1twb3MrMV0mJighMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXS5nZW5lcmF0ZWRJbnB1dHx8bWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLmlucHV0PT1vcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXImJjA8cG9zKT9kZXRlcm1pbmVUZXN0VGVtcGxhdGUuY2FsbCh0aGlzLHBvcyxnZXRUZXN0cy5jYWxsKHRoaXMscG9zLG5keEludGx6cixwb3MtMSkpOm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXSx0ZXN0PXRlc3RQb3MubWF0Y2gsbmR4SW50bHpyPXRlc3RQb3MubG9jYXRvci5zbGljZSgpLG1hc2tUZW1wbGF0ZS5wdXNoKCEwPT09aW5jbHVkZU1vZGU/dGVzdFBvcy5pbnB1dDohMT09PWluY2x1ZGVNb2RlP3Rlc3QubmF0aXZlRGVmOmdldFBsYWNlaG9sZGVyLmNhbGwodGhpcyxwb3MsdGVzdCkpO2Vsc2V7dGVzdFBvcz1nZXRUZXN0VGVtcGxhdGUuY2FsbCh0aGlzLHBvcyxuZHhJbnRsenIscG9zLTEpLHRlc3Q9dGVzdFBvcy5tYXRjaCxuZHhJbnRsenI9dGVzdFBvcy5sb2NhdG9yLnNsaWNlKCk7dmFyIGppdE1hc2tpbmc9ITAhPT1ub0ppdCYmKCExIT09b3B0cy5qaXRNYXNraW5nP29wdHMuaml0TWFza2luZzp0ZXN0LmppdCk7aml0UmVuZGVyU3RhdGljPWppdFJlbmRlclN0YXRpYyYmdGVzdC5zdGF0aWMmJnRlc3QuZGVmIT09b3B0cy5ncm91cFNlcGFyYXRvciYmbnVsbD09PXRlc3QuZm58fG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zLTFdJiZ0ZXN0LnN0YXRpYyYmdGVzdC5kZWYhPT1vcHRzLmdyb3VwU2VwYXJhdG9yJiZudWxsPT09dGVzdC5mbixqaXRSZW5kZXJTdGF0aWN8fCExPT09aml0TWFza2luZ3x8dm9pZCAwPT09aml0TWFza2luZ3x8XCJudW1iZXJcIj09dHlwZW9mIGppdE1hc2tpbmcmJmlzRmluaXRlKGppdE1hc2tpbmcpJiZwb3M8aml0TWFza2luZz9tYXNrVGVtcGxhdGUucHVzaCghMT09PWluY2x1ZGVNb2RlP3Rlc3QubmF0aXZlRGVmOmdldFBsYWNlaG9sZGVyLmNhbGwodGhpcyxwb3MsdGVzdCkpOmppdFJlbmRlclN0YXRpYz0hMX1wb3MrK313aGlsZSgodm9pZCAwPT09dGhpcy5tYXhMZW5ndGh8fHBvczx0aGlzLm1heExlbmd0aCkmJighMCE9PXRlc3Quc3RhdGljfHxcIlwiIT09dGVzdC5kZWYpfHxwb3M8bWluaW1hbFBvcyk7cmV0dXJuXCJcIj09PW1hc2tUZW1wbGF0ZVttYXNrVGVtcGxhdGUubGVuZ3RoLTFdJiZtYXNrVGVtcGxhdGUucG9wKCksITE9PT1pbmNsdWRlTW9kZSYmdm9pZCAwIT09bWFza3NldC5tYXNrTGVuZ3RofHwobWFza3NldC5tYXNrTGVuZ3RoPXBvcy0xKSxvcHRzLmdyZWVkeT1ncmVlZHksbWFza1RlbXBsYXRlfWZ1bmN0aW9uIGdldFRlc3RUZW1wbGF0ZShwb3MsbmR4SW50bHpyLHRzdFBzKXt2YXIgaW5wdXRtYXNrPXRoaXMsbWFza3NldD10aGlzLm1hc2tzZXQ7cmV0dXJuIG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXXx8ZGV0ZXJtaW5lVGVzdFRlbXBsYXRlLmNhbGwodGhpcyxwb3MsZ2V0VGVzdHMuY2FsbCh0aGlzLHBvcyxuZHhJbnRsenI/bmR4SW50bHpyLnNsaWNlKCk6bmR4SW50bHpyLHRzdFBzKSl9ZnVuY3Rpb24gZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHBvcyx0ZXN0cyl7dmFyIGlucHV0bWFzaz10aGlzLG9wdHM9dGhpcy5vcHRzO3Bvcz0wPHBvcz9wb3MtMTowO2Zvcih2YXIgYWx0VGVzdD1nZXRUZXN0LmNhbGwodGhpcyxwb3MpLHRhcmdldExvY2F0b3I9Z2V0TG9jYXRvcihhbHRUZXN0KSx0c3RMb2NhdG9yLGNsb3Nlc3QsYmVzdE1hdGNoLG5keD0wO25keDx0ZXN0cy5sZW5ndGg7bmR4Kyspe3ZhciB0c3Q9dGVzdHNbbmR4XTt0c3RMb2NhdG9yPWdldExvY2F0b3IodHN0LHRhcmdldExvY2F0b3IubGVuZ3RoKTt2YXIgZGlzdGFuY2U9TWF0aC5hYnModHN0TG9jYXRvci10YXJnZXRMb2NhdG9yKTsodm9pZCAwPT09Y2xvc2VzdHx8XCJcIiE9PXRzdExvY2F0b3ImJmRpc3RhbmNlPGNsb3Nlc3R8fGJlc3RNYXRjaCYmIW9wdHMuZ3JlZWR5JiZiZXN0TWF0Y2gubWF0Y2gub3B0aW9uYWxpdHkmJlwibWFzdGVyXCI9PT1iZXN0TWF0Y2gubWF0Y2gubmV3QmxvY2tNYXJrZXImJighdHN0Lm1hdGNoLm9wdGlvbmFsaXR5fHwhdHN0Lm1hdGNoLm5ld0Jsb2NrTWFya2VyKXx8YmVzdE1hdGNoJiZiZXN0TWF0Y2gubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiYhdHN0Lm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcikmJihjbG9zZXN0PWRpc3RhbmNlLGJlc3RNYXRjaD10c3QpfXJldHVybiBiZXN0TWF0Y2h9ZnVuY3Rpb24gZ2V0VGVzdChwb3MsdGVzdHMpe3ZhciBpbnB1dG1hc2s9dGhpcyxtYXNrc2V0PXRoaXMubWFza3NldDtyZXR1cm4gbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdP21hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXToodGVzdHN8fGdldFRlc3RzLmNhbGwodGhpcyxwb3MpKVswXX1mdW5jdGlvbiBnZXRUZXN0cyhwb3MsbmR4SW50bHpyLHRzdFBzKXt2YXIgaW5wdXRtYXNrPXRoaXMsJD10aGlzLmRlcGVuZGVuY3lMaWIsbWFza3NldD10aGlzLm1hc2tzZXQsb3B0cz10aGlzLm9wdHMsZWw9dGhpcy5lbCxtYXNrVG9rZW5zPW1hc2tzZXQubWFza1Rva2VuLHRlc3RQb3M9bmR4SW50bHpyP3RzdFBzOjAsbmR4SW5pdGlhbGl6ZXI9bmR4SW50bHpyP25keEludGx6ci5zbGljZSgpOlswXSxtYXRjaGVzPVtdLGluc2VydFN0b3A9ITEsbGF0ZXN0TWF0Y2gsY2FjaGVEZXBlbmRlbmN5PW5keEludGx6cj9uZHhJbnRsenIuam9pbihcIlwiKTpcIlwiO2Z1bmN0aW9uIHJlc29sdmVUZXN0RnJvbVRva2VuKG1hc2tUb2tlbixuZHhJbml0aWFsaXplcixsb29wTmR4LHF1YW50aWZpZXJSZWN1cnNlKXtmdW5jdGlvbiBoYW5kbGVNYXRjaChtYXRjaCxsb29wTmR4LHF1YW50aWZpZXJSZWN1cnNlKXtmdW5jdGlvbiBpc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsdG9rZW5Hcm91cCl7dmFyIGZpcnN0TWF0Y2g9MD09PXRva2VuR3JvdXAubWF0Y2hlcy5pbmRleE9mKGxhdGVzdE1hdGNoKTtyZXR1cm4gZmlyc3RNYXRjaHx8dG9rZW5Hcm91cC5tYXRjaGVzLmV2ZXJ5KGZ1bmN0aW9uKG1hdGNoLG5keCl7cmV0dXJuITA9PT1tYXRjaC5pc1F1YW50aWZpZXI/Zmlyc3RNYXRjaD1pc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsdG9rZW5Hcm91cC5tYXRjaGVzW25keC0xXSk6T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1hdGNoLFwibWF0Y2hlc1wiKSYmKGZpcnN0TWF0Y2g9aXNGaXJzdE1hdGNoKGxhdGVzdE1hdGNoLG1hdGNoKSksIWZpcnN0TWF0Y2h9KSxmaXJzdE1hdGNofWZ1bmN0aW9uIHJlc29sdmVOZHhJbml0aWFsaXplcihwb3MsYWx0ZXJuYXRlTmR4LHRhcmdldEFsdGVybmF0aW9uKXt2YXIgYmVzdE1hdGNoLGluZGV4UG9zO2lmKChtYXNrc2V0LnRlc3RzW3Bvc118fG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXSkmJihtYXNrc2V0LnRlc3RzW3Bvc118fFttYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc11dKS5ldmVyeShmdW5jdGlvbihsbW50LG5keCl7aWYobG1udC5tbG9jW2FsdGVybmF0ZU5keF0pcmV0dXJuIGJlc3RNYXRjaD1sbW50LCExO3ZhciBhbHRlcm5hdGlvbj12b2lkIDAhPT10YXJnZXRBbHRlcm5hdGlvbj90YXJnZXRBbHRlcm5hdGlvbjpsbW50LmFsdGVybmF0aW9uLG5keFBvcz12b2lkIDAhPT1sbW50LmxvY2F0b3JbYWx0ZXJuYXRpb25dP2xtbnQubG9jYXRvclthbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5pbmRleE9mKGFsdGVybmF0ZU5keCk6LTE7cmV0dXJuKHZvaWQgMD09PWluZGV4UG9zfHxuZHhQb3M8aW5kZXhQb3MpJiYtMSE9PW5keFBvcyYmKGJlc3RNYXRjaD1sbW50LGluZGV4UG9zPW5keFBvcyksITB9KSxiZXN0TWF0Y2gpe3ZhciBiZXN0TWF0Y2hBbHRJbmRleD1iZXN0TWF0Y2gubG9jYXRvcltiZXN0TWF0Y2guYWx0ZXJuYXRpb25dLGxvY2F0b3I9YmVzdE1hdGNoLm1sb2NbYWx0ZXJuYXRlTmR4XXx8YmVzdE1hdGNoLm1sb2NbYmVzdE1hdGNoQWx0SW5kZXhdfHxiZXN0TWF0Y2gubG9jYXRvcjtyZXR1cm4gbG9jYXRvci5zbGljZSgodm9pZCAwIT09dGFyZ2V0QWx0ZXJuYXRpb24/dGFyZ2V0QWx0ZXJuYXRpb246YmVzdE1hdGNoLmFsdGVybmF0aW9uKSsxKX1yZXR1cm4gdm9pZCAwIT09dGFyZ2V0QWx0ZXJuYXRpb24/cmVzb2x2ZU5keEluaXRpYWxpemVyKHBvcyxhbHRlcm5hdGVOZHgpOnZvaWQgMH1mdW5jdGlvbiBpc1N1YnNldE9mKHNvdXJjZSx0YXJnZXQpe2Z1bmN0aW9uIGV4cGFuZChwYXR0ZXJuKXtmb3IodmFyIGV4cGFuZGVkPVtdLHN0YXJ0PS0xLGVuZCxpPTAsbD1wYXR0ZXJuLmxlbmd0aDtpPGw7aSsrKWlmKFwiLVwiPT09cGF0dGVybi5jaGFyQXQoaSkpZm9yKGVuZD1wYXR0ZXJuLmNoYXJDb2RlQXQoaSsxKTsrK3N0YXJ0PGVuZDspZXhwYW5kZWQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKHN0YXJ0KSk7ZWxzZSBzdGFydD1wYXR0ZXJuLmNoYXJDb2RlQXQoaSksZXhwYW5kZWQucHVzaChwYXR0ZXJuLmNoYXJBdChpKSk7cmV0dXJuIGV4cGFuZGVkLmpvaW4oXCJcIil9cmV0dXJuIHNvdXJjZS5tYXRjaC5kZWY9PT10YXJnZXQubWF0Y2gubmF0aXZlRGVmfHwhKCEob3B0cy5yZWdleHx8c291cmNlLm1hdGNoLmZuIGluc3RhbmNlb2YgUmVnRXhwJiZ0YXJnZXQubWF0Y2guZm4gaW5zdGFuY2VvZiBSZWdFeHApfHwhMD09PXNvdXJjZS5tYXRjaC5zdGF0aWN8fCEwPT09dGFyZ2V0Lm1hdGNoLnN0YXRpYykmJi0xIT09ZXhwYW5kKHRhcmdldC5tYXRjaC5mbi50b1N0cmluZygpLnJlcGxhY2UoL1tbXFxdL10vZyxcIlwiKSkuaW5kZXhPZihleHBhbmQoc291cmNlLm1hdGNoLmZuLnRvU3RyaW5nKCkucmVwbGFjZSgvW1tcXF0vXS9nLFwiXCIpKSl9ZnVuY3Rpb24gc3RhdGljQ2FuTWF0Y2hEZWZpbml0aW9uKHNvdXJjZSx0YXJnZXQpe3JldHVybiEwPT09c291cmNlLm1hdGNoLnN0YXRpYyYmITAhPT10YXJnZXQubWF0Y2guc3RhdGljJiZ0YXJnZXQubWF0Y2guZm4udGVzdChzb3VyY2UubWF0Y2guZGVmLG1hc2tzZXQscG9zLCExLG9wdHMsITEpfWZ1bmN0aW9uIHNldE1lcmdlTG9jYXRvcnModGFyZ2V0TWF0Y2gsYWx0TWF0Y2gpe3ZhciBhbHRlcm5hdGlvbk5keD10YXJnZXRNYXRjaC5hbHRlcm5hdGlvbixzaG91bGRNZXJnZT12b2lkIDA9PT1hbHRNYXRjaHx8YWx0ZXJuYXRpb25OZHg9PT1hbHRNYXRjaC5hbHRlcm5hdGlvbiYmLTE9PT10YXJnZXRNYXRjaC5sb2NhdG9yW2FsdGVybmF0aW9uTmR4XS50b1N0cmluZygpLmluZGV4T2YoYWx0TWF0Y2gubG9jYXRvclthbHRlcm5hdGlvbk5keF0pO2lmKCFzaG91bGRNZXJnZSYmYWx0ZXJuYXRpb25OZHg+YWx0TWF0Y2guYWx0ZXJuYXRpb24pZm9yKHZhciBpPWFsdE1hdGNoLmFsdGVybmF0aW9uO2k8YWx0ZXJuYXRpb25OZHg7aSsrKWlmKHRhcmdldE1hdGNoLmxvY2F0b3JbaV0hPT1hbHRNYXRjaC5sb2NhdG9yW2ldKXthbHRlcm5hdGlvbk5keD1pLHNob3VsZE1lcmdlPSEwO2JyZWFrfWlmKHNob3VsZE1lcmdlKXt0YXJnZXRNYXRjaC5tbG9jPXRhcmdldE1hdGNoLm1sb2N8fHt9O3ZhciBsb2NOZHg9dGFyZ2V0TWF0Y2gubG9jYXRvclthbHRlcm5hdGlvbk5keF07aWYodm9pZCAwIT09bG9jTmR4KXtpZihcInN0cmluZ1wiPT10eXBlb2YgbG9jTmR4JiYobG9jTmR4PWxvY05keC5zcGxpdChcIixcIilbMF0pLHZvaWQgMD09PXRhcmdldE1hdGNoLm1sb2NbbG9jTmR4XSYmKHRhcmdldE1hdGNoLm1sb2NbbG9jTmR4XT10YXJnZXRNYXRjaC5sb2NhdG9yLnNsaWNlKCkpLHZvaWQgMCE9PWFsdE1hdGNoKXtmb3IodmFyIG5keCBpbiBhbHRNYXRjaC5tbG9jKVwic3RyaW5nXCI9PXR5cGVvZiBuZHgmJihuZHg9bmR4LnNwbGl0KFwiLFwiKVswXSksdm9pZCAwPT09dGFyZ2V0TWF0Y2gubWxvY1tuZHhdJiYodGFyZ2V0TWF0Y2gubWxvY1tuZHhdPWFsdE1hdGNoLm1sb2NbbmR4XSk7dGFyZ2V0TWF0Y2gubG9jYXRvclthbHRlcm5hdGlvbk5keF09T2JqZWN0LmtleXModGFyZ2V0TWF0Y2gubWxvYykuam9pbihcIixcIil9cmV0dXJuITB9dGFyZ2V0TWF0Y2guYWx0ZXJuYXRpb249dm9pZCAwfXJldHVybiExfWZ1bmN0aW9uIGlzU2FtZUxldmVsKHRhcmdldE1hdGNoLGFsdE1hdGNoKXtpZih0YXJnZXRNYXRjaC5sb2NhdG9yLmxlbmd0aCE9PWFsdE1hdGNoLmxvY2F0b3IubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbG9jTmR4PXRhcmdldE1hdGNoLmFsdGVybmF0aW9uKzE7bG9jTmR4PHRhcmdldE1hdGNoLmxvY2F0b3IubGVuZ3RoO2xvY05keCsrKWlmKHRhcmdldE1hdGNoLmxvY2F0b3JbbG9jTmR4XSE9PWFsdE1hdGNoLmxvY2F0b3JbbG9jTmR4XSlyZXR1cm4hMTtyZXR1cm4hMH1pZih0ZXN0UG9zPnBvcytvcHRzLl9tYXhUZXN0UG9zKXRocm93XCJJbnB1dG1hc2s6IFRoZXJlIGlzIHByb2JhYmx5IGFuIGVycm9yIGluIHlvdXIgbWFzayBkZWZpbml0aW9uIG9yIGluIHRoZSBjb2RlLiBDcmVhdGUgYW4gaXNzdWUgb24gZ2l0aHViIHdpdGggYW4gZXhhbXBsZSBvZiB0aGUgbWFzayB5b3UgYXJlIHVzaW5nLiBcIittYXNrc2V0Lm1hc2s7aWYodGVzdFBvcz09PXBvcyYmdm9pZCAwPT09bWF0Y2gubWF0Y2hlcylyZXR1cm4gbWF0Y2hlcy5wdXNoKHttYXRjaDptYXRjaCxsb2NhdG9yOmxvb3BOZHgucmV2ZXJzZSgpLGNkOmNhY2hlRGVwZW5kZW5jeSxtbG9jOnt9fSksITA7aWYodm9pZCAwIT09bWF0Y2gubWF0Y2hlcyl7aWYobWF0Y2guaXNHcm91cCYmcXVhbnRpZmllclJlY3Vyc2UhPT1tYXRjaCl7aWYobWF0Y2g9aGFuZGxlTWF0Y2gobWFza1Rva2VuLm1hdGNoZXNbbWFza1Rva2VuLm1hdGNoZXMuaW5kZXhPZihtYXRjaCkrMV0sbG9vcE5keCxxdWFudGlmaWVyUmVjdXJzZSksbWF0Y2gpcmV0dXJuITB9ZWxzZSBpZihtYXRjaC5pc09wdGlvbmFsKXt2YXIgb3B0aW9uYWxUb2tlbj1tYXRjaCxtdGNoc05keD1tYXRjaGVzLmxlbmd0aDtpZihtYXRjaD1yZXNvbHZlVGVzdEZyb21Ub2tlbihtYXRjaCxuZHhJbml0aWFsaXplcixsb29wTmR4LHF1YW50aWZpZXJSZWN1cnNlKSxtYXRjaCl7aWYobWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uKG10Y2gsbmR4KXttdGNoc05keDw9bmR4JiYobXRjaC5tYXRjaC5vcHRpb25hbGl0eT0hMCl9KSxsYXRlc3RNYXRjaD1tYXRjaGVzW21hdGNoZXMubGVuZ3RoLTFdLm1hdGNoLHZvaWQgMCE9PXF1YW50aWZpZXJSZWN1cnNlfHwhaXNGaXJzdE1hdGNoKGxhdGVzdE1hdGNoLG9wdGlvbmFsVG9rZW4pKXJldHVybiEwO2luc2VydFN0b3A9ITAsdGVzdFBvcz1wb3N9fWVsc2UgaWYobWF0Y2guaXNBbHRlcm5hdG9yKXt2YXIgYWx0ZXJuYXRlVG9rZW49bWF0Y2gsbWFsdGVybmF0ZU1hdGNoZXM9W10sbWFsdE1hdGNoZXMsY3VycmVudE1hdGNoZXM9bWF0Y2hlcy5zbGljZSgpLGxvb3BOZHhDbnQ9bG9vcE5keC5sZW5ndGgsYWx0SW5kZXg9MDxuZHhJbml0aWFsaXplci5sZW5ndGg/bmR4SW5pdGlhbGl6ZXIuc2hpZnQoKTotMTtpZigtMT09PWFsdEluZGV4fHxcInN0cmluZ1wiPT10eXBlb2YgYWx0SW5kZXgpe3ZhciBjdXJyZW50UG9zPXRlc3RQb3MsbmR4SW5pdGlhbGl6ZXJDbG9uZT1uZHhJbml0aWFsaXplci5zbGljZSgpLGFsdEluZGV4QXJyPVtdLGFtbmR4O2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhbHRJbmRleClhbHRJbmRleEFycj1hbHRJbmRleC5zcGxpdChcIixcIik7ZWxzZSBmb3IoYW1uZHg9MDthbW5keDxhbHRlcm5hdGVUb2tlbi5tYXRjaGVzLmxlbmd0aDthbW5keCsrKWFsdEluZGV4QXJyLnB1c2goYW1uZHgudG9TdHJpbmcoKSk7aWYodm9pZCAwIT09bWFza3NldC5leGNsdWRlc1twb3NdKXtmb3IodmFyIGFsdEluZGV4QXJyQ2xvbmU9YWx0SW5kZXhBcnIuc2xpY2UoKSxpPTAsZXhsPW1hc2tzZXQuZXhjbHVkZXNbcG9zXS5sZW5ndGg7aTxleGw7aSsrKXt2YXIgZXhjbHVkZVNldD1tYXNrc2V0LmV4Y2x1ZGVzW3Bvc11baV0udG9TdHJpbmcoKS5zcGxpdChcIjpcIik7bG9vcE5keC5sZW5ndGg9PWV4Y2x1ZGVTZXRbMV0mJmFsdEluZGV4QXJyLnNwbGljZShhbHRJbmRleEFyci5pbmRleE9mKGV4Y2x1ZGVTZXRbMF0pLDEpfTA9PT1hbHRJbmRleEFyci5sZW5ndGgmJihkZWxldGUgbWFza3NldC5leGNsdWRlc1twb3NdLGFsdEluZGV4QXJyPWFsdEluZGV4QXJyQ2xvbmUpfSghMD09PW9wdHMua2VlcFN0YXRpY3x8aXNGaW5pdGUocGFyc2VJbnQob3B0cy5rZWVwU3RhdGljKSkmJmN1cnJlbnRQb3M+PW9wdHMua2VlcFN0YXRpYykmJihhbHRJbmRleEFycj1hbHRJbmRleEFyci5zbGljZSgwLDEpKTtmb3IodmFyIHVuTWF0Y2hlZEFsdGVybmF0aW9uPSExLG5keD0wO25keDxhbHRJbmRleEFyci5sZW5ndGg7bmR4Kyspe2FtbmR4PXBhcnNlSW50KGFsdEluZGV4QXJyW25keF0pLG1hdGNoZXM9W10sbmR4SW5pdGlhbGl6ZXI9XCJzdHJpbmdcIj09dHlwZW9mIGFsdEluZGV4JiZyZXNvbHZlTmR4SW5pdGlhbGl6ZXIodGVzdFBvcyxhbW5keCxsb29wTmR4Q250KXx8bmR4SW5pdGlhbGl6ZXJDbG9uZS5zbGljZSgpLGFsdGVybmF0ZVRva2VuLm1hdGNoZXNbYW1uZHhdJiZoYW5kbGVNYXRjaChhbHRlcm5hdGVUb2tlbi5tYXRjaGVzW2FtbmR4XSxbYW1uZHhdLmNvbmNhdChsb29wTmR4KSxxdWFudGlmaWVyUmVjdXJzZSk/bWF0Y2g9ITA6MD09PW5keCYmKHVuTWF0Y2hlZEFsdGVybmF0aW9uPSEwKSxtYWx0TWF0Y2hlcz1tYXRjaGVzLnNsaWNlKCksdGVzdFBvcz1jdXJyZW50UG9zLG1hdGNoZXM9W107Zm9yKHZhciBuZHgxPTA7bmR4MTxtYWx0TWF0Y2hlcy5sZW5ndGg7bmR4MSsrKXt2YXIgYWx0TWF0Y2g9bWFsdE1hdGNoZXNbbmR4MV0sZHJvcE1hdGNoPSExO2FsdE1hdGNoLm1hdGNoLmppdD1hbHRNYXRjaC5tYXRjaC5qaXR8fHVuTWF0Y2hlZEFsdGVybmF0aW9uLGFsdE1hdGNoLmFsdGVybmF0aW9uPWFsdE1hdGNoLmFsdGVybmF0aW9ufHxsb29wTmR4Q250LHNldE1lcmdlTG9jYXRvcnMoYWx0TWF0Y2gpO2Zvcih2YXIgbmR4Mj0wO25keDI8bWFsdGVybmF0ZU1hdGNoZXMubGVuZ3RoO25keDIrKyl7dmFyIGFsdE1hdGNoMj1tYWx0ZXJuYXRlTWF0Y2hlc1tuZHgyXTtpZihcInN0cmluZ1wiIT10eXBlb2YgYWx0SW5kZXh8fHZvaWQgMCE9PWFsdE1hdGNoLmFsdGVybmF0aW9uJiZhbHRJbmRleEFyci5pbmNsdWRlcyhhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoLmFsdGVybmF0aW9uXS50b1N0cmluZygpKSl7aWYoYWx0TWF0Y2gubWF0Y2gubmF0aXZlRGVmPT09YWx0TWF0Y2gyLm1hdGNoLm5hdGl2ZURlZil7ZHJvcE1hdGNoPSEwLHNldE1lcmdlTG9jYXRvcnMoYWx0TWF0Y2gyLGFsdE1hdGNoKTticmVha31pZihpc1N1YnNldE9mKGFsdE1hdGNoLGFsdE1hdGNoMikpe3NldE1lcmdlTG9jYXRvcnMoYWx0TWF0Y2gsYWx0TWF0Y2gyKSYmKGRyb3BNYXRjaD0hMCxtYWx0ZXJuYXRlTWF0Y2hlcy5zcGxpY2UobWFsdGVybmF0ZU1hdGNoZXMuaW5kZXhPZihhbHRNYXRjaDIpLDAsYWx0TWF0Y2gpKTticmVha31pZihpc1N1YnNldE9mKGFsdE1hdGNoMixhbHRNYXRjaCkpe3NldE1lcmdlTG9jYXRvcnMoYWx0TWF0Y2gyLGFsdE1hdGNoKTticmVha31pZihzdGF0aWNDYW5NYXRjaERlZmluaXRpb24oYWx0TWF0Y2gsYWx0TWF0Y2gyKSl7aXNTYW1lTGV2ZWwoYWx0TWF0Y2gsYWx0TWF0Y2gyKXx8dm9pZCAwIT09ZWwuaW5wdXRtYXNrLnVzZXJPcHRpb25zLmtlZXBTdGF0aWM/c2V0TWVyZ2VMb2NhdG9ycyhhbHRNYXRjaCxhbHRNYXRjaDIpJiYoZHJvcE1hdGNoPSEwLG1hbHRlcm5hdGVNYXRjaGVzLnNwbGljZShtYWx0ZXJuYXRlTWF0Y2hlcy5pbmRleE9mKGFsdE1hdGNoMiksMCxhbHRNYXRjaCkpOm9wdHMua2VlcFN0YXRpYz0hMDticmVha319fWRyb3BNYXRjaHx8bWFsdGVybmF0ZU1hdGNoZXMucHVzaChhbHRNYXRjaCl9fW1hdGNoZXM9Y3VycmVudE1hdGNoZXMuY29uY2F0KG1hbHRlcm5hdGVNYXRjaGVzKSx0ZXN0UG9zPXBvcyxpbnNlcnRTdG9wPTA8bWF0Y2hlcy5sZW5ndGgsbWF0Y2g9MDxtYWx0ZXJuYXRlTWF0Y2hlcy5sZW5ndGgsbmR4SW5pdGlhbGl6ZXI9bmR4SW5pdGlhbGl6ZXJDbG9uZS5zbGljZSgpfWVsc2UgbWF0Y2g9aGFuZGxlTWF0Y2goYWx0ZXJuYXRlVG9rZW4ubWF0Y2hlc1thbHRJbmRleF18fG1hc2tUb2tlbi5tYXRjaGVzW2FsdEluZGV4XSxbYWx0SW5kZXhdLmNvbmNhdChsb29wTmR4KSxxdWFudGlmaWVyUmVjdXJzZSk7aWYobWF0Y2gpcmV0dXJuITB9ZWxzZSBpZihtYXRjaC5pc1F1YW50aWZpZXImJnF1YW50aWZpZXJSZWN1cnNlIT09bWFza1Rva2VuLm1hdGNoZXNbbWFza1Rva2VuLm1hdGNoZXMuaW5kZXhPZihtYXRjaCktMV0pZm9yKHZhciBxdD1tYXRjaCxxbmR4PTA8bmR4SW5pdGlhbGl6ZXIubGVuZ3RoP25keEluaXRpYWxpemVyLnNoaWZ0KCk6MDtxbmR4PChpc05hTihxdC5xdWFudGlmaWVyLm1heCk/cW5keCsxOnF0LnF1YW50aWZpZXIubWF4KSYmdGVzdFBvczw9cG9zO3FuZHgrKyl7dmFyIHRva2VuR3JvdXA9bWFza1Rva2VuLm1hdGNoZXNbbWFza1Rva2VuLm1hdGNoZXMuaW5kZXhPZihxdCktMV07aWYobWF0Y2g9aGFuZGxlTWF0Y2godG9rZW5Hcm91cCxbcW5keF0uY29uY2F0KGxvb3BOZHgpLHRva2VuR3JvdXApLG1hdGNoKXtpZihsYXRlc3RNYXRjaD1tYXRjaGVzW21hdGNoZXMubGVuZ3RoLTFdLm1hdGNoLGxhdGVzdE1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcj1xbmR4Pj1xdC5xdWFudGlmaWVyLm1pbixsYXRlc3RNYXRjaC5qaXQ9KHFuZHh8fDEpKnRva2VuR3JvdXAubWF0Y2hlcy5pbmRleE9mKGxhdGVzdE1hdGNoKT49cXQucXVhbnRpZmllci5qaXQsbGF0ZXN0TWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiZpc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsdG9rZW5Hcm91cCkpe2luc2VydFN0b3A9ITAsdGVzdFBvcz1wb3M7YnJlYWt9cmV0dXJuIGxhdGVzdE1hdGNoLmppdCYmKG1hc2tzZXQuaml0T2Zmc2V0W3Bvc109dG9rZW5Hcm91cC5tYXRjaGVzLmxlbmd0aC10b2tlbkdyb3VwLm1hdGNoZXMuaW5kZXhPZihsYXRlc3RNYXRjaCkpLCEwfX1lbHNlIGlmKG1hdGNoPXJlc29sdmVUZXN0RnJvbVRva2VuKG1hdGNoLG5keEluaXRpYWxpemVyLGxvb3BOZHgscXVhbnRpZmllclJlY3Vyc2UpLG1hdGNoKXJldHVybiEwfWVsc2UgdGVzdFBvcysrfWZvcih2YXIgdG5keD0wPG5keEluaXRpYWxpemVyLmxlbmd0aD9uZHhJbml0aWFsaXplci5zaGlmdCgpOjA7dG5keDxtYXNrVG9rZW4ubWF0Y2hlcy5sZW5ndGg7dG5keCsrKWlmKCEwIT09bWFza1Rva2VuLm1hdGNoZXNbdG5keF0uaXNRdWFudGlmaWVyKXt2YXIgbWF0Y2g9aGFuZGxlTWF0Y2gobWFza1Rva2VuLm1hdGNoZXNbdG5keF0sW3RuZHhdLmNvbmNhdChsb29wTmR4KSxxdWFudGlmaWVyUmVjdXJzZSk7aWYobWF0Y2gmJnRlc3RQb3M9PT1wb3MpcmV0dXJuIG1hdGNoO2lmKHBvczx0ZXN0UG9zKWJyZWFrfX1mdW5jdGlvbiBtZXJnZUxvY2F0b3JzKHBvcyx0ZXN0cyl7dmFyIGxvY2F0b3I9W10sYWx0ZXJuYXRpb247cmV0dXJuIEFycmF5LmlzQXJyYXkodGVzdHMpfHwodGVzdHM9W3Rlc3RzXSksMDx0ZXN0cy5sZW5ndGgmJih2b2lkIDA9PT10ZXN0c1swXS5hbHRlcm5hdGlvbnx8ITA9PT1vcHRzLmtlZXBTdGF0aWM/KGxvY2F0b3I9ZGV0ZXJtaW5lVGVzdFRlbXBsYXRlLmNhbGwoaW5wdXRtYXNrLHBvcyx0ZXN0cy5zbGljZSgpKS5sb2NhdG9yLnNsaWNlKCksMD09PWxvY2F0b3IubGVuZ3RoJiYobG9jYXRvcj10ZXN0c1swXS5sb2NhdG9yLnNsaWNlKCkpKTp0ZXN0cy5mb3JFYWNoKGZ1bmN0aW9uKHRzdCl7XCJcIiE9PXRzdC5kZWYmJigwPT09bG9jYXRvci5sZW5ndGg/KGFsdGVybmF0aW9uPXRzdC5hbHRlcm5hdGlvbixsb2NhdG9yPXRzdC5sb2NhdG9yLnNsaWNlKCkpOnRzdC5sb2NhdG9yW2FsdGVybmF0aW9uXSYmLTE9PT1sb2NhdG9yW2FsdGVybmF0aW9uXS50b1N0cmluZygpLmluZGV4T2YodHN0LmxvY2F0b3JbYWx0ZXJuYXRpb25dKSYmKGxvY2F0b3JbYWx0ZXJuYXRpb25dKz1cIixcIit0c3QubG9jYXRvclthbHRlcm5hdGlvbl0pKX0pKSxsb2NhdG9yfWlmKC0xPHBvcyYmKHZvaWQgMD09PWlucHV0bWFzay5tYXhMZW5ndGh8fHBvczxpbnB1dG1hc2subWF4TGVuZ3RoKSl7aWYodm9pZCAwPT09bmR4SW50bHpyKXtmb3IodmFyIHByZXZpb3VzUG9zPXBvcy0xLHRlc3Q7dm9pZCAwPT09KHRlc3Q9bWFza3NldC52YWxpZFBvc2l0aW9uc1twcmV2aW91c1Bvc118fG1hc2tzZXQudGVzdHNbcHJldmlvdXNQb3NdKSYmLTE8cHJldmlvdXNQb3M7KXByZXZpb3VzUG9zLS07dm9pZCAwIT09dGVzdCYmLTE8cHJldmlvdXNQb3MmJihuZHhJbml0aWFsaXplcj1tZXJnZUxvY2F0b3JzKHByZXZpb3VzUG9zLHRlc3QpLGNhY2hlRGVwZW5kZW5jeT1uZHhJbml0aWFsaXplci5qb2luKFwiXCIpLHRlc3RQb3M9cHJldmlvdXNQb3MpfWlmKG1hc2tzZXQudGVzdHNbcG9zXSYmbWFza3NldC50ZXN0c1twb3NdWzBdLmNkPT09Y2FjaGVEZXBlbmRlbmN5KXJldHVybiBtYXNrc2V0LnRlc3RzW3Bvc107Zm9yKHZhciBtdG5keD1uZHhJbml0aWFsaXplci5zaGlmdCgpO210bmR4PG1hc2tUb2tlbnMubGVuZ3RoO210bmR4Kyspe3ZhciBtYXRjaD1yZXNvbHZlVGVzdEZyb21Ub2tlbihtYXNrVG9rZW5zW210bmR4XSxuZHhJbml0aWFsaXplcixbbXRuZHhdKTtpZihtYXRjaCYmdGVzdFBvcz09PXBvc3x8cG9zPHRlc3RQb3MpYnJlYWt9fXJldHVybiAwIT09bWF0Y2hlcy5sZW5ndGgmJiFpbnNlcnRTdG9wfHxtYXRjaGVzLnB1c2goe21hdGNoOntmbjpudWxsLHN0YXRpYzohMCxvcHRpb25hbGl0eTohMSxjYXNpbmc6bnVsbCxkZWY6XCJcIixwbGFjZWhvbGRlcjpcIlwifSxsb2NhdG9yOltdLG1sb2M6e30sY2Q6Y2FjaGVEZXBlbmRlbmN5fSksdm9pZCAwIT09bmR4SW50bHpyJiZtYXNrc2V0LnRlc3RzW3Bvc10/JC5leHRlbmQoITAsW10sbWF0Y2hlcyk6KG1hc2tzZXQudGVzdHNbcG9zXT0kLmV4dGVuZCghMCxbXSxtYXRjaGVzKSxtYXNrc2V0LnRlc3RzW3Bvc10pfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuZGV0ZXJtaW5lVGVzdFRlbXBsYXRlPWRldGVybWluZVRlc3RUZW1wbGF0ZSxleHBvcnRzLmdldERlY2lzaW9uVGFrZXI9Z2V0RGVjaXNpb25UYWtlcixleHBvcnRzLmdldE1hc2tUZW1wbGF0ZT1nZXRNYXNrVGVtcGxhdGUsZXhwb3J0cy5nZXRQbGFjZWhvbGRlcj1nZXRQbGFjZWhvbGRlcixleHBvcnRzLmdldFRlc3Q9Z2V0VGVzdCxleHBvcnRzLmdldFRlc3RzPWdldFRlc3RzLGV4cG9ydHMuZ2V0VGVzdFRlbXBsYXRlPWdldFRlc3RUZW1wbGF0ZX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5hbHRlcm5hdGU9YWx0ZXJuYXRlLGV4cG9ydHMuY2hlY2tBbHRlcm5hdGlvbk1hdGNoPWNoZWNrQWx0ZXJuYXRpb25NYXRjaCxleHBvcnRzLmlzQ29tcGxldGU9aXNDb21wbGV0ZSxleHBvcnRzLmlzVmFsaWQ9aXNWYWxpZCxleHBvcnRzLnJlZnJlc2hGcm9tQnVmZmVyPXJlZnJlc2hGcm9tQnVmZmVyLGV4cG9ydHMucmV2YWxpZGF0ZU1hc2s9cmV2YWxpZGF0ZU1hc2ssZXhwb3J0cy5oYW5kbGVSZW1vdmU9aGFuZGxlUmVtb3ZlO3ZhciBfdmFsaWRhdGlvblRlc3RzPV9fd2VicGFja19yZXF1aXJlX18oMyksX2tleWNvZGU9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDApKSxfcG9zaXRpb25pbmc9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxfZXZlbnRoYW5kbGVycz1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBhbHRlcm5hdGUobWFza1BvcyxjLHN0cmljdCxmcm9tSXNWYWxpZCxyQWx0UG9zLHNlbGVjdGlvbil7dmFyIGlucHV0bWFzaz10aGlzLCQ9dGhpcy5kZXBlbmRlbmN5TGliLG9wdHM9dGhpcy5vcHRzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0LHZhbGlkUHNDbG9uZT0kLmV4dGVuZCghMCx7fSxtYXNrc2V0LnZhbGlkUG9zaXRpb25zKSx0c3RDbG9uZT0kLmV4dGVuZCghMCx7fSxtYXNrc2V0LnRlc3RzKSxsYXN0QWx0LGFsdGVybmF0aW9uLGlzVmFsaWRSc2x0PSExLHJldHVyblJzbHQ9ITEsYWx0UG9zLHByZXZBbHRQb3MsaSx2YWxpZFBvcyxkZWNpc2lvblBvcyxsQWx0UG9zPXZvaWQgMCE9PXJBbHRQb3M/ckFsdFBvczpfcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbCh0aGlzKSxuZXh0UG9zLGlucHV0LGJlZ2luLGVuZDtpZihzZWxlY3Rpb24mJihiZWdpbj1zZWxlY3Rpb24uYmVnaW4sZW5kPXNlbGVjdGlvbi5lbmQsc2VsZWN0aW9uLmJlZ2luPnNlbGVjdGlvbi5lbmQmJihiZWdpbj1zZWxlY3Rpb24uZW5kLGVuZD1zZWxlY3Rpb24uYmVnaW4pKSwtMT09PWxBbHRQb3MmJnZvaWQgMD09PXJBbHRQb3MpbGFzdEFsdD0wLHByZXZBbHRQb3M9X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxsYXN0QWx0KSxhbHRlcm5hdGlvbj1wcmV2QWx0UG9zLmFsdGVybmF0aW9uO2Vsc2UgZm9yKDswPD1sQWx0UG9zO2xBbHRQb3MtLSlpZihhbHRQb3M9bWFza3NldC52YWxpZFBvc2l0aW9uc1tsQWx0UG9zXSxhbHRQb3MmJnZvaWQgMCE9PWFsdFBvcy5hbHRlcm5hdGlvbil7aWYocHJldkFsdFBvcyYmcHJldkFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0hPT1hbHRQb3MubG9jYXRvclthbHRQb3MuYWx0ZXJuYXRpb25dKWJyZWFrO2xhc3RBbHQ9bEFsdFBvcyxhbHRlcm5hdGlvbj1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW2xhc3RBbHRdLmFsdGVybmF0aW9uLHByZXZBbHRQb3M9YWx0UG9zfWlmKHZvaWQgMCE9PWFsdGVybmF0aW9uKXtkZWNpc2lvblBvcz1wYXJzZUludChsYXN0QWx0KSxtYXNrc2V0LmV4Y2x1ZGVzW2RlY2lzaW9uUG9zXT1tYXNrc2V0LmV4Y2x1ZGVzW2RlY2lzaW9uUG9zXXx8W10sITAhPT1tYXNrUG9zJiZtYXNrc2V0LmV4Y2x1ZGVzW2RlY2lzaW9uUG9zXS5wdXNoKCgwLF92YWxpZGF0aW9uVGVzdHMuZ2V0RGVjaXNpb25UYWtlcikocHJldkFsdFBvcykrXCI6XCIrcHJldkFsdFBvcy5hbHRlcm5hdGlvbik7dmFyIHZhbGlkSW5wdXRzPVtdLHJlc3VsdFBvcz0tMTtmb3IoaT1kZWNpc2lvblBvcztpPF9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHRoaXMsdm9pZCAwLCEwKSsxO2krKyktMT09PXJlc3VsdFBvcyYmbWFza1Bvczw9aSYmdm9pZCAwIT09YyYmKHZhbGlkSW5wdXRzLnB1c2goYykscmVzdWx0UG9zPXZhbGlkSW5wdXRzLmxlbmd0aC0xKSx2YWxpZFBvcz1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW2ldLHZhbGlkUG9zJiYhMCE9PXZhbGlkUG9zLmdlbmVyYXRlZElucHV0JiYodm9pZCAwPT09c2VsZWN0aW9ufHxpPGJlZ2lufHxlbmQ8PWkpJiZ2YWxpZElucHV0cy5wdXNoKHZhbGlkUG9zLmlucHV0KSxkZWxldGUgbWFza3NldC52YWxpZFBvc2l0aW9uc1tpXTtmb3IoLTE9PT1yZXN1bHRQb3MmJnZvaWQgMCE9PWMmJih2YWxpZElucHV0cy5wdXNoKGMpLHJlc3VsdFBvcz12YWxpZElucHV0cy5sZW5ndGgtMSk7dm9pZCAwIT09bWFza3NldC5leGNsdWRlc1tkZWNpc2lvblBvc10mJm1hc2tzZXQuZXhjbHVkZXNbZGVjaXNpb25Qb3NdLmxlbmd0aDwxMDspe2ZvcihtYXNrc2V0LnRlc3RzPXt9LF9wb3NpdGlvbmluZy5yZXNldE1hc2tTZXQuY2FsbCh0aGlzLCEwKSxpc1ZhbGlkUnNsdD0hMCxpPTA7aTx2YWxpZElucHV0cy5sZW5ndGgmJihuZXh0UG9zPWlzVmFsaWRSc2x0LmNhcmV0fHxfcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbCh0aGlzLHZvaWQgMCwhMCkrMSxpbnB1dD12YWxpZElucHV0c1tpXSxpc1ZhbGlkUnNsdD1pc1ZhbGlkLmNhbGwodGhpcyxuZXh0UG9zLGlucHV0LCExLGZyb21Jc1ZhbGlkLCEwKSk7aSsrKWk9PT1yZXN1bHRQb3MmJihyZXR1cm5Sc2x0PWlzVmFsaWRSc2x0KSwxPT1tYXNrUG9zJiZpc1ZhbGlkUnNsdCYmKHJldHVyblJzbHQ9e2NhcmV0UG9zOml9KTtpZihpc1ZhbGlkUnNsdClicmVhaztpZihfcG9zaXRpb25pbmcucmVzZXRNYXNrU2V0LmNhbGwodGhpcykscHJldkFsdFBvcz1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbCh0aGlzLGRlY2lzaW9uUG9zKSxtYXNrc2V0LnZhbGlkUG9zaXRpb25zPSQuZXh0ZW5kKCEwLHt9LHZhbGlkUHNDbG9uZSksbWFza3NldC50ZXN0cz0kLmV4dGVuZCghMCx7fSx0c3RDbG9uZSksIW1hc2tzZXQuZXhjbHVkZXNbZGVjaXNpb25Qb3NdKXtyZXR1cm5Sc2x0PWFsdGVybmF0ZS5jYWxsKHRoaXMsbWFza1BvcyxjLHN0cmljdCxmcm9tSXNWYWxpZCxkZWNpc2lvblBvcy0xLHNlbGVjdGlvbik7YnJlYWt9dmFyIGRlY2lzaW9uVGFrZXI9KDAsX3ZhbGlkYXRpb25UZXN0cy5nZXREZWNpc2lvblRha2VyKShwcmV2QWx0UG9zKTtpZigtMSE9PW1hc2tzZXQuZXhjbHVkZXNbZGVjaXNpb25Qb3NdLmluZGV4T2YoZGVjaXNpb25UYWtlcitcIjpcIitwcmV2QWx0UG9zLmFsdGVybmF0aW9uKSl7cmV0dXJuUnNsdD1hbHRlcm5hdGUuY2FsbCh0aGlzLG1hc2tQb3MsYyxzdHJpY3QsZnJvbUlzVmFsaWQsZGVjaXNpb25Qb3MtMSxzZWxlY3Rpb24pO2JyZWFrfWZvcihtYXNrc2V0LmV4Y2x1ZGVzW2RlY2lzaW9uUG9zXS5wdXNoKGRlY2lzaW9uVGFrZXIrXCI6XCIrcHJldkFsdFBvcy5hbHRlcm5hdGlvbiksaT1kZWNpc2lvblBvcztpPF9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHRoaXMsdm9pZCAwLCEwKSsxO2krKylkZWxldGUgbWFza3NldC52YWxpZFBvc2l0aW9uc1tpXX19cmV0dXJuIHJldHVyblJzbHQmJiExPT09b3B0cy5rZWVwU3RhdGljfHxkZWxldGUgbWFza3NldC5leGNsdWRlc1tkZWNpc2lvblBvc10scmV0dXJuUnNsdH1mdW5jdGlvbiBjYXNpbmcoZWxlbSx0ZXN0LHBvcyl7dmFyIG9wdHM9dGhpcy5vcHRzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0O3N3aXRjaChvcHRzLmNhc2luZ3x8dGVzdC5jYXNpbmcpe2Nhc2VcInVwcGVyXCI6ZWxlbT1lbGVtLnRvVXBwZXJDYXNlKCk7YnJlYWs7Y2FzZVwibG93ZXJcIjplbGVtPWVsZW0udG9Mb3dlckNhc2UoKTticmVhaztjYXNlXCJ0aXRsZVwiOnZhciBwb3NCZWZvcmU9bWFza3NldC52YWxpZFBvc2l0aW9uc1twb3MtMV07ZWxlbT0wPT09cG9zfHxwb3NCZWZvcmUmJnBvc0JlZm9yZS5pbnB1dD09PVN0cmluZy5mcm9tQ2hhckNvZGUoX2tleWNvZGUuZGVmYXVsdC5TUEFDRSk/ZWxlbS50b1VwcGVyQ2FzZSgpOmVsZW0udG9Mb3dlckNhc2UoKTticmVhaztkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdHMuY2FzaW5nKXt2YXIgYXJncz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2FyZ3MucHVzaChtYXNrc2V0LnZhbGlkUG9zaXRpb25zKSxlbGVtPW9wdHMuY2FzaW5nLmFwcGx5KHRoaXMsYXJncyl9fXJldHVybiBlbGVtfWZ1bmN0aW9uIGNoZWNrQWx0ZXJuYXRpb25NYXRjaChhbHRBcnIxLGFsdEFycjIsbmEpe2Zvcih2YXIgb3B0cz10aGlzLm9wdHMsYWx0QXJyQz1vcHRzLmdyZWVkeT9hbHRBcnIyOmFsdEFycjIuc2xpY2UoMCwxKSxpc01hdGNoPSExLG5hQXJyPXZvaWQgMCE9PW5hP25hLnNwbGl0KFwiLFwiKTpbXSxuYU5keCxpPTA7aTxuYUFyci5sZW5ndGg7aSsrKS0xIT09KG5hTmR4PWFsdEFycjEuaW5kZXhPZihuYUFycltpXSkpJiZhbHRBcnIxLnNwbGljZShuYU5keCwxKTtmb3IodmFyIGFsbmR4PTA7YWxuZHg8YWx0QXJyMS5sZW5ndGg7YWxuZHgrKylpZihhbHRBcnJDLmluY2x1ZGVzKGFsdEFycjFbYWxuZHhdKSl7aXNNYXRjaD0hMDticmVha31yZXR1cm4gaXNNYXRjaH1mdW5jdGlvbiBoYW5kbGVSZW1vdmUoaW5wdXQsayxwb3Msc3RyaWN0LGZyb21Jc1ZhbGlkKXt2YXIgaW5wdXRtYXNrPXRoaXMsbWFza3NldD10aGlzLm1hc2tzZXQsb3B0cz10aGlzLm9wdHM7aWYoKG9wdHMubnVtZXJpY0lucHV0fHx0aGlzLmlzUlRMKSYmKGs9PT1fa2V5Y29kZS5kZWZhdWx0LkJBQ0tTUEFDRT9rPV9rZXljb2RlLmRlZmF1bHQuREVMRVRFOms9PT1fa2V5Y29kZS5kZWZhdWx0LkRFTEVURSYmKGs9X2tleWNvZGUuZGVmYXVsdC5CQUNLU1BBQ0UpLHRoaXMuaXNSVEwpKXt2YXIgcGVuZD1wb3MuZW5kO3Bvcy5lbmQ9cG9zLmJlZ2luLHBvcy5iZWdpbj1wZW5kfXZhciBsdnA9X3Bvc2l0aW9uaW5nLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwodGhpcyx2b2lkIDAsITApLG9mZnNldDtpZihwb3MuZW5kPj1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcykubGVuZ3RoJiZsdnA+PXBvcy5lbmQmJihwb3MuZW5kPWx2cCsxKSxrPT09X2tleWNvZGUuZGVmYXVsdC5CQUNLU1BBQ0U/cG9zLmVuZC1wb3MuYmVnaW48MSYmKHBvcy5iZWdpbj1fcG9zaXRpb25pbmcuc2Vla1ByZXZpb3VzLmNhbGwodGhpcyxwb3MuYmVnaW4pKTprPT09X2tleWNvZGUuZGVmYXVsdC5ERUxFVEUmJnBvcy5iZWdpbj09PXBvcy5lbmQmJihwb3MuZW5kPV9wb3NpdGlvbmluZy5pc01hc2suY2FsbCh0aGlzLHBvcy5lbmQsITAsITApP3Bvcy5lbmQrMTpfcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbCh0aGlzLHBvcy5lbmQpKzEpLCExIT09KG9mZnNldD1yZXZhbGlkYXRlTWFzay5jYWxsKHRoaXMscG9zKSkpe2lmKCEwIT09c3RyaWN0JiYhMSE9PW9wdHMua2VlcFN0YXRpY3x8bnVsbCE9PW9wdHMucmVnZXgmJi0xIT09X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxwb3MuYmVnaW4pLm1hdGNoLmRlZi5pbmRleE9mKFwifFwiKSl7dmFyIHJlc3VsdD1hbHRlcm5hdGUuY2FsbCh0aGlzLCEwKTtpZihyZXN1bHQpe3ZhciBuZXdQb3M9dm9pZCAwIT09cmVzdWx0LmNhcmV0P3Jlc3VsdC5jYXJldDpyZXN1bHQucG9zP19wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKHRoaXMscmVzdWx0LnBvcy5iZWdpbj9yZXN1bHQucG9zLmJlZ2luOnJlc3VsdC5wb3MpOl9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHRoaXMsLTEsITApOyhrIT09X2tleWNvZGUuZGVmYXVsdC5ERUxFVEV8fHBvcy5iZWdpbj5uZXdQb3MpJiZwb3MuYmVnaW59fSEwIT09c3RyaWN0JiYobWFza3NldC5wPWs9PT1fa2V5Y29kZS5kZWZhdWx0LkRFTEVURT9wb3MuYmVnaW4rb2Zmc2V0OnBvcy5iZWdpbil9fWZ1bmN0aW9uIGlzQ29tcGxldGUoYnVmZmVyKXt2YXIgaW5wdXRtYXNrPXRoaXMsb3B0cz10aGlzLm9wdHMsbWFza3NldD10aGlzLm1hc2tzZXQ7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0cy5pc0NvbXBsZXRlKXJldHVybiBvcHRzLmlzQ29tcGxldGUoYnVmZmVyLG9wdHMpO2lmKFwiKlwiIT09b3B0cy5yZXBlYXQpe3ZhciBjb21wbGV0ZT0hMSxscnA9X3Bvc2l0aW9uaW5nLmRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uLmNhbGwodGhpcywhMCksYW1sPV9wb3NpdGlvbmluZy5zZWVrUHJldmlvdXMuY2FsbCh0aGlzLGxycC5sKTtpZih2b2lkIDA9PT1scnAuZGVmfHxscnAuZGVmLm5ld0Jsb2NrTWFya2VyfHxscnAuZGVmLm9wdGlvbmFsaXR5fHxscnAuZGVmLm9wdGlvbmFsUXVhbnRpZmllcil7Y29tcGxldGU9ITA7Zm9yKHZhciBpPTA7aTw9YW1sO2krKyl7dmFyIHRlc3Q9X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0VGVtcGxhdGUuY2FsbCh0aGlzLGkpLm1hdGNoO2lmKCEwIT09dGVzdC5zdGF0aWMmJnZvaWQgMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbaV0mJiEwIT09dGVzdC5vcHRpb25hbGl0eSYmITAhPT10ZXN0Lm9wdGlvbmFsUXVhbnRpZmllcnx8ITA9PT10ZXN0LnN0YXRpYyYmYnVmZmVyW2ldIT09X3ZhbGlkYXRpb25UZXN0cy5nZXRQbGFjZWhvbGRlci5jYWxsKHRoaXMsaSx0ZXN0KSl7Y29tcGxldGU9ITE7YnJlYWt9fX1yZXR1cm4gY29tcGxldGV9fWZ1bmN0aW9uIGlzVmFsaWQocG9zLGMsc3RyaWN0LGZyb21Jc1ZhbGlkLGZyb21BbHRlcm5hdGUsdmFsaWRhdGVPbmx5LGZyb21DaGVja3ZhbCl7dmFyIGlucHV0bWFzaz10aGlzLCQ9dGhpcy5kZXBlbmRlbmN5TGliLG9wdHM9dGhpcy5vcHRzLGVsPWlucHV0bWFzay5lbCxtYXNrc2V0PWlucHV0bWFzay5tYXNrc2V0O2Z1bmN0aW9uIGlzU2VsZWN0aW9uKHBvc09iail7cmV0dXJuIGlucHV0bWFzay5pc1JUTD8xPHBvc09iai5iZWdpbi1wb3NPYmouZW5kfHxwb3NPYmouYmVnaW4tcG9zT2JqLmVuZD09MToxPHBvc09iai5lbmQtcG9zT2JqLmJlZ2lufHxwb3NPYmouZW5kLXBvc09iai5iZWdpbj09MX1zdHJpY3Q9ITA9PT1zdHJpY3Q7dmFyIG1hc2tQb3M9cG9zO2Z1bmN0aW9uIHByb2Nlc3NDb21tYW5kT2JqZWN0KGNvbW1hbmRPYmope2lmKHZvaWQgMCE9PWNvbW1hbmRPYmope2lmKHZvaWQgMCE9PWNvbW1hbmRPYmoucmVtb3ZlJiYoQXJyYXkuaXNBcnJheShjb21tYW5kT2JqLnJlbW92ZSl8fChjb21tYW5kT2JqLnJlbW92ZT1bY29tbWFuZE9iai5yZW1vdmVdKSxjb21tYW5kT2JqLnJlbW92ZS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIucG9zLWEucG9zfSkuZm9yRWFjaChmdW5jdGlvbihsbW50KXtyZXZhbGlkYXRlTWFzay5jYWxsKGlucHV0bWFzayx7YmVnaW46bG1udCxlbmQ6bG1udCsxfSl9KSxjb21tYW5kT2JqLnJlbW92ZT12b2lkIDApLHZvaWQgMCE9PWNvbW1hbmRPYmouaW5zZXJ0JiYoQXJyYXkuaXNBcnJheShjb21tYW5kT2JqLmluc2VydCl8fChjb21tYW5kT2JqLmluc2VydD1bY29tbWFuZE9iai5pbnNlcnRdKSxjb21tYW5kT2JqLmluc2VydC5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEucG9zLWIucG9zfSkuZm9yRWFjaChmdW5jdGlvbihsbW50KXtcIlwiIT09bG1udC5jJiZpc1ZhbGlkLmNhbGwoaW5wdXRtYXNrLGxtbnQucG9zLGxtbnQuYyx2b2lkIDA9PT1sbW50LnN0cmljdHx8bG1udC5zdHJpY3Qsdm9pZCAwIT09bG1udC5mcm9tSXNWYWxpZD9sbW50LmZyb21Jc1ZhbGlkOmZyb21Jc1ZhbGlkKX0pLGNvbW1hbmRPYmouaW5zZXJ0PXZvaWQgMCksY29tbWFuZE9iai5yZWZyZXNoRnJvbUJ1ZmZlciYmY29tbWFuZE9iai5idWZmZXIpe3ZhciByZWZyZXNoPWNvbW1hbmRPYmoucmVmcmVzaEZyb21CdWZmZXI7cmVmcmVzaEZyb21CdWZmZXIuY2FsbChpbnB1dG1hc2ssITA9PT1yZWZyZXNoP3JlZnJlc2g6cmVmcmVzaC5zdGFydCxyZWZyZXNoLmVuZCxjb21tYW5kT2JqLmJ1ZmZlciksY29tbWFuZE9iai5yZWZyZXNoRnJvbUJ1ZmZlcj12b2lkIDB9dm9pZCAwIT09Y29tbWFuZE9iai5yZXdyaXRlUG9zaXRpb24mJihtYXNrUG9zPWNvbW1hbmRPYmoucmV3cml0ZVBvc2l0aW9uLGNvbW1hbmRPYmo9ITApfXJldHVybiBjb21tYW5kT2JqfWZ1bmN0aW9uIF9pc1ZhbGlkKHBvc2l0aW9uLGMsc3RyaWN0KXt2YXIgcnNsdD0hMTtyZXR1cm4gX3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0cy5jYWxsKGlucHV0bWFzayxwb3NpdGlvbikuZXZlcnkoZnVuY3Rpb24odHN0LG5keCl7dmFyIHRlc3Q9dHN0Lm1hdGNoO2lmKF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2ssITApLHJzbHQ9bnVsbCE9dGVzdC5mbj90ZXN0LmZuLnRlc3QoYyxtYXNrc2V0LHBvc2l0aW9uLHN0cmljdCxvcHRzLGlzU2VsZWN0aW9uKHBvcykpOihjPT09dGVzdC5kZWZ8fGM9PT1vcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIpJiZcIlwiIT09dGVzdC5kZWYmJntjOl92YWxpZGF0aW9uVGVzdHMuZ2V0UGxhY2Vob2xkZXIuY2FsbChpbnB1dG1hc2sscG9zaXRpb24sdGVzdCwhMCl8fHRlc3QuZGVmLHBvczpwb3NpdGlvbn0sITE9PT1yc2x0KXJldHVybiEwO3ZhciBlbGVtPXZvaWQgMCE9PXJzbHQuYz9yc2x0LmM6Yyx2YWxpZGF0ZWRQb3M9cG9zaXRpb247cmV0dXJuIGVsZW09ZWxlbT09PW9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlciYmITA9PT10ZXN0LnN0YXRpYz9fdmFsaWRhdGlvblRlc3RzLmdldFBsYWNlaG9sZGVyLmNhbGwoaW5wdXRtYXNrLHBvc2l0aW9uLHRlc3QsITApfHx0ZXN0LmRlZjplbGVtLHJzbHQ9cHJvY2Vzc0NvbW1hbmRPYmplY3QocnNsdCksITAhPT1yc2x0JiZ2b2lkIDAhPT1yc2x0LnBvcyYmcnNsdC5wb3MhPT1wb3NpdGlvbiYmKHZhbGlkYXRlZFBvcz1yc2x0LnBvcyksITAhPT1yc2x0JiZ2b2lkIDA9PT1yc2x0LnBvcyYmdm9pZCAwPT09cnNsdC5jfHwhMT09PXJldmFsaWRhdGVNYXNrLmNhbGwoaW5wdXRtYXNrLHBvcywkLmV4dGVuZCh7fSx0c3Qse2lucHV0OmNhc2luZy5jYWxsKGlucHV0bWFzayxlbGVtLHRlc3QsdmFsaWRhdGVkUG9zKX0pLGZyb21Jc1ZhbGlkLHZhbGlkYXRlZFBvcykmJihyc2x0PSExKSwhMX0pLHJzbHR9dm9pZCAwIT09cG9zLmJlZ2luJiYobWFza1Bvcz1pbnB1dG1hc2suaXNSVEw/cG9zLmVuZDpwb3MuYmVnaW4pO3ZhciByZXN1bHQ9ITAscG9zaXRpb25zQ2xvbmU9JC5leHRlbmQoITAse30sbWFza3NldC52YWxpZFBvc2l0aW9ucyk7aWYoITE9PT1vcHRzLmtlZXBTdGF0aWMmJnZvaWQgMCE9PW1hc2tzZXQuZXhjbHVkZXNbbWFza1Bvc10mJiEwIT09ZnJvbUFsdGVybmF0ZSYmITAhPT1mcm9tSXNWYWxpZClmb3IodmFyIGk9bWFza1BvcztpPChpbnB1dG1hc2suaXNSVEw/cG9zLmJlZ2luOnBvcy5lbmQpO2krKyl2b2lkIDAhPT1tYXNrc2V0LmV4Y2x1ZGVzW2ldJiYobWFza3NldC5leGNsdWRlc1tpXT12b2lkIDAsZGVsZXRlIG1hc2tzZXQudGVzdHNbaV0pO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdHMucHJlVmFsaWRhdGlvbiYmITAhPT1mcm9tSXNWYWxpZCYmITAhPT12YWxpZGF0ZU9ubHkmJihyZXN1bHQ9b3B0cy5wcmVWYWxpZGF0aW9uLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLG1hc2tQb3MsYyxpc1NlbGVjdGlvbihwb3MpLG9wdHMsbWFza3NldCxwb3Msc3RyaWN0fHxmcm9tQWx0ZXJuYXRlKSxyZXN1bHQ9cHJvY2Vzc0NvbW1hbmRPYmplY3QocmVzdWx0KSksITA9PT1yZXN1bHQpe2lmKHZvaWQgMD09PWlucHV0bWFzay5tYXhMZW5ndGh8fG1hc2tQb3M8X3Bvc2l0aW9uaW5nLnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrLGlucHV0bWFzay5tYXhMZW5ndGgpKXtpZihyZXN1bHQ9X2lzVmFsaWQobWFza1BvcyxjLHN0cmljdCksKCFzdHJpY3R8fCEwPT09ZnJvbUlzVmFsaWQpJiYhMT09PXJlc3VsdCYmITAhPT12YWxpZGF0ZU9ubHkpe3ZhciBjdXJyZW50UG9zVmFsaWQ9bWFza3NldC52YWxpZFBvc2l0aW9uc1ttYXNrUG9zXTtpZighY3VycmVudFBvc1ZhbGlkfHwhMCE9PWN1cnJlbnRQb3NWYWxpZC5tYXRjaC5zdGF0aWN8fGN1cnJlbnRQb3NWYWxpZC5tYXRjaC5kZWYhPT1jJiZjIT09b3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyKXtpZihvcHRzLmluc2VydE1vZGV8fHZvaWQgMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbX3Bvc2l0aW9uaW5nLnNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLG1hc2tQb3MpXXx8cG9zLmVuZD5tYXNrUG9zKXt2YXIgc2tpcD0hMTtpZihtYXNrc2V0LmppdE9mZnNldFttYXNrUG9zXSYmdm9pZCAwPT09bWFza3NldC52YWxpZFBvc2l0aW9uc1tfcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbChpbnB1dG1hc2ssbWFza1BvcyldJiYocmVzdWx0PWlzVmFsaWQuY2FsbChpbnB1dG1hc2ssbWFza1BvcyttYXNrc2V0LmppdE9mZnNldFttYXNrUG9zXSxjLCEwKSwhMSE9PXJlc3VsdCYmKCEwIT09ZnJvbUFsdGVybmF0ZSYmKHJlc3VsdC5jYXJldD1tYXNrUG9zKSxza2lwPSEwKSkscG9zLmVuZD5tYXNrUG9zJiYobWFza3NldC52YWxpZFBvc2l0aW9uc1ttYXNrUG9zXT12b2lkIDApLCFza2lwJiYhX3Bvc2l0aW9uaW5nLmlzTWFzay5jYWxsKGlucHV0bWFzayxtYXNrUG9zLG9wdHMua2VlcFN0YXRpYyYmMD09PW1hc2tQb3MpKWZvcih2YXIgblBvcz1tYXNrUG9zKzEsc25Qb3M9X3Bvc2l0aW9uaW5nLnNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLG1hc2tQb3MsITEsMCE9PW1hc2tQb3MpO25Qb3M8PXNuUG9zO25Qb3MrKylpZihyZXN1bHQ9X2lzVmFsaWQoblBvcyxjLHN0cmljdCksITEhPT1yZXN1bHQpe3Jlc3VsdD10cmFja2JhY2tQb3NpdGlvbnMuY2FsbChpbnB1dG1hc2ssbWFza1Bvcyx2b2lkIDAhPT1yZXN1bHQucG9zP3Jlc3VsdC5wb3M6blBvcyl8fHJlc3VsdCxtYXNrUG9zPW5Qb3M7YnJlYWt9fX1lbHNlIHJlc3VsdD17Y2FyZXQ6X3Bvc2l0aW9uaW5nLnNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLG1hc2tQb3MpfX19ZWxzZSByZXN1bHQ9ITE7ITEhPT1yZXN1bHR8fCFvcHRzLmtlZXBTdGF0aWN8fCFpc0NvbXBsZXRlLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spKSYmMCE9PW1hc2tQb3N8fHN0cmljdHx8ITA9PT1mcm9tQWx0ZXJuYXRlP2lzU2VsZWN0aW9uKHBvcykmJm1hc2tzZXQudGVzdHNbbWFza1Bvc10mJjE8bWFza3NldC50ZXN0c1ttYXNrUG9zXS5sZW5ndGgmJm9wdHMua2VlcFN0YXRpYyYmIXN0cmljdCYmITAhPT1mcm9tQWx0ZXJuYXRlJiYocmVzdWx0PWFsdGVybmF0ZS5jYWxsKGlucHV0bWFzaywhMCkpOnJlc3VsdD1hbHRlcm5hdGUuY2FsbChpbnB1dG1hc2ssbWFza1BvcyxjLHN0cmljdCxmcm9tSXNWYWxpZCx2b2lkIDAscG9zKSwhMD09PXJlc3VsdCYmKHJlc3VsdD17cG9zOm1hc2tQb3N9KX1pZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRzLnBvc3RWYWxpZGF0aW9uJiYhMCE9PWZyb21Jc1ZhbGlkJiYhMCE9PXZhbGlkYXRlT25seSl7dmFyIHBvc3RSZXN1bHQ9b3B0cy5wb3N0VmFsaWRhdGlvbi5jYWxsKGlucHV0bWFzayxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrLCEwKSx2b2lkIDAhPT1wb3MuYmVnaW4/aW5wdXRtYXNrLmlzUlRMP3Bvcy5lbmQ6cG9zLmJlZ2luOnBvcyxjLHJlc3VsdCxvcHRzLG1hc2tzZXQsc3RyaWN0LGZyb21DaGVja3ZhbCk7dm9pZCAwIT09cG9zdFJlc3VsdCYmKHJlc3VsdD0hMD09PXBvc3RSZXN1bHQ/cmVzdWx0OnBvc3RSZXN1bHQpfXJlc3VsdCYmdm9pZCAwPT09cmVzdWx0LnBvcyYmKHJlc3VsdC5wb3M9bWFza1BvcyksITE9PT1yZXN1bHR8fCEwPT09dmFsaWRhdGVPbmx5PyhfcG9zaXRpb25pbmcucmVzZXRNYXNrU2V0LmNhbGwoaW5wdXRtYXNrLCEwKSxtYXNrc2V0LnZhbGlkUG9zaXRpb25zPSQuZXh0ZW5kKCEwLHt9LHBvc2l0aW9uc0Nsb25lKSk6dHJhY2tiYWNrUG9zaXRpb25zLmNhbGwoaW5wdXRtYXNrLHZvaWQgMCxtYXNrUG9zLCEwKTt2YXIgZW5kUmVzdWx0PXByb2Nlc3NDb21tYW5kT2JqZWN0KHJlc3VsdCk7cmV0dXJuIGVuZFJlc3VsdH1mdW5jdGlvbiBwb3NpdGlvbkNhbk1hdGNoRGVmaW5pdGlvbihwb3MsdGVzdERlZmluaXRpb24sb3B0cyl7Zm9yKHZhciBpbnB1dG1hc2s9dGhpcyxtYXNrc2V0PXRoaXMubWFza3NldCx2YWxpZD0hMSx0ZXN0cz1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3RzLmNhbGwodGhpcyxwb3MpLHRuZHg9MDt0bmR4PHRlc3RzLmxlbmd0aDt0bmR4Kyspe2lmKHRlc3RzW3RuZHhdLm1hdGNoJiYoISh0ZXN0c1t0bmR4XS5tYXRjaC5uYXRpdmVEZWYhPT10ZXN0RGVmaW5pdGlvbi5tYXRjaFtvcHRzLnNoaWZ0UG9zaXRpb25zP1wiZGVmXCI6XCJuYXRpdmVEZWZcIl18fG9wdHMuc2hpZnRQb3NpdGlvbnMmJnRlc3REZWZpbml0aW9uLm1hdGNoLnN0YXRpYyl8fHRlc3RzW3RuZHhdLm1hdGNoLm5hdGl2ZURlZj09PXRlc3REZWZpbml0aW9uLm1hdGNoLm5hdGl2ZURlZikpe3ZhbGlkPSEwO2JyZWFrfWlmKHRlc3RzW3RuZHhdLm1hdGNoJiZ0ZXN0c1t0bmR4XS5tYXRjaC5kZWY9PT10ZXN0RGVmaW5pdGlvbi5tYXRjaC5uYXRpdmVEZWYpe3ZhbGlkPXZvaWQgMDticmVha319cmV0dXJuITE9PT12YWxpZCYmdm9pZCAwIT09bWFza3NldC5qaXRPZmZzZXRbcG9zXSYmKHZhbGlkPXBvc2l0aW9uQ2FuTWF0Y2hEZWZpbml0aW9uLmNhbGwodGhpcyxwb3MrbWFza3NldC5qaXRPZmZzZXRbcG9zXSx0ZXN0RGVmaW5pdGlvbixvcHRzKSksdmFsaWR9ZnVuY3Rpb24gcmVmcmVzaEZyb21CdWZmZXIoc3RhcnQsZW5kLGJ1ZmZlcil7dmFyIGlucHV0bWFzaz10aGlzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0LG9wdHM9dGhpcy5vcHRzLCQ9dGhpcy5kZXBlbmRlbmN5TGliLGVsPXRoaXMuZWwsaSxwLHNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI9b3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyLGJmZnI9dGhpcy5pc1JUTD9idWZmZXIuc2xpY2UoKS5yZXZlcnNlKCk6YnVmZmVyO2lmKG9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcj1cIlwiLCEwPT09c3RhcnQpX3Bvc2l0aW9uaW5nLnJlc2V0TWFza1NldC5jYWxsKHRoaXMpLG1hc2tzZXQudGVzdHM9e30sc3RhcnQ9MCxlbmQ9YnVmZmVyLmxlbmd0aCxwPV9wb3NpdGlvbmluZy5kZXRlcm1pbmVOZXdDYXJldFBvc2l0aW9uLmNhbGwodGhpcyx7YmVnaW46MCxlbmQ6MH0sITEpLmJlZ2luO2Vsc2V7Zm9yKGk9c3RhcnQ7aTxlbmQ7aSsrKWRlbGV0ZSBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW2ldO3A9c3RhcnR9dmFyIGtleXByZXNzPW5ldyAkLkV2ZW50KFwia2V5cHJlc3NcIik7Zm9yKGk9c3RhcnQ7aTxlbmQ7aSsrKXtrZXlwcmVzcy53aGljaD1iZmZyW2ldLnRvU3RyaW5nKCkuY2hhckNvZGVBdCgwKSx0aGlzLmlnbm9yYWJsZT0hMTt2YXIgdmFsUmVzdWx0PV9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGVsLGtleXByZXNzLCEwLCExLCExLHApOyExIT09dmFsUmVzdWx0JiYocD12YWxSZXN1bHQuZm9yd2FyZFBvc2l0aW9uKX1vcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI9c2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcn1mdW5jdGlvbiB0cmFja2JhY2tQb3NpdGlvbnMob3JpZ2luYWxQb3MsbmV3UG9zLGZpbGxPbmx5KXt2YXIgaW5wdXRtYXNrPXRoaXMsbWFza3NldD10aGlzLm1hc2tzZXQsJD10aGlzLmRlcGVuZGVuY3lMaWI7aWYodm9pZCAwPT09b3JpZ2luYWxQb3MpZm9yKG9yaWdpbmFsUG9zPW5ld1Bvcy0xOzA8b3JpZ2luYWxQb3MmJiFtYXNrc2V0LnZhbGlkUG9zaXRpb25zW29yaWdpbmFsUG9zXTtvcmlnaW5hbFBvcy0tKTtmb3IodmFyIHBzPW9yaWdpbmFsUG9zO3BzPG5ld1BvcztwcysrKWlmKHZvaWQgMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcHNdJiYhX3Bvc2l0aW9uaW5nLmlzTWFzay5jYWxsKHRoaXMscHMsITApKXt2YXIgdnA9MD09cHM/X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxwcyk6bWFza3NldC52YWxpZFBvc2l0aW9uc1twcy0xXTtpZih2cCl7dmFyIHRlc3RzPV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdHMuY2FsbCh0aGlzLHBzKS5zbGljZSgpO1wiXCI9PT10ZXN0c1t0ZXN0cy5sZW5ndGgtMV0ubWF0Y2guZGVmJiZ0ZXN0cy5wb3AoKTt2YXIgYmVzdE1hdGNoPV92YWxpZGF0aW9uVGVzdHMuZGV0ZXJtaW5lVGVzdFRlbXBsYXRlLmNhbGwodGhpcyxwcyx0ZXN0cyksbnA7aWYoYmVzdE1hdGNoJiYoITAhPT1iZXN0TWF0Y2gubWF0Y2guaml0fHxcIm1hc3RlclwiPT09YmVzdE1hdGNoLm1hdGNoLm5ld0Jsb2NrTWFya2VyJiYobnA9bWFza3NldC52YWxpZFBvc2l0aW9uc1twcysxXSkmJiEwPT09bnAubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyKSYmKGJlc3RNYXRjaD0kLmV4dGVuZCh7fSxiZXN0TWF0Y2gse2lucHV0Ol92YWxpZGF0aW9uVGVzdHMuZ2V0UGxhY2Vob2xkZXIuY2FsbCh0aGlzLHBzLGJlc3RNYXRjaC5tYXRjaCwhMCl8fGJlc3RNYXRjaC5tYXRjaC5kZWZ9KSxiZXN0TWF0Y2guZ2VuZXJhdGVkSW5wdXQ9ITAscmV2YWxpZGF0ZU1hc2suY2FsbCh0aGlzLHBzLGJlc3RNYXRjaCwhMCksITAhPT1maWxsT25seSkpe3ZhciBjdnBJbnB1dD1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW25ld1Bvc10uaW5wdXQ7cmV0dXJuIG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbbmV3UG9zXT12b2lkIDAsaXNWYWxpZC5jYWxsKHRoaXMsbmV3UG9zLGN2cElucHV0LCEwLCEwKX19fX1mdW5jdGlvbiByZXZhbGlkYXRlTWFzayhwb3MsdmFsaWRUZXN0LGZyb21Jc1ZhbGlkLHZhbGlkYXRlZFBvcyl7dmFyIGlucHV0bWFzaz10aGlzLG1hc2tzZXQ9dGhpcy5tYXNrc2V0LG9wdHM9dGhpcy5vcHRzLCQ9dGhpcy5kZXBlbmRlbmN5TGliO2Z1bmN0aW9uIElzRW5jbG9zZWRTdGF0aWMocG9zLHZhbGlkcyxzZWxlY3Rpb24pe3ZhciBwb3NNYXRjaD12YWxpZHNbcG9zXTtpZih2b2lkIDA9PT1wb3NNYXRjaHx8ITAhPT1wb3NNYXRjaC5tYXRjaC5zdGF0aWN8fCEwPT09cG9zTWF0Y2gubWF0Y2gub3B0aW9uYWxpdHl8fHZvaWQgMCE9PXZhbGlkc1swXSYmdm9pZCAwIT09dmFsaWRzWzBdLmFsdGVybmF0aW9uKXJldHVybiExO3ZhciBwcmV2TWF0Y2g9c2VsZWN0aW9uLmJlZ2luPD1wb3MtMT92YWxpZHNbcG9zLTFdJiYhMD09PXZhbGlkc1twb3MtMV0ubWF0Y2guc3RhdGljJiZ2YWxpZHNbcG9zLTFdOnZhbGlkc1twb3MtMV0sbmV4dE1hdGNoPXNlbGVjdGlvbi5lbmQ+cG9zKzE/dmFsaWRzW3BvcysxXSYmITA9PT12YWxpZHNbcG9zKzFdLm1hdGNoLnN0YXRpYyYmdmFsaWRzW3BvcysxXTp2YWxpZHNbcG9zKzFdO3JldHVybiBwcmV2TWF0Y2gmJm5leHRNYXRjaH12YXIgb2Zmc2V0PTAsYmVnaW49dm9pZCAwIT09cG9zLmJlZ2luP3Bvcy5iZWdpbjpwb3MsZW5kPXZvaWQgMCE9PXBvcy5lbmQ/cG9zLmVuZDpwb3M7aWYocG9zLmJlZ2luPnBvcy5lbmQmJihiZWdpbj1wb3MuZW5kLGVuZD1wb3MuYmVnaW4pLHZhbGlkYXRlZFBvcz12b2lkIDAhPT12YWxpZGF0ZWRQb3M/dmFsaWRhdGVkUG9zOmJlZ2luLGJlZ2luIT09ZW5kfHxvcHRzLmluc2VydE1vZGUmJnZvaWQgMCE9PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbdmFsaWRhdGVkUG9zXSYmdm9pZCAwPT09ZnJvbUlzVmFsaWR8fHZvaWQgMD09PXZhbGlkVGVzdCl7dmFyIHBvc2l0aW9uc0Nsb25lPSQuZXh0ZW5kKCEwLHt9LG1hc2tzZXQudmFsaWRQb3NpdGlvbnMpLGx2cD1fcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbCh0aGlzLHZvaWQgMCwhMCksaTtmb3IobWFza3NldC5wPWJlZ2luLGk9bHZwO2JlZ2luPD1pO2ktLSlkZWxldGUgbWFza3NldC52YWxpZFBvc2l0aW9uc1tpXSx2b2lkIDA9PT12YWxpZFRlc3QmJmRlbGV0ZSBtYXNrc2V0LnRlc3RzW2krMV07dmFyIHZhbGlkPSEwLGo9dmFsaWRhdGVkUG9zLHBvc01hdGNoPWosdCxjYW5NYXRjaDtmb3IodmFsaWRUZXN0JiYobWFza3NldC52YWxpZFBvc2l0aW9uc1t2YWxpZGF0ZWRQb3NdPSQuZXh0ZW5kKCEwLHt9LHZhbGlkVGVzdCkscG9zTWF0Y2grKyxqKyspLGk9dmFsaWRUZXN0P2VuZDplbmQtMTtpPD1sdnA7aSsrKXtpZih2b2lkIDAhPT0odD1wb3NpdGlvbnNDbG9uZVtpXSkmJiEwIT09dC5nZW5lcmF0ZWRJbnB1dCYmKGVuZDw9aXx8YmVnaW48PWkmJklzRW5jbG9zZWRTdGF0aWMoaSxwb3NpdGlvbnNDbG9uZSx7YmVnaW46YmVnaW4sZW5kOmVuZH0pKSl7Zm9yKDtcIlwiIT09X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyxwb3NNYXRjaCkubWF0Y2guZGVmOyl7aWYoITEhPT0oY2FuTWF0Y2g9cG9zaXRpb25DYW5NYXRjaERlZmluaXRpb24uY2FsbCh0aGlzLHBvc01hdGNoLHQsb3B0cykpfHxcIitcIj09PXQubWF0Y2guZGVmKXtcIitcIj09PXQubWF0Y2guZGVmJiZfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwodGhpcywhMCk7dmFyIHJlc3VsdD1pc1ZhbGlkLmNhbGwodGhpcyxwb3NNYXRjaCx0LmlucHV0LFwiK1wiIT09dC5tYXRjaC5kZWYsXCIrXCIhPT10Lm1hdGNoLmRlZik7aWYodmFsaWQ9ITEhPT1yZXN1bHQsaj0ocmVzdWx0LnBvc3x8cG9zTWF0Y2gpKzEsIXZhbGlkJiZjYW5NYXRjaClicmVha31lbHNlIHZhbGlkPSExO2lmKHZhbGlkKXt2b2lkIDA9PT12YWxpZFRlc3QmJnQubWF0Y2guc3RhdGljJiZpPT09cG9zLmJlZ2luJiZvZmZzZXQrKzticmVha31pZighdmFsaWQmJnBvc01hdGNoPm1hc2tzZXQubWFza0xlbmd0aClicmVhaztwb3NNYXRjaCsrfVwiXCI9PV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdC5jYWxsKHRoaXMscG9zTWF0Y2gpLm1hdGNoLmRlZiYmKHZhbGlkPSExKSxwb3NNYXRjaD1qfWlmKCF2YWxpZClicmVha31pZighdmFsaWQpcmV0dXJuIG1hc2tzZXQudmFsaWRQb3NpdGlvbnM9JC5leHRlbmQoITAse30scG9zaXRpb25zQ2xvbmUpLF9wb3NpdGlvbmluZy5yZXNldE1hc2tTZXQuY2FsbCh0aGlzLCEwKSwhMX1lbHNlIHZhbGlkVGVzdCYmX3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwodGhpcyx2YWxpZGF0ZWRQb3MpLm1hdGNoLmNkPT09dmFsaWRUZXN0Lm1hdGNoLmNkJiYobWFza3NldC52YWxpZFBvc2l0aW9uc1t2YWxpZGF0ZWRQb3NdPSQuZXh0ZW5kKCEwLHt9LHZhbGlkVGVzdCkpO3JldHVybiBfcG9zaXRpb25pbmcucmVzZXRNYXNrU2V0LmNhbGwodGhpcywhMCksb2Zmc2V0fX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5hcHBseUlucHV0VmFsdWU9YXBwbHlJbnB1dFZhbHVlLGV4cG9ydHMuY2xlYXJPcHRpb25hbFRhaWw9Y2xlYXJPcHRpb25hbFRhaWwsZXhwb3J0cy5jaGVja1ZhbD1jaGVja1ZhbCxleHBvcnRzLkhhbmRsZU5hdGl2ZVBsYWNlaG9sZGVyPUhhbmRsZU5hdGl2ZVBsYWNlaG9sZGVyLGV4cG9ydHMudW5tYXNrZWR2YWx1ZT11bm1hc2tlZHZhbHVlLGV4cG9ydHMud3JpdGVCdWZmZXI9d3JpdGVCdWZmZXI7dmFyIF9rZXljb2RlPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygwKSksX3ZhbGlkYXRpb25UZXN0cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLF9wb3NpdGlvbmluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF92YWxpZGF0aW9uPV9fd2VicGFja19yZXF1aXJlX18oNCksX2Vudmlyb25tZW50PV9fd2VicGFja19yZXF1aXJlX18oOCksX2V2ZW50aGFuZGxlcnM9X193ZWJwYWNrX3JlcXVpcmVfXyg3KTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gYXBwbHlJbnB1dFZhbHVlKGlucHV0LHZhbHVlKXt2YXIgaW5wdXRtYXNrPWlucHV0P2lucHV0LmlucHV0bWFzazp0aGlzLG9wdHM9aW5wdXRtYXNrLm9wdHM7aW5wdXQuaW5wdXRtYXNrLnJlZnJlc2hWYWx1ZT0hMSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRzLm9uQmVmb3JlTWFzayYmKHZhbHVlPW9wdHMub25CZWZvcmVNYXNrLmNhbGwoaW5wdXRtYXNrLHZhbHVlLG9wdHMpfHx2YWx1ZSksdmFsdWU9dmFsdWUudG9TdHJpbmcoKS5zcGxpdChcIlwiKSxjaGVja1ZhbChpbnB1dCwhMCwhMSx2YWx1ZSksaW5wdXRtYXNrLnVuZG9WYWx1ZT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5qb2luKFwiXCIpLChvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzfHxvcHRzLmNsZWFySW5jb21wbGV0ZSkmJmlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKT09PV9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSYmLTE9PT1fcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2spJiZpbnB1dC5pbnB1dG1hc2suX3ZhbHVlU2V0KFwiXCIpfWZ1bmN0aW9uIGNsZWFyT3B0aW9uYWxUYWlsKGJ1ZmZlcil7dmFyIGlucHV0bWFzaz10aGlzO2J1ZmZlci5sZW5ndGg9MDtmb3IodmFyIHRlbXBsYXRlPV92YWxpZGF0aW9uVGVzdHMuZ2V0TWFza1RlbXBsYXRlLmNhbGwodGhpcywhMCwwLCEwLHZvaWQgMCwhMCksbG1udDt2b2lkIDAhPT0obG1udD10ZW1wbGF0ZS5zaGlmdCgpKTspYnVmZmVyLnB1c2gobG1udCk7cmV0dXJuIGJ1ZmZlcn1mdW5jdGlvbiBjaGVja1ZhbChpbnB1dCx3cml0ZU91dCxzdHJpY3QsbnB0dmwsaW5pdGlhdGluZ0V2ZW50KXt2YXIgaW5wdXRtYXNrPWlucHV0P2lucHV0LmlucHV0bWFzazp0aGlzLG1hc2tzZXQ9aW5wdXRtYXNrLm1hc2tzZXQsb3B0cz1pbnB1dG1hc2sub3B0cywkPWlucHV0bWFzay5kZXBlbmRlbmN5TGliLGlucHV0VmFsdWU9bnB0dmwuc2xpY2UoKSxjaGFyQ29kZXM9XCJcIixpbml0aWFsTmR4PS0xLHJlc3VsdD12b2lkIDAsc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcj1vcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI7ZnVuY3Rpb24gaXNUZW1wbGF0ZU1hdGNoKG5keCxjaGFyQ29kZXMpe2Zvcih2YXIgdGFyZ2V0VGVtcGxhdGU9X3ZhbGlkYXRpb25UZXN0cy5nZXRNYXNrVGVtcGxhdGUuY2FsbChpbnB1dG1hc2ssITAsMCkuc2xpY2UobmR4LF9wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxuZHgsITEsITEpKS5qb2luKFwiXCIpLnJlcGxhY2UoLycvZyxcIlwiKSxjaGFyQ29kZU5keD10YXJnZXRUZW1wbGF0ZS5pbmRleE9mKGNoYXJDb2Rlcyk7MDxjaGFyQ29kZU5keCYmXCIgXCI9PT10YXJnZXRUZW1wbGF0ZVtjaGFyQ29kZU5keC0xXTspY2hhckNvZGVOZHgtLTt2YXIgbWF0Y2g9MD09PWNoYXJDb2RlTmR4JiYhX3Bvc2l0aW9uaW5nLmlzTWFzay5jYWxsKGlucHV0bWFzayxuZHgpJiYoX3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwoaW5wdXRtYXNrLG5keCkubWF0Y2gubmF0aXZlRGVmPT09Y2hhckNvZGVzLmNoYXJBdCgwKXx8ITA9PT1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbChpbnB1dG1hc2ssbmR4KS5tYXRjaC5zdGF0aWMmJl92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdC5jYWxsKGlucHV0bWFzayxuZHgpLm1hdGNoLm5hdGl2ZURlZj09PVwiJ1wiK2NoYXJDb2Rlcy5jaGFyQXQoMCl8fFwiIFwiPT09X3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwoaW5wdXRtYXNrLG5keCkubWF0Y2gubmF0aXZlRGVmJiYoX3ZhbGlkYXRpb25UZXN0cy5nZXRUZXN0LmNhbGwoaW5wdXRtYXNrLG5keCsxKS5tYXRjaC5uYXRpdmVEZWY9PT1jaGFyQ29kZXMuY2hhckF0KDApfHwhMD09PV92YWxpZGF0aW9uVGVzdHMuZ2V0VGVzdC5jYWxsKGlucHV0bWFzayxuZHgrMSkubWF0Y2guc3RhdGljJiZfdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbChpbnB1dG1hc2ssbmR4KzEpLm1hdGNoLm5hdGl2ZURlZj09PVwiJ1wiK2NoYXJDb2Rlcy5jaGFyQXQoMCkpKTtpZighbWF0Y2gmJjA8Y2hhckNvZGVOZHgmJiFfcG9zaXRpb25pbmcuaXNNYXNrLmNhbGwoaW5wdXRtYXNrLG5keCwhMSwhMCkpe3ZhciBuZXh0UG9zPV9wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxuZHgpO2lucHV0bWFzay5jYXJldFBvcy5iZWdpbjxuZXh0UG9zJiYoaW5wdXRtYXNrLmNhcmV0UG9zPXtiZWdpbjpuZXh0UG9zfSl9cmV0dXJuIG1hdGNofW9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcj1cIlwiLF9wb3NpdGlvbmluZy5yZXNldE1hc2tTZXQuY2FsbChpbnB1dG1hc2spLG1hc2tzZXQudGVzdHM9e30saW5pdGlhbE5keD1vcHRzLnJhZGl4UG9pbnQ/X3Bvc2l0aW9uaW5nLmRldGVybWluZU5ld0NhcmV0UG9zaXRpb24uY2FsbChpbnB1dG1hc2sse2JlZ2luOjAsZW5kOjB9KS5iZWdpbjowLG1hc2tzZXQucD1pbml0aWFsTmR4LGlucHV0bWFzay5jYXJldFBvcz17YmVnaW46aW5pdGlhbE5keH07dmFyIHN0YXRpY01hdGNoZXM9W10scHJldkNhcmV0UG9zPWlucHV0bWFzay5jYXJldFBvcztpZihpbnB1dFZhbHVlLmZvckVhY2goZnVuY3Rpb24oY2hhckNvZGUsbmR4KXtpZih2b2lkIDAhPT1jaGFyQ29kZSlpZih2b2lkIDA9PT1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW25keF0mJmlucHV0VmFsdWVbbmR4XT09PV92YWxpZGF0aW9uVGVzdHMuZ2V0UGxhY2Vob2xkZXIuY2FsbChpbnB1dG1hc2ssbmR4KSYmX3Bvc2l0aW9uaW5nLmlzTWFzay5jYWxsKGlucHV0bWFzayxuZHgsITApJiYhMT09PV92YWxpZGF0aW9uLmlzVmFsaWQuY2FsbChpbnB1dG1hc2ssbmR4LGlucHV0VmFsdWVbbmR4XSwhMCx2b2lkIDAsdm9pZCAwLCEwKSltYXNrc2V0LnArKztlbHNle3ZhciBrZXlwcmVzcz1uZXcgJC5FdmVudChcIl9jaGVja3ZhbFwiKTtrZXlwcmVzcy53aGljaD1jaGFyQ29kZS50b1N0cmluZygpLmNoYXJDb2RlQXQoMCksY2hhckNvZGVzKz1jaGFyQ29kZTt2YXIgbHZwPV9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGlucHV0bWFzayx2b2lkIDAsITApO2lzVGVtcGxhdGVNYXRjaChpbml0aWFsTmR4LGNoYXJDb2Rlcyk/cmVzdWx0PV9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGlucHV0bWFzayxrZXlwcmVzcywhMCwhMSxzdHJpY3QsbHZwKzEpOihyZXN1bHQ9X2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXRtYXNrLGtleXByZXNzLCEwLCExLHN0cmljdCxpbnB1dG1hc2suY2FyZXRQb3MuYmVnaW4pLHJlc3VsdCYmKGluaXRpYWxOZHg9aW5wdXRtYXNrLmNhcmV0UG9zLmJlZ2luKzEsY2hhckNvZGVzPVwiXCIpKSxyZXN1bHQ/KHZvaWQgMCE9PXJlc3VsdC5wb3MmJm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvc10mJiEwPT09bWFza3NldC52YWxpZFBvc2l0aW9uc1tyZXN1bHQucG9zXS5tYXRjaC5zdGF0aWMmJnZvaWQgMD09PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvc10uYWx0ZXJuYXRpb24mJihzdGF0aWNNYXRjaGVzLnB1c2gocmVzdWx0LnBvcyksaW5wdXRtYXNrLmlzUlRMfHwocmVzdWx0LmZvcndhcmRQb3NpdGlvbj1yZXN1bHQucG9zKzEpKSx3cml0ZUJ1ZmZlci5jYWxsKGlucHV0bWFzayx2b2lkIDAsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykscmVzdWx0LmZvcndhcmRQb3NpdGlvbixrZXlwcmVzcywhMSksaW5wdXRtYXNrLmNhcmV0UG9zPXtiZWdpbjpyZXN1bHQuZm9yd2FyZFBvc2l0aW9uLGVuZDpyZXN1bHQuZm9yd2FyZFBvc2l0aW9ufSxwcmV2Q2FyZXRQb3M9aW5wdXRtYXNrLmNhcmV0UG9zKTppbnB1dG1hc2suY2FyZXRQb3M9cHJldkNhcmV0UG9zfX0pLDA8c3RhdGljTWF0Y2hlcy5sZW5ndGgpe3ZhciBzbmR4LHZhbGlkUG9zLG5leHRWYWxpZD1fcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbChpbnB1dG1hc2ssLTEsdm9pZCAwLCExKTtpZighX3ZhbGlkYXRpb24uaXNDb21wbGV0ZS5jYWxsKGlucHV0bWFzayxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKSkmJnN0YXRpY01hdGNoZXMubGVuZ3RoPD1uZXh0VmFsaWR8fF92YWxpZGF0aW9uLmlzQ29tcGxldGUuY2FsbChpbnB1dG1hc2ssX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykpJiYwPHN0YXRpY01hdGNoZXMubGVuZ3RoJiZzdGF0aWNNYXRjaGVzLmxlbmd0aCE9PW5leHRWYWxpZCYmMD09PXN0YXRpY01hdGNoZXNbMF0pZm9yKHZhciBuZXh0U25keD1uZXh0VmFsaWQ7dm9pZCAwIT09KHNuZHg9c3RhdGljTWF0Y2hlcy5zaGlmdCgpKTspe3ZhciBrZXlwcmVzcz1uZXcgJC5FdmVudChcIl9jaGVja3ZhbFwiKTtpZih2YWxpZFBvcz1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW3NuZHhdLHZhbGlkUG9zLmdlbmVyYXRlZElucHV0PSEwLGtleXByZXNzLndoaWNoPXZhbGlkUG9zLmlucHV0LmNoYXJDb2RlQXQoMCkscmVzdWx0PV9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGlucHV0bWFzayxrZXlwcmVzcywhMCwhMSxzdHJpY3QsbmV4dFNuZHgpLHJlc3VsdCYmdm9pZCAwIT09cmVzdWx0LnBvcyYmcmVzdWx0LnBvcyE9PXNuZHgmJm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvc10mJiEwPT09bWFza3NldC52YWxpZFBvc2l0aW9uc1tyZXN1bHQucG9zXS5tYXRjaC5zdGF0aWMpc3RhdGljTWF0Y2hlcy5wdXNoKHJlc3VsdC5wb3MpO2Vsc2UgaWYoIXJlc3VsdClicmVhaztuZXh0U25keCsrfX13cml0ZU91dCYmd3JpdGVCdWZmZXIuY2FsbChpbnB1dG1hc2ssaW5wdXQsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykscmVzdWx0P3Jlc3VsdC5mb3J3YXJkUG9zaXRpb246aW5wdXRtYXNrLmNhcmV0UG9zLmJlZ2luLGluaXRpYXRpbmdFdmVudHx8bmV3ICQuRXZlbnQoXCJjaGVja3ZhbFwiKSxpbml0aWF0aW5nRXZlbnQmJlwiaW5wdXRcIj09PWluaXRpYXRpbmdFdmVudC50eXBlJiZpbnB1dG1hc2sudW5kb1ZhbHVlIT09X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSksb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyPXNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXJ9ZnVuY3Rpb24gSGFuZGxlTmF0aXZlUGxhY2Vob2xkZXIobnB0LHZhbHVlKXt2YXIgaW5wdXRtYXNrPW5wdD9ucHQuaW5wdXRtYXNrOnRoaXM7aWYoX2Vudmlyb25tZW50LmllKXtpZihucHQuaW5wdXRtYXNrLl92YWx1ZUdldCgpIT09dmFsdWUmJihucHQucGxhY2Vob2xkZXIhPT12YWx1ZXx8XCJcIj09PW5wdC5wbGFjZWhvbGRlcikpe3ZhciBidWZmZXI9X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuc2xpY2UoKSxucHRWYWx1ZT1ucHQuaW5wdXRtYXNrLl92YWx1ZUdldCgpO2lmKG5wdFZhbHVlIT09dmFsdWUpe3ZhciBsdnA9X3Bvc2l0aW9uaW5nLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrKTstMT09PWx2cCYmbnB0VmFsdWU9PT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIik/YnVmZmVyPVtdOi0xIT09bHZwJiZjbGVhck9wdGlvbmFsVGFpbC5jYWxsKGlucHV0bWFzayxidWZmZXIpLHdyaXRlQnVmZmVyKG5wdCxidWZmZXIpfX19ZWxzZSBucHQucGxhY2Vob2xkZXIhPT12YWx1ZSYmKG5wdC5wbGFjZWhvbGRlcj12YWx1ZSxcIlwiPT09bnB0LnBsYWNlaG9sZGVyJiZucHQucmVtb3ZlQXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIikpfWZ1bmN0aW9uIHVubWFza2VkdmFsdWUoaW5wdXQpe3ZhciBpbnB1dG1hc2s9aW5wdXQ/aW5wdXQuaW5wdXRtYXNrOnRoaXMsb3B0cz1pbnB1dG1hc2sub3B0cyxtYXNrc2V0PWlucHV0bWFzay5tYXNrc2V0O2lmKGlucHV0KXtpZih2b2lkIDA9PT1pbnB1dC5pbnB1dG1hc2spcmV0dXJuIGlucHV0LnZhbHVlO2lucHV0LmlucHV0bWFzayYmaW5wdXQuaW5wdXRtYXNrLnJlZnJlc2hWYWx1ZSYmYXBwbHlJbnB1dFZhbHVlKGlucHV0LGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoITApKX12YXIgdW1WYWx1ZT1bXSx2cHM9bWFza3NldC52YWxpZFBvc2l0aW9ucztmb3IodmFyIHBuZHggaW4gdnBzKXZwc1twbmR4XSYmdnBzW3BuZHhdLm1hdGNoJiYoMSE9dnBzW3BuZHhdLm1hdGNoLnN0YXRpY3x8QXJyYXkuaXNBcnJheShtYXNrc2V0Lm1ldGFkYXRhKSYmITAhPT12cHNbcG5keF0uZ2VuZXJhdGVkSW5wdXQpJiZ1bVZhbHVlLnB1c2godnBzW3BuZHhdLmlucHV0KTt2YXIgdW5tYXNrZWRWYWx1ZT0wPT09dW1WYWx1ZS5sZW5ndGg/XCJcIjooaW5wdXRtYXNrLmlzUlRMP3VtVmFsdWUucmV2ZXJzZSgpOnVtVmFsdWUpLmpvaW4oXCJcIik7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0cy5vblVuTWFzayl7dmFyIGJ1ZmZlclZhbHVlPShpbnB1dG1hc2suaXNSVEw/X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuc2xpY2UoKS5yZXZlcnNlKCk6X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykpLmpvaW4oXCJcIik7dW5tYXNrZWRWYWx1ZT1vcHRzLm9uVW5NYXNrLmNhbGwoaW5wdXRtYXNrLGJ1ZmZlclZhbHVlLHVubWFza2VkVmFsdWUsb3B0cyl9cmV0dXJuIHVubWFza2VkVmFsdWV9ZnVuY3Rpb24gd3JpdGVCdWZmZXIoaW5wdXQsYnVmZmVyLGNhcmV0UG9zLGV2ZW50LHRyaWdnZXJFdmVudHMpe3ZhciBpbnB1dG1hc2s9aW5wdXQ/aW5wdXQuaW5wdXRtYXNrOnRoaXMsb3B0cz1pbnB1dG1hc2sub3B0cywkPWlucHV0bWFzay5kZXBlbmRlbmN5TGliO2lmKGV2ZW50JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRzLm9uQmVmb3JlV3JpdGUpe3ZhciByZXN1bHQ9b3B0cy5vbkJlZm9yZVdyaXRlLmNhbGwoaW5wdXRtYXNrLGV2ZW50LGJ1ZmZlcixjYXJldFBvcyxvcHRzKTtpZihyZXN1bHQpe2lmKHJlc3VsdC5yZWZyZXNoRnJvbUJ1ZmZlcil7dmFyIHJlZnJlc2g9cmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyO192YWxpZGF0aW9uLnJlZnJlc2hGcm9tQnVmZmVyLmNhbGwoaW5wdXRtYXNrLCEwPT09cmVmcmVzaD9yZWZyZXNoOnJlZnJlc2guc3RhcnQscmVmcmVzaC5lbmQscmVzdWx0LmJ1ZmZlcnx8YnVmZmVyKSxidWZmZXI9X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaywhMCl9dm9pZCAwIT09Y2FyZXRQb3MmJihjYXJldFBvcz12b2lkIDAhPT1yZXN1bHQuY2FyZXQ/cmVzdWx0LmNhcmV0OmNhcmV0UG9zKX19aWYodm9pZCAwIT09aW5wdXQmJihpbnB1dC5pbnB1dG1hc2suX3ZhbHVlU2V0KGJ1ZmZlci5qb2luKFwiXCIpKSx2b2lkIDA9PT1jYXJldFBvc3x8dm9pZCAwIT09ZXZlbnQmJlwiYmx1clwiPT09ZXZlbnQudHlwZXx8X3Bvc2l0aW9uaW5nLmNhcmV0LmNhbGwoaW5wdXRtYXNrLGlucHV0LGNhcmV0UG9zLHZvaWQgMCx2b2lkIDAsdm9pZCAwIT09ZXZlbnQmJlwia2V5ZG93blwiPT09ZXZlbnQudHlwZSYmKGV2ZW50LmtleUNvZGU9PT1fa2V5Y29kZS5kZWZhdWx0LkRFTEVURXx8ZXZlbnQua2V5Q29kZT09PV9rZXljb2RlLmRlZmF1bHQuQkFDS1NQQUNFKSksITA9PT10cmlnZ2VyRXZlbnRzKSl7dmFyICRpbnB1dD0kKGlucHV0KSxucHRWYWw9aW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpO2lucHV0LmlucHV0bWFzay5za2lwSW5wdXRFdmVudD0hMCwkaW5wdXQudHJpZ2dlcihcImlucHV0XCIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtucHRWYWw9PT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIik/JGlucHV0LnRyaWdnZXIoXCJjbGVhcmVkXCIpOiEwPT09X3ZhbGlkYXRpb24uaXNDb21wbGV0ZS5jYWxsKGlucHV0bWFzayxidWZmZXIpJiYkaW5wdXQudHJpZ2dlcihcImNvbXBsZXRlXCIpfSwwKX19fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfZGVmYXVsdD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpuZXcoZXZhbChcInJlcXVpcmUoJ2pzZG9tJykuSlNET01cIikpKFwiXCIpLndpbmRvdztleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHR9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuRXZlbnRIYW5kbGVycz12b2lkIDA7dmFyIF9wb3NpdGlvbmluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF9rZXljb2RlPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygwKSksX2Vudmlyb25tZW50PV9fd2VicGFja19yZXF1aXJlX18oOCksX3ZhbGlkYXRpb249X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfaW5wdXRIYW5kbGluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpLF92YWxpZGF0aW9uVGVzdHM9X193ZWJwYWNrX3JlcXVpcmVfXygzKTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19dmFyIEV2ZW50SGFuZGxlcnM9e2tleWRvd25FdmVudDpmdW5jdGlvbiBrZXlkb3duRXZlbnQoZSl7dmFyIGlucHV0bWFzaz10aGlzLmlucHV0bWFzayxvcHRzPWlucHV0bWFzay5vcHRzLCQ9aW5wdXRtYXNrLmRlcGVuZGVuY3lMaWIsbWFza3NldD1pbnB1dG1hc2subWFza3NldCxpbnB1dD10aGlzLCRpbnB1dD0kKGlucHV0KSxrPWUua2V5Q29kZSxwb3M9X3Bvc2l0aW9uaW5nLmNhcmV0LmNhbGwoaW5wdXRtYXNrLGlucHV0KSxrZFJlc3VsdD1vcHRzLm9uS2V5RG93bi5jYWxsKHRoaXMsZSxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKSxwb3Msb3B0cyk7aWYodm9pZCAwIT09a2RSZXN1bHQpcmV0dXJuIGtkUmVzdWx0O2lmKGs9PT1fa2V5Y29kZS5kZWZhdWx0LkJBQ0tTUEFDRXx8az09PV9rZXljb2RlLmRlZmF1bHQuREVMRVRFfHxfZW52aXJvbm1lbnQuaXBob25lJiZrPT09X2tleWNvZGUuZGVmYXVsdC5CQUNLU1BBQ0VfU0FGQVJJfHxlLmN0cmxLZXkmJms9PT1fa2V5Y29kZS5kZWZhdWx0LlgmJiEoXCJvbmN1dFwiaW4gaW5wdXQpKWUucHJldmVudERlZmF1bHQoKSxfdmFsaWRhdGlvbi5oYW5kbGVSZW1vdmUuY2FsbChpbnB1dG1hc2ssaW5wdXQsayxwb3MpLCgwLF9pbnB1dEhhbmRsaW5nLndyaXRlQnVmZmVyKShpbnB1dCxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrLCEwKSxtYXNrc2V0LnAsZSxpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkhPT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5qb2luKFwiXCIpKTtlbHNlIGlmKGs9PT1fa2V5Y29kZS5kZWZhdWx0LkVORHx8az09PV9rZXljb2RlLmRlZmF1bHQuUEFHRV9ET1dOKXtlLnByZXZlbnREZWZhdWx0KCk7dmFyIGNhcmV0UG9zPV9wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxfcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2spKTtfcG9zaXRpb25pbmcuY2FyZXQuY2FsbChpbnB1dG1hc2ssaW5wdXQsZS5zaGlmdEtleT9wb3MuYmVnaW46Y2FyZXRQb3MsY2FyZXRQb3MsITApfWVsc2Ugaz09PV9rZXljb2RlLmRlZmF1bHQuSE9NRSYmIWUuc2hpZnRLZXl8fGs9PT1fa2V5Y29kZS5kZWZhdWx0LlBBR0VfVVA/KGUucHJldmVudERlZmF1bHQoKSxfcG9zaXRpb25pbmcuY2FyZXQuY2FsbChpbnB1dG1hc2ssaW5wdXQsMCxlLnNoaWZ0S2V5P3Bvcy5iZWdpbjowLCEwKSk6KG9wdHMudW5kb09uRXNjYXBlJiZrPT09X2tleWNvZGUuZGVmYXVsdC5FU0NBUEV8fDkwPT09ayYmZS5jdHJsS2V5KSYmITAhPT1lLmFsdEtleT8oKDAsX2lucHV0SGFuZGxpbmcuY2hlY2tWYWwpKGlucHV0LCEwLCExLGlucHV0bWFzay51bmRvVmFsdWUuc3BsaXQoXCJcIikpLCRpbnB1dC50cmlnZ2VyKFwiY2xpY2tcIikpOiEwPT09b3B0cy50YWJUaHJvdWdoJiZrPT09X2tleWNvZGUuZGVmYXVsdC5UQUI/ITA9PT1lLnNoaWZ0S2V5Pyhwb3MuZW5kPV9wb3NpdGlvbmluZy5zZWVrUHJldmlvdXMuY2FsbChpbnB1dG1hc2sscG9zLmVuZCwhMCksITA9PT1fdmFsaWRhdGlvblRlc3RzLmdldFRlc3QuY2FsbChpbnB1dG1hc2sscG9zLmVuZC0xKS5tYXRjaC5zdGF0aWMmJnBvcy5lbmQtLSxwb3MuYmVnaW49X3Bvc2l0aW9uaW5nLnNlZWtQcmV2aW91cy5jYWxsKGlucHV0bWFzayxwb3MuZW5kLCEwKSwwPD1wb3MuYmVnaW4mJjA8cG9zLmVuZCYmKGUucHJldmVudERlZmF1bHQoKSxfcG9zaXRpb25pbmcuY2FyZXQuY2FsbChpbnB1dG1hc2ssaW5wdXQscG9zLmJlZ2luLHBvcy5lbmQpKSk6KHBvcy5iZWdpbj1fcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbChpbnB1dG1hc2sscG9zLmJlZ2luLCEwKSxwb3MuZW5kPV9wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKGlucHV0bWFzayxwb3MuYmVnaW4sITApLHBvcy5lbmQ8bWFza3NldC5tYXNrTGVuZ3RoJiZwb3MuZW5kLS0scG9zLmJlZ2luPD1tYXNrc2V0Lm1hc2tMZW5ndGgmJihlLnByZXZlbnREZWZhdWx0KCksX3Bvc2l0aW9uaW5nLmNhcmV0LmNhbGwoaW5wdXRtYXNrLGlucHV0LHBvcy5iZWdpbixwb3MuZW5kKSkpOmUuc2hpZnRLZXl8fG9wdHMuaW5zZXJ0TW9kZVZpc3VhbCYmITE9PT1vcHRzLmluc2VydE1vZGUmJihrPT09X2tleWNvZGUuZGVmYXVsdC5SSUdIVD9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGNhcmV0UG9zPV9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayxpbnB1dCk7X3Bvc2l0aW9uaW5nLmNhcmV0LmNhbGwoaW5wdXRtYXNrLGlucHV0LGNhcmV0UG9zLmJlZ2luKX0sMCk6az09PV9rZXljb2RlLmRlZmF1bHQuTEVGVCYmc2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBjYXJldFBvc19iZWdpbj1fcG9zaXRpb25pbmcudHJhbnNsYXRlUG9zaXRpb24uY2FsbChpbnB1dG1hc2ssaW5wdXQuaW5wdXRtYXNrLmNhcmV0UG9zLmJlZ2luKSxjYXJldFBvc19lbmQ9X3Bvc2l0aW9uaW5nLnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrLGlucHV0LmlucHV0bWFzay5jYXJldFBvcy5lbmQpO2lucHV0bWFzay5pc1JUTD9fcG9zaXRpb25pbmcuY2FyZXQuY2FsbChpbnB1dG1hc2ssaW5wdXQsY2FyZXRQb3NfYmVnaW4rKGNhcmV0UG9zX2JlZ2luPT09bWFza3NldC5tYXNrTGVuZ3RoPzA6MSkpOl9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayxpbnB1dCxjYXJldFBvc19iZWdpbi0oMD09PWNhcmV0UG9zX2JlZ2luPzA6MSkpfSwwKSk7aW5wdXRtYXNrLmlnbm9yYWJsZT1vcHRzLmlnbm9yYWJsZXMuaW5jbHVkZXMoayl9LGtleXByZXNzRXZlbnQ6ZnVuY3Rpb24ga2V5cHJlc3NFdmVudChlLGNoZWNrdmFsLHdyaXRlT3V0LHN0cmljdCxuZHgpe3ZhciBpbnB1dG1hc2s9dGhpcy5pbnB1dG1hc2t8fHRoaXMsb3B0cz1pbnB1dG1hc2sub3B0cywkPWlucHV0bWFzay5kZXBlbmRlbmN5TGliLG1hc2tzZXQ9aW5wdXRtYXNrLm1hc2tzZXQsaW5wdXQ9aW5wdXRtYXNrLmVsLCRpbnB1dD0kKGlucHV0KSxrPWUud2hpY2h8fGUuY2hhckNvZGV8fGUua2V5Q29kZTtpZighKCEwPT09Y2hlY2t2YWx8fGUuY3RybEtleSYmZS5hbHRLZXkpJiYoZS5jdHJsS2V5fHxlLm1ldGFLZXl8fGlucHV0bWFzay5pZ25vcmFibGUpKXJldHVybiBrPT09X2tleWNvZGUuZGVmYXVsdC5FTlRFUiYmaW5wdXRtYXNrLnVuZG9WYWx1ZSE9PV9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIikmJihpbnB1dG1hc2sudW5kb1ZhbHVlPV9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIiksc2V0VGltZW91dChmdW5jdGlvbigpeyRpbnB1dC50cmlnZ2VyKFwiY2hhbmdlXCIpfSwwKSksaW5wdXRtYXNrLnNraXBJbnB1dEV2ZW50PSEwLCEwO2lmKGspezQ0IT09ayYmNDYhPT1rfHwzIT09ZS5sb2NhdGlvbnx8XCJcIj09PW9wdHMucmFkaXhQb2ludHx8KGs9b3B0cy5yYWRpeFBvaW50LmNoYXJDb2RlQXQoMCkpO3ZhciBwb3M9Y2hlY2t2YWw/e2JlZ2luOm5keCxlbmQ6bmR4fTpfcG9zaXRpb25pbmcuY2FyZXQuY2FsbChpbnB1dG1hc2ssaW5wdXQpLGZvcndhcmRQb3NpdGlvbixjPVN0cmluZy5mcm9tQ2hhckNvZGUoayk7bWFza3NldC53cml0ZU91dEJ1ZmZlcj0hMDt2YXIgdmFsUmVzdWx0PV92YWxpZGF0aW9uLmlzVmFsaWQuY2FsbChpbnB1dG1hc2sscG9zLGMsc3RyaWN0LHZvaWQgMCx2b2lkIDAsdm9pZCAwLGNoZWNrdmFsKTtpZighMSE9PXZhbFJlc3VsdCYmKF9wb3NpdGlvbmluZy5yZXNldE1hc2tTZXQuY2FsbChpbnB1dG1hc2ssITApLGZvcndhcmRQb3NpdGlvbj12b2lkIDAhPT12YWxSZXN1bHQuY2FyZXQ/dmFsUmVzdWx0LmNhcmV0Ol9wb3NpdGlvbmluZy5zZWVrTmV4dC5jYWxsKGlucHV0bWFzayx2YWxSZXN1bHQucG9zLmJlZ2luP3ZhbFJlc3VsdC5wb3MuYmVnaW46dmFsUmVzdWx0LnBvcyksbWFza3NldC5wPWZvcndhcmRQb3NpdGlvbiksZm9yd2FyZFBvc2l0aW9uPW9wdHMubnVtZXJpY0lucHV0JiZ2b2lkIDA9PT12YWxSZXN1bHQuY2FyZXQ/X3Bvc2l0aW9uaW5nLnNlZWtQcmV2aW91cy5jYWxsKGlucHV0bWFzayxmb3J3YXJkUG9zaXRpb24pOmZvcndhcmRQb3NpdGlvbiwhMSE9PXdyaXRlT3V0JiYoc2V0VGltZW91dChmdW5jdGlvbigpe29wdHMub25LZXlWYWxpZGF0aW9uLmNhbGwoaW5wdXQsayx2YWxSZXN1bHQpfSwwKSxtYXNrc2V0LndyaXRlT3V0QnVmZmVyJiYhMSE9PXZhbFJlc3VsdCkpe3ZhciBidWZmZXI9X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzayk7KDAsX2lucHV0SGFuZGxpbmcud3JpdGVCdWZmZXIpKGlucHV0LGJ1ZmZlcixmb3J3YXJkUG9zaXRpb24sZSwhMCE9PWNoZWNrdmFsKX1pZihlLnByZXZlbnREZWZhdWx0KCksY2hlY2t2YWwpcmV0dXJuITEhPT12YWxSZXN1bHQmJih2YWxSZXN1bHQuZm9yd2FyZFBvc2l0aW9uPWZvcndhcmRQb3NpdGlvbiksdmFsUmVzdWx0fX0sa2V5dXBFdmVudDpmdW5jdGlvbiBrZXl1cEV2ZW50KGUpe3ZhciBpbnB1dG1hc2s9dGhpcy5pbnB1dG1hc2s7IWlucHV0bWFzay5pc0NvbXBvc2luZ3x8ZS5rZXlDb2RlIT09X2tleWNvZGUuZGVmYXVsdC5LRVlfMjI5JiZlLmtleUNvZGUhPT1fa2V5Y29kZS5kZWZhdWx0LkVOVEVSfHxpbnB1dG1hc2suJGVsLnRyaWdnZXIoXCJpbnB1dFwiKX0scGFzdGVFdmVudDpmdW5jdGlvbiBwYXN0ZUV2ZW50KGUpe3ZhciBpbnB1dG1hc2s9dGhpcy5pbnB1dG1hc2ssb3B0cz1pbnB1dG1hc2sub3B0cyxpbnB1dD10aGlzLGlucHV0VmFsdWU9aW5wdXRtYXNrLl92YWx1ZUdldCghMCksY2FyZXRQb3M9X3Bvc2l0aW9uaW5nLmNhcmV0LmNhbGwoaW5wdXRtYXNrLHRoaXMpLHRlbXBWYWx1ZTtpbnB1dG1hc2suaXNSVEwmJih0ZW1wVmFsdWU9Y2FyZXRQb3MuZW5kLGNhcmV0UG9zLmVuZD1jYXJldFBvcy5iZWdpbixjYXJldFBvcy5iZWdpbj10ZW1wVmFsdWUpO3ZhciB2YWx1ZUJlZm9yZUNhcmV0PWlucHV0VmFsdWUuc3Vic3RyKDAsY2FyZXRQb3MuYmVnaW4pLHZhbHVlQWZ0ZXJDYXJldD1pbnB1dFZhbHVlLnN1YnN0cihjYXJldFBvcy5lbmQsaW5wdXRWYWx1ZS5sZW5ndGgpO2lmKHZhbHVlQmVmb3JlQ2FyZXQ9PShpbnB1dG1hc2suaXNSVEw/X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoaW5wdXRtYXNrKS5zbGljZSgpLnJldmVyc2UoKTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spKS5zbGljZSgwLGNhcmV0UG9zLmJlZ2luKS5qb2luKFwiXCIpJiYodmFsdWVCZWZvcmVDYXJldD1cIlwiKSx2YWx1ZUFmdGVyQ2FyZXQ9PShpbnB1dG1hc2suaXNSVEw/X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoaW5wdXRtYXNrKS5zbGljZSgpLnJldmVyc2UoKTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spKS5zbGljZShjYXJldFBvcy5lbmQpLmpvaW4oXCJcIikmJih2YWx1ZUFmdGVyQ2FyZXQ9XCJcIiksd2luZG93LmNsaXBib2FyZERhdGEmJndpbmRvdy5jbGlwYm9hcmREYXRhLmdldERhdGEpaW5wdXRWYWx1ZT12YWx1ZUJlZm9yZUNhcmV0K3dpbmRvdy5jbGlwYm9hcmREYXRhLmdldERhdGEoXCJUZXh0XCIpK3ZhbHVlQWZ0ZXJDYXJldDtlbHNle2lmKCFlLmNsaXBib2FyZERhdGF8fCFlLmNsaXBib2FyZERhdGEuZ2V0RGF0YSlyZXR1cm4hMDtpbnB1dFZhbHVlPXZhbHVlQmVmb3JlQ2FyZXQrZS5jbGlwYm9hcmREYXRhLmdldERhdGEoXCJ0ZXh0L3BsYWluXCIpK3ZhbHVlQWZ0ZXJDYXJldH12YXIgcGFzdGVWYWx1ZT1pbnB1dFZhbHVlO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdHMub25CZWZvcmVQYXN0ZSl7aWYocGFzdGVWYWx1ZT1vcHRzLm9uQmVmb3JlUGFzdGUuY2FsbChpbnB1dG1hc2ssaW5wdXRWYWx1ZSxvcHRzKSwhMT09PXBhc3RlVmFsdWUpcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtwYXN0ZVZhbHVlPXBhc3RlVmFsdWV8fGlucHV0VmFsdWV9cmV0dXJuKDAsX2lucHV0SGFuZGxpbmcuY2hlY2tWYWwpKHRoaXMsITAsITEscGFzdGVWYWx1ZS50b1N0cmluZygpLnNwbGl0KFwiXCIpLGUpLGUucHJldmVudERlZmF1bHQoKX0saW5wdXRGYWxsQmFja0V2ZW50OmZ1bmN0aW9uIGlucHV0RmFsbEJhY2tFdmVudChlKXt2YXIgaW5wdXRtYXNrPXRoaXMuaW5wdXRtYXNrLG9wdHM9aW5wdXRtYXNrLm9wdHMsJD1pbnB1dG1hc2suZGVwZW5kZW5jeUxpYjtmdW5jdGlvbiBpZU1vYmlsZUhhbmRsZXIoaW5wdXQsaW5wdXRWYWx1ZSxjYXJldFBvcyl7aWYoX2Vudmlyb25tZW50LmllbW9iaWxlKXt2YXIgaW5wdXRDaGFyPWlucHV0VmFsdWUucmVwbGFjZShfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5qb2luKFwiXCIpLFwiXCIpO2lmKDE9PT1pbnB1dENoYXIubGVuZ3RoKXt2YXIgaXY9aW5wdXRWYWx1ZS5zcGxpdChcIlwiKTtpdi5zcGxpY2UoY2FyZXRQb3MuYmVnaW4sMCxpbnB1dENoYXIpLGlucHV0VmFsdWU9aXYuam9pbihcIlwiKX19cmV0dXJuIGlucHV0VmFsdWV9ZnVuY3Rpb24gYW5hbHlzZUNoYW5nZXMoaW5wdXRWYWx1ZSxidWZmZXIsY2FyZXRQb3Mpe2Zvcih2YXIgZnJvbnRQYXJ0PWlucHV0VmFsdWUuc3Vic3RyKDAsY2FyZXRQb3MuYmVnaW4pLnNwbGl0KFwiXCIpLGJhY2tQYXJ0PWlucHV0VmFsdWUuc3Vic3RyKGNhcmV0UG9zLmJlZ2luKS5zcGxpdChcIlwiKSxmcm9udEJ1ZmZlclBhcnQ9YnVmZmVyLnN1YnN0cigwLGNhcmV0UG9zLmJlZ2luKS5zcGxpdChcIlwiKSxiYWNrQnVmZmVyUGFydD1idWZmZXIuc3Vic3RyKGNhcmV0UG9zLmJlZ2luKS5zcGxpdChcIlwiKSxmcGw9ZnJvbnRQYXJ0Lmxlbmd0aD49ZnJvbnRCdWZmZXJQYXJ0Lmxlbmd0aD9mcm9udFBhcnQubGVuZ3RoOmZyb250QnVmZmVyUGFydC5sZW5ndGgsYnBsPWJhY2tQYXJ0Lmxlbmd0aD49YmFja0J1ZmZlclBhcnQubGVuZ3RoP2JhY2tQYXJ0Lmxlbmd0aDpiYWNrQnVmZmVyUGFydC5sZW5ndGgsYmwsaSxhY3Rpb249XCJcIixkYXRhPVtdLG1hcmtlcj1cIn5cIixwbGFjZWhvbGRlcjtmcm9udFBhcnQubGVuZ3RoPGZwbDspZnJvbnRQYXJ0LnB1c2goXCJ+XCIpO2Zvcig7ZnJvbnRCdWZmZXJQYXJ0Lmxlbmd0aDxmcGw7KWZyb250QnVmZmVyUGFydC5wdXNoKFwiflwiKTtmb3IoO2JhY2tQYXJ0Lmxlbmd0aDxicGw7KWJhY2tQYXJ0LnVuc2hpZnQoXCJ+XCIpO2Zvcig7YmFja0J1ZmZlclBhcnQubGVuZ3RoPGJwbDspYmFja0J1ZmZlclBhcnQudW5zaGlmdChcIn5cIik7dmFyIG5ld0J1ZmZlcj1mcm9udFBhcnQuY29uY2F0KGJhY2tQYXJ0KSxvbGRCdWZmZXI9ZnJvbnRCdWZmZXJQYXJ0LmNvbmNhdChiYWNrQnVmZmVyUGFydCk7Zm9yKGk9MCxibD1uZXdCdWZmZXIubGVuZ3RoO2k8Ymw7aSsrKXN3aXRjaChwbGFjZWhvbGRlcj1fdmFsaWRhdGlvblRlc3RzLmdldFBsYWNlaG9sZGVyLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy50cmFuc2xhdGVQb3NpdGlvbi5jYWxsKGlucHV0bWFzayxpKSksYWN0aW9uKXtjYXNlXCJpbnNlcnRUZXh0XCI6b2xkQnVmZmVyW2ktMV09PT1uZXdCdWZmZXJbaV0mJmNhcmV0UG9zLmJlZ2luPT1uZXdCdWZmZXIubGVuZ3RoLTEmJmRhdGEucHVzaChuZXdCdWZmZXJbaV0pLGk9Ymw7YnJlYWs7Y2FzZVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCI6XCJ+XCI9PT1uZXdCdWZmZXJbaV0/Y2FyZXRQb3MuZW5kKys6aT1ibDticmVhaztjYXNlXCJkZWxldGVDb250ZW50QmFja3dhcmRcIjpcIn5cIj09PW5ld0J1ZmZlcltpXT9jYXJldFBvcy5lbmQrKzppPWJsO2JyZWFrO2RlZmF1bHQ6bmV3QnVmZmVyW2ldIT09b2xkQnVmZmVyW2ldJiYoXCJ+XCIhPT1uZXdCdWZmZXJbaSsxXSYmbmV3QnVmZmVyW2krMV0hPT1wbGFjZWhvbGRlciYmdm9pZCAwIT09bmV3QnVmZmVyW2krMV18fChvbGRCdWZmZXJbaV0hPT1wbGFjZWhvbGRlcnx8XCJ+XCIhPT1vbGRCdWZmZXJbaSsxXSkmJlwiflwiIT09b2xkQnVmZmVyW2ldP1wiflwiPT09b2xkQnVmZmVyW2krMV0mJm9sZEJ1ZmZlcltpXT09PW5ld0J1ZmZlcltpKzFdPyhhY3Rpb249XCJpbnNlcnRUZXh0XCIsZGF0YS5wdXNoKG5ld0J1ZmZlcltpXSksY2FyZXRQb3MuYmVnaW4tLSxjYXJldFBvcy5lbmQtLSk6bmV3QnVmZmVyW2ldIT09cGxhY2Vob2xkZXImJlwiflwiIT09bmV3QnVmZmVyW2ldJiYoXCJ+XCI9PT1uZXdCdWZmZXJbaSsxXXx8b2xkQnVmZmVyW2ldIT09bmV3QnVmZmVyW2ldJiZvbGRCdWZmZXJbaSsxXT09PW5ld0J1ZmZlcltpKzFdKT8oYWN0aW9uPVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCIsZGF0YS5wdXNoKG5ld0J1ZmZlcltpXSksY2FyZXRQb3MuYmVnaW4tLSk6XCJ+XCI9PT1uZXdCdWZmZXJbaV0/KGFjdGlvbj1cImRlbGV0ZUNvbnRlbnRCYWNrd2FyZFwiLCFfcG9zaXRpb25pbmcuaXNNYXNrLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy50cmFuc2xhdGVQb3NpdGlvbi5jYWxsKGlucHV0bWFzayxpKSwhMCkmJm9sZEJ1ZmZlcltpXSE9PW9wdHMucmFkaXhQb2ludHx8Y2FyZXRQb3MuZW5kKyspOmk9Ymw6KGFjdGlvbj1cImluc2VydFRleHRcIixkYXRhLnB1c2gobmV3QnVmZmVyW2ldKSxjYXJldFBvcy5iZWdpbi0tLGNhcmV0UG9zLmVuZC0tKSk7YnJlYWt9cmV0dXJue2FjdGlvbjphY3Rpb24sZGF0YTpkYXRhLGNhcmV0OmNhcmV0UG9zfX12YXIgaW5wdXQ9dGhpcyxpbnB1dFZhbHVlPWlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoITApLGJ1ZmZlcj0oaW5wdXRtYXNrLmlzUlRMP19wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLnNsaWNlKCkucmV2ZXJzZSgpOl9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spKS5qb2luKFwiXCIpLGNhcmV0UG9zPV9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayxpbnB1dCx2b2lkIDAsdm9pZCAwLCEwKTtpZihidWZmZXIhPT1pbnB1dFZhbHVlKXtpbnB1dFZhbHVlPWllTW9iaWxlSGFuZGxlcihpbnB1dCxpbnB1dFZhbHVlLGNhcmV0UG9zKTt2YXIgY2hhbmdlcz1hbmFseXNlQ2hhbmdlcyhpbnB1dFZhbHVlLGJ1ZmZlcixjYXJldFBvcyk7c3dpdGNoKChpbnB1dC5pbnB1dG1hc2suc2hhZG93Um9vdHx8ZG9jdW1lbnQpLmFjdGl2ZUVsZW1lbnQhPT1pbnB1dCYmaW5wdXQuZm9jdXMoKSwoMCxfaW5wdXRIYW5kbGluZy53cml0ZUJ1ZmZlcikoaW5wdXQsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykpLF9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayxpbnB1dCxjYXJldFBvcy5iZWdpbixjYXJldFBvcy5lbmQsITApLGNoYW5nZXMuYWN0aW9uKXtjYXNlXCJpbnNlcnRUZXh0XCI6Y2FzZVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCI6Y2hhbmdlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24oZW50cnksbmR4KXt2YXIga2V5cHJlc3M9bmV3ICQuRXZlbnQoXCJrZXlwcmVzc1wiKTtrZXlwcmVzcy53aGljaD1lbnRyeS5jaGFyQ29kZUF0KDApLGlucHV0bWFzay5pZ25vcmFibGU9ITEsRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsa2V5cHJlc3MpfSksc2V0VGltZW91dChmdW5jdGlvbigpe2lucHV0bWFzay4kZWwudHJpZ2dlcihcImtleXVwXCIpfSwwKTticmVhaztjYXNlXCJkZWxldGVDb250ZW50QmFja3dhcmRcIjp2YXIga2V5ZG93bj1uZXcgJC5FdmVudChcImtleWRvd25cIik7a2V5ZG93bi5rZXlDb2RlPV9rZXljb2RlLmRlZmF1bHQuQkFDS1NQQUNFLEV2ZW50SGFuZGxlcnMua2V5ZG93bkV2ZW50LmNhbGwoaW5wdXQsa2V5ZG93bik7YnJlYWs7ZGVmYXVsdDooMCxfaW5wdXRIYW5kbGluZy5hcHBseUlucHV0VmFsdWUpKGlucHV0LGlucHV0VmFsdWUpO2JyZWFrfWUucHJldmVudERlZmF1bHQoKX19LGNvbXBvc2l0aW9uZW5kRXZlbnQ6ZnVuY3Rpb24gY29tcG9zaXRpb25lbmRFdmVudChlKXt2YXIgaW5wdXRtYXNrPXRoaXMuaW5wdXRtYXNrO2lucHV0bWFzay5pc0NvbXBvc2luZz0hMSxpbnB1dG1hc2suJGVsLnRyaWdnZXIoXCJpbnB1dFwiKX0sc2V0VmFsdWVFdmVudDpmdW5jdGlvbiBzZXRWYWx1ZUV2ZW50KGUsYXJndW1lbnRfMSxhcmd1bWVudF8yKXt2YXIgaW5wdXRtYXNrPXRoaXMuaW5wdXRtYXNrLGlucHV0PXRoaXMsdmFsdWU9ZSYmZS5kZXRhaWw/ZS5kZXRhaWxbMF06YXJndW1lbnRfMTt2b2lkIDA9PT12YWx1ZSYmKHZhbHVlPXRoaXMuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkpLCgwLF9pbnB1dEhhbmRsaW5nLmFwcGx5SW5wdXRWYWx1ZSkodGhpcyx2YWx1ZSksKGUuZGV0YWlsJiZ2b2lkIDAhPT1lLmRldGFpbFsxXXx8dm9pZCAwIT09YXJndW1lbnRfMikmJl9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayx0aGlzLGUuZGV0YWlsP2UuZGV0YWlsWzFdOmFyZ3VtZW50XzIpfSxmb2N1c0V2ZW50OmZ1bmN0aW9uIGZvY3VzRXZlbnQoZSl7dmFyIGlucHV0bWFzaz10aGlzLmlucHV0bWFzayxvcHRzPWlucHV0bWFzay5vcHRzLGlucHV0PXRoaXMsbnB0VmFsdWU9dGhpcy5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7b3B0cy5zaG93TWFza09uRm9jdXMmJm5wdFZhbHVlIT09X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSYmKDAsX2lucHV0SGFuZGxpbmcud3JpdGVCdWZmZXIpKHRoaXMsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzayksX3Bvc2l0aW9uaW5nLnNlZWtOZXh0LmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGlucHV0bWFzaykpKSwhMCE9PW9wdHMucG9zaXRpb25DYXJldE9uVGFifHwhMSE9PWlucHV0bWFzay5tb3VzZUVudGVyfHxfdmFsaWRhdGlvbi5pc0NvbXBsZXRlLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spKSYmLTEhPT1fcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2spfHxFdmVudEhhbmRsZXJzLmNsaWNrRXZlbnQuYXBwbHkodGhpcyxbZSwhMF0pLGlucHV0bWFzay51bmRvVmFsdWU9X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKX0saW52YWxpZEV2ZW50OmZ1bmN0aW9uIGludmFsaWRFdmVudChlKXt0aGlzLmlucHV0bWFzay52YWxpZGF0aW9uRXZlbnQ9ITB9LG1vdXNlbGVhdmVFdmVudDpmdW5jdGlvbiBtb3VzZWxlYXZlRXZlbnQoKXt2YXIgaW5wdXRtYXNrPXRoaXMuaW5wdXRtYXNrLG9wdHM9aW5wdXRtYXNrLm9wdHMsaW5wdXQ9dGhpcztpbnB1dG1hc2subW91c2VFbnRlcj0hMSxvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzJiYodGhpcy5pbnB1dG1hc2suc2hhZG93Um9vdHx8ZG9jdW1lbnQpLmFjdGl2ZUVsZW1lbnQhPT10aGlzJiYoMCxfaW5wdXRIYW5kbGluZy5IYW5kbGVOYXRpdmVQbGFjZWhvbGRlcikodGhpcyxpbnB1dG1hc2sub3JpZ2luYWxQbGFjZWhvbGRlcil9LGNsaWNrRXZlbnQ6ZnVuY3Rpb24gY2xpY2tFdmVudChlLHRhYmJlZCl7dmFyIGlucHV0bWFzaz10aGlzLmlucHV0bWFzayxpbnB1dD10aGlzO2lmKCh0aGlzLmlucHV0bWFzay5zaGFkb3dSb290fHxkb2N1bWVudCkuYWN0aXZlRWxlbWVudD09PXRoaXMpe3ZhciBuZXdDYXJldFBvc2l0aW9uPV9wb3NpdGlvbmluZy5kZXRlcm1pbmVOZXdDYXJldFBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayx0aGlzKSx0YWJiZWQpO3ZvaWQgMCE9PW5ld0NhcmV0UG9zaXRpb24mJl9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayx0aGlzLG5ld0NhcmV0UG9zaXRpb24pfX0sY3V0RXZlbnQ6ZnVuY3Rpb24gY3V0RXZlbnQoZSl7dmFyIGlucHV0bWFzaz10aGlzLmlucHV0bWFzayxtYXNrc2V0PWlucHV0bWFzay5tYXNrc2V0LGlucHV0PXRoaXMscG9zPV9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayx0aGlzKSxjbGlwYm9hcmREYXRhPXdpbmRvdy5jbGlwYm9hcmREYXRhfHxlLmNsaXBib2FyZERhdGEsY2xpcERhdGE9aW5wdXRtYXNrLmlzUlRMP19wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLnNsaWNlKHBvcy5lbmQscG9zLmJlZ2luKTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5zbGljZShwb3MuYmVnaW4scG9zLmVuZCk7Y2xpcGJvYXJkRGF0YS5zZXREYXRhKFwidGV4dFwiLGlucHV0bWFzay5pc1JUTD9jbGlwRGF0YS5yZXZlcnNlKCkuam9pbihcIlwiKTpjbGlwRGF0YS5qb2luKFwiXCIpKSxkb2N1bWVudC5leGVjQ29tbWFuZCYmZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpLF92YWxpZGF0aW9uLmhhbmRsZVJlbW92ZS5jYWxsKGlucHV0bWFzayx0aGlzLF9rZXljb2RlLmRlZmF1bHQuREVMRVRFLHBvcyksKDAsX2lucHV0SGFuZGxpbmcud3JpdGVCdWZmZXIpKHRoaXMsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzayksbWFza3NldC5wLGUsaW5wdXRtYXNrLnVuZG9WYWx1ZSE9PV9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIikpfSxibHVyRXZlbnQ6ZnVuY3Rpb24gYmx1ckV2ZW50KGUpe3ZhciBpbnB1dG1hc2s9dGhpcy5pbnB1dG1hc2ssb3B0cz1pbnB1dG1hc2sub3B0cywkPWlucHV0bWFzay5kZXBlbmRlbmN5TGliLCRpbnB1dD0kKHRoaXMpLGlucHV0PXRoaXM7aWYodGhpcy5pbnB1dG1hc2speygwLF9pbnB1dEhhbmRsaW5nLkhhbmRsZU5hdGl2ZVBsYWNlaG9sZGVyKSh0aGlzLGlucHV0bWFzay5vcmlnaW5hbFBsYWNlaG9sZGVyKTt2YXIgbnB0VmFsdWU9dGhpcy5pbnB1dG1hc2suX3ZhbHVlR2V0KCksYnVmZmVyPV9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLnNsaWNlKCk7XCJcIiE9PW5wdFZhbHVlJiYob3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyYmKC0xPT09X3Bvc2l0aW9uaW5nLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrKSYmbnB0VmFsdWU9PT1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIik/YnVmZmVyPVtdOl9pbnB1dEhhbmRsaW5nLmNsZWFyT3B0aW9uYWxUYWlsLmNhbGwoaW5wdXRtYXNrLGJ1ZmZlcikpLCExPT09X3ZhbGlkYXRpb24uaXNDb21wbGV0ZS5jYWxsKGlucHV0bWFzayxidWZmZXIpJiYoc2V0VGltZW91dChmdW5jdGlvbigpeyRpbnB1dC50cmlnZ2VyKFwiaW5jb21wbGV0ZVwiKX0sMCksb3B0cy5jbGVhckluY29tcGxldGUmJihfcG9zaXRpb25pbmcucmVzZXRNYXNrU2V0LmNhbGwoaW5wdXRtYXNrKSxidWZmZXI9b3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cz9bXTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLnNsaWNlKCkpKSwoMCxfaW5wdXRIYW5kbGluZy53cml0ZUJ1ZmZlcikodGhpcyxidWZmZXIsdm9pZCAwLGUpKSxpbnB1dG1hc2sudW5kb1ZhbHVlIT09X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSYmKGlucHV0bWFzay51bmRvVmFsdWU9X3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSwkaW5wdXQudHJpZ2dlcihcImNoYW5nZVwiKSl9fSxtb3VzZWVudGVyRXZlbnQ6ZnVuY3Rpb24gbW91c2VlbnRlckV2ZW50KCl7dmFyIGlucHV0bWFzaz10aGlzLmlucHV0bWFzayxvcHRzPWlucHV0bWFzay5vcHRzLGlucHV0PXRoaXM7aW5wdXRtYXNrLm1vdXNlRW50ZXI9ITAsKHRoaXMuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fGRvY3VtZW50KS5hY3RpdmVFbGVtZW50IT09dGhpcyYmKG51bGw9PWlucHV0bWFzay5vcmlnaW5hbFBsYWNlaG9sZGVyJiZ0aGlzLnBsYWNlaG9sZGVyIT09aW5wdXRtYXNrLm9yaWdpbmFsUGxhY2Vob2xkZXImJihpbnB1dG1hc2sub3JpZ2luYWxQbGFjZWhvbGRlcj10aGlzLnBsYWNlaG9sZGVyKSxvcHRzLnNob3dNYXNrT25Ib3ZlciYmKDAsX2lucHV0SGFuZGxpbmcuSGFuZGxlTmF0aXZlUGxhY2Vob2xkZXIpKHRoaXMsKGlucHV0bWFzay5pc1JUTD9fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLnNsaWNlKCkucmV2ZXJzZSgpOl9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGlucHV0bWFzaykpLmpvaW4oXCJcIikpKX0sc3VibWl0RXZlbnQ6ZnVuY3Rpb24gc3VibWl0RXZlbnQoKXt2YXIgaW5wdXRtYXNrPXRoaXMuaW5wdXRtYXNrLG9wdHM9aW5wdXRtYXNrLm9wdHM7aW5wdXRtYXNrLnVuZG9WYWx1ZSE9PV9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLmpvaW4oXCJcIikmJmlucHV0bWFzay4kZWwudHJpZ2dlcihcImNoYW5nZVwiKSxvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzJiYtMT09PV9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGlucHV0bWFzaykmJmlucHV0bWFzay5fdmFsdWVHZXQmJmlucHV0bWFzay5fdmFsdWVHZXQoKT09PV9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKSYmaW5wdXRtYXNrLl92YWx1ZVNldChcIlwiKSxvcHRzLmNsZWFySW5jb21wbGV0ZSYmITE9PT1fdmFsaWRhdGlvbi5pc0NvbXBsZXRlLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spKSYmaW5wdXRtYXNrLl92YWx1ZVNldChcIlwiKSxvcHRzLnJlbW92ZU1hc2tPblN1Ym1pdCYmKGlucHV0bWFzay5fdmFsdWVTZXQoaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKSwhMCksc2V0VGltZW91dChmdW5jdGlvbigpeygwLF9pbnB1dEhhbmRsaW5nLndyaXRlQnVmZmVyKShpbnB1dG1hc2suZWwsX3Bvc2l0aW9uaW5nLmdldEJ1ZmZlci5jYWxsKGlucHV0bWFzaykpfSwwKSl9LHJlc2V0RXZlbnQ6ZnVuY3Rpb24gcmVzZXRFdmVudCgpe3ZhciBpbnB1dG1hc2s9dGhpcy5pbnB1dG1hc2s7aW5wdXRtYXNrLnJlZnJlc2hWYWx1ZT0hMCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7KDAsX2lucHV0SGFuZGxpbmcuYXBwbHlJbnB1dFZhbHVlKShpbnB1dG1hc2suZWwsaW5wdXRtYXNrLl92YWx1ZUdldCghMCkpfSwwKX19O2V4cG9ydHMuRXZlbnRIYW5kbGVycz1FdmVudEhhbmRsZXJzfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmlwaG9uZT1leHBvcnRzLmllbW9iaWxlPWV4cG9ydHMubW9iaWxlPWV4cG9ydHMuaWU9ZXhwb3J0cy51YT12b2lkIDA7dmFyIHVhPXdpbmRvdy5uYXZpZ2F0b3ImJndpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50fHxcIlwiLGllPTA8dWEuaW5kZXhPZihcIk1TSUUgXCIpfHwwPHVhLmluZGV4T2YoXCJUcmlkZW50L1wiKSxtb2JpbGU9XCJvbnRvdWNoc3RhcnRcImluIHdpbmRvdyxpZW1vYmlsZT0vaWVtb2JpbGUvaS50ZXN0KHVhKSxpcGhvbmU9L2lwaG9uZS9pLnRlc3QodWEpJiYhaWVtb2JpbGU7ZXhwb3J0cy5pcGhvbmU9aXBob25lLGV4cG9ydHMuaWVtb2JpbGU9aWVtb2JpbGUsZXhwb3J0cy5tb2JpbGU9bW9iaWxlLGV4cG9ydHMuaWU9aWUsZXhwb3J0cy51YT11YX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PXZvaWQgMDt2YXIgX2V4dGVuZD1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMTIpKSxfd2luZG93PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXyg2KSksX2RhdGE9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KSksX2V2ZW50cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE5KTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19dmFyIGRvY3VtZW50PV93aW5kb3cuZGVmYXVsdC5kb2N1bWVudDtmdW5jdGlvbiBEZXBlbmRlbmN5TGliKGVsZW0pe3JldHVybiBlbGVtIGluc3RhbmNlb2YgRGVwZW5kZW5jeUxpYj9lbGVtOnRoaXMgaW5zdGFuY2VvZiBEZXBlbmRlbmN5TGliP3ZvaWQobnVsbCE9ZWxlbSYmZWxlbSE9PV93aW5kb3cuZGVmYXVsdCYmKHRoaXNbMF09ZWxlbS5ub2RlTmFtZT9lbGVtOnZvaWQgMCE9PWVsZW1bMF0mJmVsZW1bMF0ubm9kZU5hbWU/ZWxlbVswXTpkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW0pLHZvaWQgMCE9PXRoaXNbMF0mJm51bGwhPT10aGlzWzBdJiYodGhpc1swXS5ldmVudFJlZ2lzdHJ5PXRoaXNbMF0uZXZlbnRSZWdpc3RyeXx8e30pKSk6bmV3IERlcGVuZGVuY3lMaWIoZWxlbSl9RGVwZW5kZW5jeUxpYi5wcm90b3R5cGU9e29uOl9ldmVudHMub24sb2ZmOl9ldmVudHMub2ZmLHRyaWdnZXI6X2V2ZW50cy50cmlnZ2VyfSxEZXBlbmRlbmN5TGliLmV4dGVuZD1fZXh0ZW5kLmRlZmF1bHQsRGVwZW5kZW5jeUxpYi5kYXRhPV9kYXRhLmRlZmF1bHQsRGVwZW5kZW5jeUxpYi5FdmVudD1fZXZlbnRzLkV2ZW50O3ZhciBfZGVmYXVsdD1EZXBlbmRlbmN5TGliO2V4cG9ydHMuZGVmYXVsdD1fZGVmYXVsdH0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5tYXNrPW1hc2s7dmFyIF9rZXljb2RlPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygwKSksX3Bvc2l0aW9uaW5nPV9fd2VicGFja19yZXF1aXJlX18oMSksX2lucHV0SGFuZGxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxfZXZlbnRydWxlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDExKSxfZW52aXJvbm1lbnQ9X193ZWJwYWNrX3JlcXVpcmVfXyg4KSxfdmFsaWRhdGlvbj1fX3dlYnBhY2tfcmVxdWlyZV9fKDQpLF9ldmVudGhhbmRsZXJzPV9fd2VicGFja19yZXF1aXJlX18oNyk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIG1hc2soKXt2YXIgaW5wdXRtYXNrPXRoaXMsb3B0cz10aGlzLm9wdHMsZWw9dGhpcy5lbCwkPXRoaXMuZGVwZW5kZW5jeUxpYjtmdW5jdGlvbiBpc0VsZW1lbnRUeXBlU3VwcG9ydGVkKGlucHV0LG9wdHMpe2Z1bmN0aW9uIHBhdGNoVmFsdWVQcm9wZXJ0eShucHQpe3ZhciB2YWx1ZUdldCx2YWx1ZVNldDtmdW5jdGlvbiBwYXRjaFZhbGhvb2sodHlwZSl7aWYoJC52YWxIb29rcyYmKHZvaWQgMD09PSQudmFsSG9va3NbdHlwZV18fCEwIT09JC52YWxIb29rc1t0eXBlXS5pbnB1dG1hc2twYXRjaCkpe3ZhciB2YWxob29rR2V0PSQudmFsSG9va3NbdHlwZV0mJiQudmFsSG9va3NbdHlwZV0uZ2V0PyQudmFsSG9va3NbdHlwZV0uZ2V0OmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLnZhbHVlfSx2YWxob29rU2V0PSQudmFsSG9va3NbdHlwZV0mJiQudmFsSG9va3NbdHlwZV0uc2V0PyQudmFsSG9va3NbdHlwZV0uc2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUpe3JldHVybiBlbGVtLnZhbHVlPXZhbHVlLGVsZW19OyQudmFsSG9va3NbdHlwZV09e2dldDpmdW5jdGlvbiBnZXQoZWxlbSl7aWYoZWxlbS5pbnB1dG1hc2spe2lmKGVsZW0uaW5wdXRtYXNrLm9wdHMuYXV0b1VubWFzaylyZXR1cm4gZWxlbS5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpO3ZhciByZXN1bHQ9dmFsaG9va0dldChlbGVtKTtyZXR1cm4tMSE9PV9wb3NpdGlvbmluZy5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGlucHV0bWFzayx2b2lkIDAsdm9pZCAwLGVsZW0uaW5wdXRtYXNrLm1hc2tzZXQudmFsaWRQb3NpdGlvbnMpfHwhMCE9PW9wdHMubnVsbGFibGU/cmVzdWx0OlwiXCJ9cmV0dXJuIHZhbGhvb2tHZXQoZWxlbSl9LHNldDpmdW5jdGlvbiBzZXQoZWxlbSx2YWx1ZSl7dmFyIHJlc3VsdD12YWxob29rU2V0KGVsZW0sdmFsdWUpO3JldHVybiBlbGVtLmlucHV0bWFzayYmKDAsX2lucHV0SGFuZGxpbmcuYXBwbHlJbnB1dFZhbHVlKShlbGVtLHZhbHVlKSxyZXN1bHR9LGlucHV0bWFza3BhdGNoOiEwfX19ZnVuY3Rpb24gZ2V0dGVyKCl7cmV0dXJuIHRoaXMuaW5wdXRtYXNrP3RoaXMuaW5wdXRtYXNrLm9wdHMuYXV0b1VubWFzaz90aGlzLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCk6LTEhPT1fcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2spfHwhMCE9PW9wdHMubnVsbGFibGU/KHRoaXMuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpPT09dGhpcyYmb3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cz8oaW5wdXRtYXNrLmlzUlRMP19pbnB1dEhhbmRsaW5nLmNsZWFyT3B0aW9uYWxUYWlsLmNhbGwoaW5wdXRtYXNrLF9wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLnNsaWNlKCkpLnJldmVyc2UoKTpfaW5wdXRIYW5kbGluZy5jbGVhck9wdGlvbmFsVGFpbC5jYWxsKGlucHV0bWFzayxfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5zbGljZSgpKSkuam9pbihcIlwiKTp2YWx1ZUdldC5jYWxsKHRoaXMpOlwiXCI6dmFsdWVHZXQuY2FsbCh0aGlzKX1mdW5jdGlvbiBzZXR0ZXIodmFsdWUpe3ZhbHVlU2V0LmNhbGwodGhpcyx2YWx1ZSksdGhpcy5pbnB1dG1hc2smJigwLF9pbnB1dEhhbmRsaW5nLmFwcGx5SW5wdXRWYWx1ZSkodGhpcyx2YWx1ZSl9ZnVuY3Rpb24gaW5zdGFsbE5hdGl2ZVZhbHVlU2V0RmFsbGJhY2sobnB0KXtfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9uKG5wdCxcIm1vdXNlZW50ZXJcIixmdW5jdGlvbigpe3ZhciBpbnB1dD10aGlzLHZhbHVlPXRoaXMuaW5wdXRtYXNrLl92YWx1ZUdldCghMCk7dmFsdWUhPT0oaW5wdXRtYXNrLmlzUlRMP19wb3NpdGlvbmluZy5nZXRCdWZmZXIuY2FsbChpbnB1dG1hc2spLnJldmVyc2UoKTpfcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKSkuam9pbihcIlwiKSYmKDAsX2lucHV0SGFuZGxpbmcuYXBwbHlJbnB1dFZhbHVlKSh0aGlzLHZhbHVlKX0pfWlmKCFucHQuaW5wdXRtYXNrLl9fdmFsdWVHZXQpe2lmKCEwIT09b3B0cy5ub1ZhbHVlUGF0Y2hpbmcpe2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ipe3ZhciB2YWx1ZVByb3BlcnR5PU9iamVjdC5nZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE9iamVjdC5nZXRQcm90b3R5cGVPZihucHQpLFwidmFsdWVcIik6dm9pZCAwO3ZhbHVlUHJvcGVydHkmJnZhbHVlUHJvcGVydHkuZ2V0JiZ2YWx1ZVByb3BlcnR5LnNldD8odmFsdWVHZXQ9dmFsdWVQcm9wZXJ0eS5nZXQsdmFsdWVTZXQ9dmFsdWVQcm9wZXJ0eS5zZXQsT2JqZWN0LmRlZmluZVByb3BlcnR5KG5wdCxcInZhbHVlXCIse2dldDpnZXR0ZXIsc2V0OnNldHRlcixjb25maWd1cmFibGU6ITB9KSk6XCJpbnB1dFwiIT09bnB0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSYmKHZhbHVlR2V0PWZ1bmN0aW9uIHZhbHVlR2V0KCl7cmV0dXJuIHRoaXMudGV4dENvbnRlbnR9LHZhbHVlU2V0PWZ1bmN0aW9uIHZhbHVlU2V0KHZhbHVlKXt0aGlzLnRleHRDb250ZW50PXZhbHVlfSxPYmplY3QuZGVmaW5lUHJvcGVydHkobnB0LFwidmFsdWVcIix7Z2V0OmdldHRlcixzZXQ6c2V0dGVyLGNvbmZpZ3VyYWJsZTohMH0pKX1lbHNlIGRvY3VtZW50Ll9fbG9va3VwR2V0dGVyX18mJm5wdC5fX2xvb2t1cEdldHRlcl9fKFwidmFsdWVcIikmJih2YWx1ZUdldD1ucHQuX19sb29rdXBHZXR0ZXJfXyhcInZhbHVlXCIpLHZhbHVlU2V0PW5wdC5fX2xvb2t1cFNldHRlcl9fKFwidmFsdWVcIiksbnB0Ll9fZGVmaW5lR2V0dGVyX18oXCJ2YWx1ZVwiLGdldHRlciksbnB0Ll9fZGVmaW5lU2V0dGVyX18oXCJ2YWx1ZVwiLHNldHRlcikpO25wdC5pbnB1dG1hc2suX192YWx1ZUdldD12YWx1ZUdldCxucHQuaW5wdXRtYXNrLl9fdmFsdWVTZXQ9dmFsdWVTZXR9bnB0LmlucHV0bWFzay5fdmFsdWVHZXQ9ZnVuY3Rpb24ob3ZlcnJ1bGVSVEwpe3JldHVybiBpbnB1dG1hc2suaXNSVEwmJiEwIT09b3ZlcnJ1bGVSVEw/dmFsdWVHZXQuY2FsbCh0aGlzLmVsKS5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKTp2YWx1ZUdldC5jYWxsKHRoaXMuZWwpfSxucHQuaW5wdXRtYXNrLl92YWx1ZVNldD1mdW5jdGlvbih2YWx1ZSxvdmVycnVsZVJUTCl7dmFsdWVTZXQuY2FsbCh0aGlzLmVsLG51bGw9PXZhbHVlP1wiXCI6ITAhPT1vdmVycnVsZVJUTCYmaW5wdXRtYXNrLmlzUlRMP3ZhbHVlLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpOnZhbHVlKX0sdm9pZCAwPT09dmFsdWVHZXQmJih2YWx1ZUdldD1mdW5jdGlvbiB2YWx1ZUdldCgpe3JldHVybiB0aGlzLnZhbHVlfSx2YWx1ZVNldD1mdW5jdGlvbiB2YWx1ZVNldCh2YWx1ZSl7dGhpcy52YWx1ZT12YWx1ZX0scGF0Y2hWYWxob29rKG5wdC50eXBlKSxpbnN0YWxsTmF0aXZlVmFsdWVTZXRGYWxsYmFjayhucHQpKX19XCJ0ZXh0YXJlYVwiIT09aW5wdXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpJiZvcHRzLmlnbm9yYWJsZXMucHVzaChfa2V5Y29kZS5kZWZhdWx0LkVOVEVSKTt2YXIgZWxlbWVudFR5cGU9aW5wdXQuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSxpc1N1cHBvcnRlZD1cImlucHV0XCI9PT1pbnB1dC50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJm9wdHMuc3VwcG9ydHNJbnB1dFR5cGUuaW5jbHVkZXMoZWxlbWVudFR5cGUpfHxpbnB1dC5pc0NvbnRlbnRFZGl0YWJsZXx8XCJ0ZXh0YXJlYVwiPT09aW5wdXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO2lmKCFpc1N1cHBvcnRlZClpZihcImlucHV0XCI9PT1pbnB1dC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpe3ZhciBlbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7ZWwuc2V0QXR0cmlidXRlKFwidHlwZVwiLGVsZW1lbnRUeXBlKSxpc1N1cHBvcnRlZD1cInRleHRcIj09PWVsLnR5cGUsZWw9bnVsbH1lbHNlIGlzU3VwcG9ydGVkPVwicGFydGlhbFwiO3JldHVybiExIT09aXNTdXBwb3J0ZWQ/cGF0Y2hWYWx1ZVByb3BlcnR5KGlucHV0KTppbnB1dC5pbnB1dG1hc2s9dm9pZCAwLGlzU3VwcG9ydGVkfV9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub2ZmKGVsKTt2YXIgaXNTdXBwb3J0ZWQ9aXNFbGVtZW50VHlwZVN1cHBvcnRlZChlbCxvcHRzKTtpZighMSE9PWlzU3VwcG9ydGVkKXtpbnB1dG1hc2sub3JpZ2luYWxQbGFjZWhvbGRlcj1lbC5wbGFjZWhvbGRlcixpbnB1dG1hc2subWF4TGVuZ3RoPXZvaWQgMCE9PWVsP2VsLm1heExlbmd0aDp2b2lkIDAsLTE9PT1pbnB1dG1hc2subWF4TGVuZ3RoJiYoaW5wdXRtYXNrLm1heExlbmd0aD12b2lkIDApLFwiaW5wdXRNb2RlXCJpbiBlbCYmbnVsbD09PWVsLmdldEF0dHJpYnV0ZShcImlucHV0bW9kZVwiKSYmKGVsLmlucHV0TW9kZT1vcHRzLmlucHV0bW9kZSxlbC5zZXRBdHRyaWJ1dGUoXCJpbnB1dG1vZGVcIixvcHRzLmlucHV0bW9kZSkpLCEwPT09aXNTdXBwb3J0ZWQmJihvcHRzLnNob3dNYXNrT25Gb2N1cz1vcHRzLnNob3dNYXNrT25Gb2N1cyYmLTE9PT1bXCJjYy1udW1iZXJcIixcImNjLWV4cFwiXS5pbmRleE9mKGVsLmF1dG9jb21wbGV0ZSksX2Vudmlyb25tZW50LmlwaG9uZSYmKG9wdHMuaW5zZXJ0TW9kZVZpc3VhbD0hMSksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcInN1Ym1pdFwiLF9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMuc3VibWl0RXZlbnQpLF9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub24oZWwsXCJyZXNldFwiLF9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMucmVzZXRFdmVudCksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImJsdXJcIixfZXZlbnRoYW5kbGVycy5FdmVudEhhbmRsZXJzLmJsdXJFdmVudCksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImZvY3VzXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5mb2N1c0V2ZW50KSxfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9uKGVsLFwiaW52YWxpZFwiLF9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMuaW52YWxpZEV2ZW50KSxfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9uKGVsLFwiY2xpY2tcIixfZXZlbnRoYW5kbGVycy5FdmVudEhhbmRsZXJzLmNsaWNrRXZlbnQpLF9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub24oZWwsXCJtb3VzZWxlYXZlXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5tb3VzZWxlYXZlRXZlbnQpLF9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub24oZWwsXCJtb3VzZWVudGVyXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5tb3VzZWVudGVyRXZlbnQpLF9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub24oZWwsXCJwYXN0ZVwiLF9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMucGFzdGVFdmVudCksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImN1dFwiLF9ldmVudGhhbmRsZXJzLkV2ZW50SGFuZGxlcnMuY3V0RXZlbnQpLF9ldmVudHJ1bGVyLkV2ZW50UnVsZXIub24oZWwsXCJjb21wbGV0ZVwiLG9wdHMub25jb21wbGV0ZSksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImluY29tcGxldGVcIixvcHRzLm9uaW5jb21wbGV0ZSksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImNsZWFyZWRcIixvcHRzLm9uY2xlYXJlZCksITAhPT1vcHRzLmlucHV0RXZlbnRPbmx5JiYoX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImtleWRvd25cIixfZXZlbnRoYW5kbGVycy5FdmVudEhhbmRsZXJzLmtleWRvd25FdmVudCksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImtleXByZXNzXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50KSxfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9uKGVsLFwia2V5dXBcIixfZXZlbnRoYW5kbGVycy5FdmVudEhhbmRsZXJzLmtleXVwRXZlbnQpKSwoX2Vudmlyb25tZW50Lm1vYmlsZXx8b3B0cy5pbnB1dEV2ZW50T25seSkmJmVsLnJlbW92ZUF0dHJpYnV0ZShcIm1heExlbmd0aFwiKSxfZXZlbnRydWxlci5FdmVudFJ1bGVyLm9uKGVsLFwiaW5wdXRcIixfZXZlbnRoYW5kbGVycy5FdmVudEhhbmRsZXJzLmlucHV0RmFsbEJhY2tFdmVudCksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcImNvbXBvc2l0aW9uZW5kXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5jb21wb3NpdGlvbmVuZEV2ZW50KSksX2V2ZW50cnVsZXIuRXZlbnRSdWxlci5vbihlbCxcInNldHZhbHVlXCIsX2V2ZW50aGFuZGxlcnMuRXZlbnRIYW5kbGVycy5zZXRWYWx1ZUV2ZW50KSxpbnB1dG1hc2sudW5kb1ZhbHVlPV9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGlucHV0bWFzaykuam9pbihcIlwiKTt2YXIgYWN0aXZlRWxlbWVudD0oZWwuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fGRvY3VtZW50KS5hY3RpdmVFbGVtZW50O2lmKFwiXCIhPT1lbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKXx8ITE9PT1vcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzfHxhY3RpdmVFbGVtZW50PT09ZWwpeygwLF9pbnB1dEhhbmRsaW5nLmFwcGx5SW5wdXRWYWx1ZSkoZWwsZWwuaW5wdXRtYXNrLl92YWx1ZUdldCghMCksb3B0cyk7dmFyIGJ1ZmZlcj1fcG9zaXRpb25pbmcuZ2V0QnVmZmVyLmNhbGwoaW5wdXRtYXNrKS5zbGljZSgpOyExPT09X3ZhbGlkYXRpb24uaXNDb21wbGV0ZS5jYWxsKGlucHV0bWFzayxidWZmZXIpJiZvcHRzLmNsZWFySW5jb21wbGV0ZSYmX3Bvc2l0aW9uaW5nLnJlc2V0TWFza1NldC5jYWxsKGlucHV0bWFzayksb3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyYmYWN0aXZlRWxlbWVudCE9PWVsJiYoLTE9PT1fcG9zaXRpb25pbmcuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpbnB1dG1hc2spP2J1ZmZlcj1bXTpfaW5wdXRIYW5kbGluZy5jbGVhck9wdGlvbmFsVGFpbC5jYWxsKGlucHV0bWFzayxidWZmZXIpKSwoITE9PT1vcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzfHxvcHRzLnNob3dNYXNrT25Gb2N1cyYmYWN0aXZlRWxlbWVudD09PWVsfHxcIlwiIT09ZWwuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkpJiYoMCxfaW5wdXRIYW5kbGluZy53cml0ZUJ1ZmZlcikoZWwsYnVmZmVyKSxhY3RpdmVFbGVtZW50PT09ZWwmJl9wb3NpdGlvbmluZy5jYXJldC5jYWxsKGlucHV0bWFzayxlbCxfcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbChpbnB1dG1hc2ssX3Bvc2l0aW9uaW5nLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwoaW5wdXRtYXNrKSkpfX19fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLkV2ZW50UnVsZXI9dm9pZCAwO3ZhciBfaW5wdXRtYXNrPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygyKSksX2tleWNvZGU9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDApKSxfcG9zaXRpb25pbmc9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxfaW5wdXRIYW5kbGluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX12YXIgRXZlbnRSdWxlcj17b246ZnVuY3Rpb24gb24oaW5wdXQsZXZlbnROYW1lLGV2ZW50SGFuZGxlcil7dmFyICQ9aW5wdXQuaW5wdXRtYXNrLmRlcGVuZGVuY3lMaWIsZXY9ZnVuY3Rpb24gZXYoZSl7ZS5vcmlnaW5hbEV2ZW50JiYoZT1lLm9yaWdpbmFsRXZlbnR8fGUsYXJndW1lbnRzWzBdPWUpO3ZhciB0aGF0PXRoaXMsYXJncyxpbnB1dG1hc2s9dGhhdC5pbnB1dG1hc2ssb3B0cz1pbnB1dG1hc2s/aW5wdXRtYXNrLm9wdHM6dm9pZCAwO2lmKHZvaWQgMD09PWlucHV0bWFzayYmXCJGT1JNXCIhPT10aGlzLm5vZGVOYW1lKXt2YXIgaW1PcHRzPSQuZGF0YSh0aGF0LFwiX2lucHV0bWFza19vcHRzXCIpOyQodGhhdCkub2ZmKCksaW1PcHRzJiZuZXcgX2lucHV0bWFzay5kZWZhdWx0KGltT3B0cykubWFzayh0aGF0KX1lbHNle2lmKFtcInN1Ym1pdFwiLFwicmVzZXRcIixcInNldHZhbHVlXCJdLmluY2x1ZGVzKGUudHlwZSl8fFwiRk9STVwiPT09dGhpcy5ub2RlTmFtZXx8ISh0aGF0LmRpc2FibGVkfHx0aGF0LnJlYWRPbmx5JiYhKFwia2V5ZG93blwiPT09ZS50eXBlJiZlLmN0cmxLZXkmJjY3PT09ZS5rZXlDb2RlfHwhMT09PW9wdHMudGFiVGhyb3VnaCYmZS5rZXlDb2RlPT09X2tleWNvZGUuZGVmYXVsdC5UQUIpKSl7c3dpdGNoKGUudHlwZSl7Y2FzZVwiaW5wdXRcIjppZighMD09PWlucHV0bWFzay5za2lwSW5wdXRFdmVudHx8ZS5pbnB1dFR5cGUmJlwiaW5zZXJ0Q29tcG9zaXRpb25UZXh0XCI9PT1lLmlucHV0VHlwZSlyZXR1cm4gaW5wdXRtYXNrLnNraXBJbnB1dEV2ZW50PSExLGUucHJldmVudERlZmF1bHQoKTticmVhaztjYXNlXCJrZXlkb3duXCI6aW5wdXRtYXNrLnNraXBLZXlQcmVzc0V2ZW50PSExLGlucHV0bWFzay5za2lwSW5wdXRFdmVudD1pbnB1dG1hc2suaXNDb21wb3Npbmc9ZS5rZXlDb2RlPT09X2tleWNvZGUuZGVmYXVsdC5LRVlfMjI5O2JyZWFrO2Nhc2VcImtleXVwXCI6Y2FzZVwiY29tcG9zaXRpb25lbmRcIjppbnB1dG1hc2suaXNDb21wb3NpbmcmJihpbnB1dG1hc2suc2tpcElucHV0RXZlbnQ9ITEpO2JyZWFrO2Nhc2VcImtleXByZXNzXCI6aWYoITA9PT1pbnB1dG1hc2suc2tpcEtleVByZXNzRXZlbnQpcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtpbnB1dG1hc2suc2tpcEtleVByZXNzRXZlbnQ9ITA7YnJlYWs7Y2FzZVwiY2xpY2tcIjpjYXNlXCJmb2N1c1wiOnJldHVybiBpbnB1dG1hc2sudmFsaWRhdGlvbkV2ZW50PyhpbnB1dG1hc2sudmFsaWRhdGlvbkV2ZW50PSExLGlucHV0LmJsdXIoKSwoMCxfaW5wdXRIYW5kbGluZy5IYW5kbGVOYXRpdmVQbGFjZWhvbGRlcikoaW5wdXQsKGlucHV0bWFzay5pc1JUTD9fcG9zaXRpb25pbmcuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpbnB1dG1hc2spLnNsaWNlKCkucmV2ZXJzZSgpOl9wb3NpdGlvbmluZy5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGlucHV0bWFzaykpLmpvaW4oXCJcIikpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpbnB1dC5mb2N1cygpfSwzZTMpKTooYXJncz1hcmd1bWVudHMsc2V0VGltZW91dChmdW5jdGlvbigpe2lucHV0LmlucHV0bWFzayYmZXZlbnRIYW5kbGVyLmFwcGx5KHRoYXQsYXJncyl9LDApKSwhMX12YXIgcmV0dXJuVmFsPWV2ZW50SGFuZGxlci5hcHBseSh0aGF0LGFyZ3VtZW50cyk7cmV0dXJuITE9PT1yZXR1cm5WYWwmJihlLnByZXZlbnREZWZhdWx0KCksZS5zdG9wUHJvcGFnYXRpb24oKSkscmV0dXJuVmFsfWUucHJldmVudERlZmF1bHQoKX19O2lucHV0LmlucHV0bWFzay5ldmVudHNbZXZlbnROYW1lXT1pbnB1dC5pbnB1dG1hc2suZXZlbnRzW2V2ZW50TmFtZV18fFtdLGlucHV0LmlucHV0bWFzay5ldmVudHNbZXZlbnROYW1lXS5wdXNoKGV2KSxbXCJzdWJtaXRcIixcInJlc2V0XCJdLmluY2x1ZGVzKGV2ZW50TmFtZSk/bnVsbCE9PWlucHV0LmZvcm0mJiQoaW5wdXQuZm9ybSkub24oZXZlbnROYW1lLGV2LmJpbmQoaW5wdXQpKTokKGlucHV0KS5vbihldmVudE5hbWUsZXYpfSxvZmY6ZnVuY3Rpb24gb2ZmKGlucHV0LGV2ZW50KXtpZihpbnB1dC5pbnB1dG1hc2smJmlucHV0LmlucHV0bWFzay5ldmVudHMpe3ZhciAkPWlucHV0LmlucHV0bWFzay5kZXBlbmRlbmN5TGliLGV2ZW50cz1pbnB1dC5pbnB1dG1hc2suZXZlbnRzO2Zvcih2YXIgZXZlbnROYW1lIGluIGV2ZW50JiYoZXZlbnRzPVtdLGV2ZW50c1tldmVudF09aW5wdXQuaW5wdXRtYXNrLmV2ZW50c1tldmVudF0pLGV2ZW50cyl7Zm9yKHZhciBldkFycj1ldmVudHNbZXZlbnROYW1lXTswPGV2QXJyLmxlbmd0aDspe3ZhciBldj1ldkFyci5wb3AoKTtbXCJzdWJtaXRcIixcInJlc2V0XCJdLmluY2x1ZGVzKGV2ZW50TmFtZSk/bnVsbCE9PWlucHV0LmZvcm0mJiQoaW5wdXQuZm9ybSkub2ZmKGV2ZW50TmFtZSxldik6JChpbnB1dCkub2ZmKGV2ZW50TmFtZSxldil9ZGVsZXRlIGlucHV0LmlucHV0bWFzay5ldmVudHNbZXZlbnROYW1lXX19fX07ZXhwb3J0cy5FdmVudFJ1bGVyPUV2ZW50UnVsZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiB0eXBlb2Ygb2JqfTpmdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygb2JqfSxfdHlwZW9mKG9iail9ZnVuY3Rpb24gZXh0ZW5kKCl7dmFyIG9wdGlvbnMsbmFtZSxzcmMsY29weSxjb3B5SXNBcnJheSxjbG9uZSx0YXJnZXQ9YXJndW1lbnRzWzBdfHx7fSxpPTEsbGVuZ3RoPWFyZ3VtZW50cy5sZW5ndGgsZGVlcD0hMTtmb3IoXCJib29sZWFuXCI9PXR5cGVvZiB0YXJnZXQmJihkZWVwPXRhcmdldCx0YXJnZXQ9YXJndW1lbnRzW2ldfHx7fSxpKyspLFwib2JqZWN0XCIhPT1fdHlwZW9mKHRhcmdldCkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHRhcmdldCYmKHRhcmdldD17fSk7aTxsZW5ndGg7aSsrKWlmKG51bGwhPShvcHRpb25zPWFyZ3VtZW50c1tpXSkpZm9yKG5hbWUgaW4gb3B0aW9ucylzcmM9dGFyZ2V0W25hbWVdLGNvcHk9b3B0aW9uc1tuYW1lXSx0YXJnZXQhPT1jb3B5JiYoZGVlcCYmY29weSYmKFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoY29weSl8fChjb3B5SXNBcnJheT1BcnJheS5pc0FycmF5KGNvcHkpKSk/KGNsb25lPWNvcHlJc0FycmF5Pyhjb3B5SXNBcnJheT0hMSxzcmMmJkFycmF5LmlzQXJyYXkoc3JjKT9zcmM6W10pOnNyYyYmXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzcmMpP3NyYzp7fSx0YXJnZXRbbmFtZV09ZXh0ZW5kKGRlZXAsY2xvbmUsY29weSkpOnZvaWQgMCE9PWNvcHkmJih0YXJnZXRbbmFtZV09Y29weSkpO3JldHVybiB0YXJnZXR9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PWV4dGVuZH0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0O3ZhciBlc2NhcGVSZWdleFJlZ2V4PW5ldyBSZWdFeHAoXCIoXFxcXFwiK1tcIi9cIixcIi5cIixcIipcIixcIitcIixcIj9cIixcInxcIixcIihcIixcIilcIixcIltcIixcIl1cIixcIntcIixcIn1cIixcIlxcXFxcIixcIiRcIixcIl5cIl0uam9pbihcInxcXFxcXCIpK1wiKVwiLFwiZ2ltXCIpO2Z1bmN0aW9uIF9kZWZhdWx0KHN0cil7cmV0dXJuIHN0ci5yZXBsYWNlKGVzY2FwZVJlZ2V4UmVnZXgsXCJcXFxcJDFcIil9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmRlZmF1bHQ9dm9pZCAwLF9fd2VicGFja19yZXF1aXJlX18oMTUpLF9fd2VicGFja19yZXF1aXJlX18oMjMpLF9fd2VicGFja19yZXF1aXJlX18oMjQpLF9fd2VicGFja19yZXF1aXJlX18oMjUpO3ZhciBfaW5wdXRtYXNrMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMikpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX12YXIgX2RlZmF1bHQ9X2lucHV0bWFzazIuZGVmYXVsdDtleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHR9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO3ZhciBfaW5wdXRtYXNrPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygyKSk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmREZWZpbml0aW9ucyh7QTp7dmFsaWRhdG9yOlwiW0EtWmEtelxcdTA0MTAtXFx1MDQ0ZlxcdTA0MDFcXHUwNDUxXFx4YzAtXFx4ZmZcXHhiNV1cIixjYXNpbmc6XCJ1cHBlclwifSxcIiZcIjp7dmFsaWRhdG9yOlwiWzAtOUEtWmEtelxcdTA0MTAtXFx1MDQ0ZlxcdTA0MDFcXHUwNDUxXFx4YzAtXFx4ZmZcXHhiNV1cIixjYXNpbmc6XCJ1cHBlclwifSxcIiNcIjp7dmFsaWRhdG9yOlwiWzAtOUEtRmEtZl1cIixjYXNpbmc6XCJ1cHBlclwifX0pO3ZhciBpcFZhbGlkYXRvclJlZ2V4PW5ldyBSZWdFeHAoXCIyNVswLTVdfDJbMC00XVswLTldfFswMV1bMC05XVswLTldXCIpO2Z1bmN0aW9uIGlwVmFsaWRhdG9yKGNocnMsbWFza3NldCxwb3Msc3RyaWN0LG9wdHMpe3JldHVybiBjaHJzPS0xPHBvcy0xJiZcIi5cIiE9PW1hc2tzZXQuYnVmZmVyW3Bvcy0xXT8oY2hycz1tYXNrc2V0LmJ1ZmZlcltwb3MtMV0rY2hycywtMTxwb3MtMiYmXCIuXCIhPT1tYXNrc2V0LmJ1ZmZlcltwb3MtMl0/bWFza3NldC5idWZmZXJbcG9zLTJdK2NocnM6XCIwXCIrY2hycyk6XCIwMFwiK2NocnMsaXBWYWxpZGF0b3JSZWdleC50ZXN0KGNocnMpfV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmRBbGlhc2VzKHtjc3N1bml0OntyZWdleDpcIlsrLV0/WzAtOV0rXFxcXC4/KFswLTldKyk/KHB4fGVtfHJlbXxleHwlfGlufGNtfG1tfHB0fHBjKVwifSx1cmw6e3JlZ2V4OlwiKGh0dHBzP3xmdHApOi8vLipcIixhdXRvVW5tYXNrOiExLGtlZXBTdGF0aWM6ITEsdGFiVGhyb3VnaDohMH0saXA6e21hc2s6XCJpW2lbaV1dLmpbaltqXV0ua1trW2tdXS5sW2xbbF1dXCIsZGVmaW5pdGlvbnM6e2k6e3ZhbGlkYXRvcjppcFZhbGlkYXRvcn0sajp7dmFsaWRhdG9yOmlwVmFsaWRhdG9yfSxrOnt2YWxpZGF0b3I6aXBWYWxpZGF0b3J9LGw6e3ZhbGlkYXRvcjppcFZhbGlkYXRvcn19LG9uVW5NYXNrOmZ1bmN0aW9uIG9uVW5NYXNrKG1hc2tlZFZhbHVlLHVubWFza2VkVmFsdWUsb3B0cyl7cmV0dXJuIG1hc2tlZFZhbHVlfSxpbnB1dG1vZGU6XCJudW1lcmljXCJ9LGVtYWlsOnttYXNrOlwiKnsxLDY0fVsuKnsxLDY0fV1bLip7MSw2NH1dWy4qezEsNjN9XUAtezEsNjN9Li17MSw2M31bLi17MSw2M31dWy4tezEsNjN9XVwiLGdyZWVkeTohMSxjYXNpbmc6XCJsb3dlclwiLG9uQmVmb3JlUGFzdGU6ZnVuY3Rpb24gb25CZWZvcmVQYXN0ZShwYXN0ZWRWYWx1ZSxvcHRzKXtyZXR1cm4gcGFzdGVkVmFsdWU9cGFzdGVkVmFsdWUudG9Mb3dlckNhc2UoKSxwYXN0ZWRWYWx1ZS5yZXBsYWNlKFwibWFpbHRvOlwiLFwiXCIpfSxkZWZpbml0aW9uczp7XCIqXCI6e3ZhbGlkYXRvcjpcIlswLTlcXHVmZjExLVxcdWZmMTlBLVphLXpcXHUwNDEwLVxcdTA0NGZcXHUwNDAxXFx1MDQ1MVxceGMwLVxceGZmXFx4YjUhIyQlJicqKy89P15fYHt8fX4tXVwifSxcIi1cIjp7dmFsaWRhdG9yOlwiWzAtOUEtWmEtei1dXCJ9fSxvblVuTWFzazpmdW5jdGlvbiBvblVuTWFzayhtYXNrZWRWYWx1ZSx1bm1hc2tlZFZhbHVlLG9wdHMpe3JldHVybiBtYXNrZWRWYWx1ZX0saW5wdXRtb2RlOlwiZW1haWxcIn0sbWFjOnttYXNrOlwiIyM6IyM6IyM6IyM6IyM6IyNcIn0sdmluOnttYXNrOlwiVnsxM305ezR9XCIsZGVmaW5pdGlvbnM6e1Y6e3ZhbGlkYXRvcjpcIltBLUhKLU5QUi1aYS1oai1ucHItelxcXFxkXVwiLGNhc2luZzpcInVwcGVyXCJ9fSxjbGVhckluY29tcGxldGU6ITAsYXV0b1VubWFzazohMH0sc3NuOnttYXNrOlwiOTk5LTk5LTk5OTlcIixwb3N0VmFsaWRhdGlvbjpmdW5jdGlvbiBwb3N0VmFsaWRhdGlvbihidWZmZXIscG9zLGMsY3VycmVudFJlc3VsdCxvcHRzLG1hc2tzZXQsc3RyaWN0KXtyZXR1cm4vXig/ITIxOS0wOS05OTk5fDA3OC0wNS0xMTIwKSg/ITY2NnwwMDB8OS57Mn0pLnszfS0oPyEwMCkuezJ9LSg/ITB7NH0pLns0fSQvLnRlc3QoYnVmZmVyLmpvaW4oXCJcIikpfX19KX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBfdHlwZW9mPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIHR5cGVvZiBvYmp9OmZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBvYmp9LF90eXBlb2Yob2JqKX1cImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuZ2V0UHJvdG90eXBlT2YmJihPYmplY3QuZ2V0UHJvdG90eXBlT2Y9XCJvYmplY3RcIj09PV90eXBlb2YoXCJ0ZXN0XCIuX19wcm90b19fKT9mdW5jdGlvbihvYmplY3Qpe3JldHVybiBvYmplY3QuX19wcm90b19ffTpmdW5jdGlvbihvYmplY3Qpe3JldHVybiBvYmplY3QuY29uc3RydWN0b3IucHJvdG90eXBlfSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO0FycmF5LnByb3RvdHlwZS5pbmNsdWRlc3x8T2JqZWN0LmRlZmluZVByb3BlcnR5KEFycmF5LnByb3RvdHlwZSxcImluY2x1ZGVzXCIse3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKHNlYXJjaEVsZW1lbnQsZnJvbUluZGV4KXtpZihudWxsPT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3IoJ1widGhpc1wiIGlzIG51bGwgb3Igbm90IGRlZmluZWQnKTt2YXIgbz1PYmplY3QodGhpcyksbGVuPW8ubGVuZ3RoPj4+MDtpZigwPT1sZW4pcmV0dXJuITE7Zm9yKHZhciBuPTB8ZnJvbUluZGV4LGs9TWF0aC5tYXgoMDw9bj9uOmxlbi1NYXRoLmFicyhuKSwwKTtrPGxlbjspe2lmKG9ba109PT1zZWFyY2hFbGVtZW50KXJldHVybiEwO2srK31yZXR1cm4hMX19KX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2RlZmF1bHQob3duZXIsa2V5LHZhbHVlKXtpZih2b2lkIDA9PT12YWx1ZSlyZXR1cm4gb3duZXIuX19kYXRhP293bmVyLl9fZGF0YVtrZXldOm51bGw7b3duZXIuX19kYXRhPW93bmVyLl9fZGF0YXx8e30sb3duZXIuX19kYXRhW2tleV09dmFsdWV9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLm9uPW9uLGV4cG9ydHMub2ZmPW9mZixleHBvcnRzLnRyaWdnZXI9dHJpZ2dlcixleHBvcnRzLkV2ZW50PXZvaWQgMDt2YXIgX2V4dGVuZD1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMTIpKSxfd2luZG93PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXyg2KSksX2lucHV0bWFzaz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oOSkpLEV2ZW50O2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudChlbGVtKXtyZXR1cm4gZWxlbSBpbnN0YW5jZW9mIEVsZW1lbnR9ZnVuY3Rpb24gb24oZXZlbnRzLGhhbmRsZXIpe2Z1bmN0aW9uIGFkZEV2ZW50KGV2LG5hbWVzcGFjZSl7ZWxlbS5hZGRFdmVudExpc3RlbmVyP2VsZW0uYWRkRXZlbnRMaXN0ZW5lcihldixoYW5kbGVyLCExKTplbGVtLmF0dGFjaEV2ZW50JiZlbGVtLmF0dGFjaEV2ZW50KFwib25cIitldixoYW5kbGVyKSxldmVudFJlZ2lzdHJ5W2V2XT1ldmVudFJlZ2lzdHJ5W2V2XXx8e30sZXZlbnRSZWdpc3RyeVtldl1bbmFtZXNwYWNlXT1ldmVudFJlZ2lzdHJ5W2V2XVtuYW1lc3BhY2VdfHxbXSxldmVudFJlZ2lzdHJ5W2V2XVtuYW1lc3BhY2VdLnB1c2goaGFuZGxlcil9aWYoaXNWYWxpZEVsZW1lbnQodGhpc1swXSkpZm9yKHZhciBldmVudFJlZ2lzdHJ5PXRoaXNbMF0uZXZlbnRSZWdpc3RyeSxlbGVtPXRoaXNbMF0sX2V2ZW50cz1ldmVudHMuc3BsaXQoXCIgXCIpLGVuZHg9MDtlbmR4PF9ldmVudHMubGVuZ3RoO2VuZHgrKyl7dmFyIG5zRXZlbnQ9X2V2ZW50c1tlbmR4XS5zcGxpdChcIi5cIiksZXY9bnNFdmVudFswXSxuYW1lc3BhY2U9bnNFdmVudFsxXXx8XCJnbG9iYWxcIjthZGRFdmVudChldixuYW1lc3BhY2UpfXJldHVybiB0aGlzfWZ1bmN0aW9uIG9mZihldmVudHMsaGFuZGxlcil7dmFyIGV2ZW50UmVnaXN0cnksZWxlbTtmdW5jdGlvbiByZW1vdmVFdmVudChldixuYW1lc3BhY2UsaGFuZGxlcil7aWYoZXYgaW4gZXZlbnRSZWdpc3RyeT09ITApaWYoZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyP2VsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihldixoYW5kbGVyLCExKTplbGVtLmRldGFjaEV2ZW50JiZlbGVtLmRldGFjaEV2ZW50KFwib25cIitldixoYW5kbGVyKSxcImdsb2JhbFwiPT09bmFtZXNwYWNlKWZvcih2YXIgbm1zcCBpbiBldmVudFJlZ2lzdHJ5W2V2XSlldmVudFJlZ2lzdHJ5W2V2XVtubXNwXS5zcGxpY2UoZXZlbnRSZWdpc3RyeVtldl1bbm1zcF0uaW5kZXhPZihoYW5kbGVyKSwxKTtlbHNlIGV2ZW50UmVnaXN0cnlbZXZdW25hbWVzcGFjZV0uc3BsaWNlKGV2ZW50UmVnaXN0cnlbZXZdW25hbWVzcGFjZV0uaW5kZXhPZihoYW5kbGVyKSwxKX1mdW5jdGlvbiByZXNvbHZlTmFtZXNwYWNlKGV2LG5hbWVzcGFjZSl7dmFyIGV2dHM9W10saG5keCxobmRMO2lmKDA8ZXYubGVuZ3RoKWlmKHZvaWQgMD09PWhhbmRsZXIpZm9yKGhuZHg9MCxobmRMPWV2ZW50UmVnaXN0cnlbZXZdW25hbWVzcGFjZV0ubGVuZ3RoO2huZHg8aG5kTDtobmR4KyspZXZ0cy5wdXNoKHtldjpldixuYW1lc3BhY2U6bmFtZXNwYWNlJiYwPG5hbWVzcGFjZS5sZW5ndGg/bmFtZXNwYWNlOlwiZ2xvYmFsXCIsaGFuZGxlcjpldmVudFJlZ2lzdHJ5W2V2XVtuYW1lc3BhY2VdW2huZHhdfSk7ZWxzZSBldnRzLnB1c2goe2V2OmV2LG5hbWVzcGFjZTpuYW1lc3BhY2UmJjA8bmFtZXNwYWNlLmxlbmd0aD9uYW1lc3BhY2U6XCJnbG9iYWxcIixoYW5kbGVyOmhhbmRsZXJ9KTtlbHNlIGlmKDA8bmFtZXNwYWNlLmxlbmd0aClmb3IodmFyIGV2TmR4IGluIGV2ZW50UmVnaXN0cnkpZm9yKHZhciBubXNwIGluIGV2ZW50UmVnaXN0cnlbZXZOZHhdKWlmKG5tc3A9PT1uYW1lc3BhY2UpaWYodm9pZCAwPT09aGFuZGxlcilmb3IoaG5keD0wLGhuZEw9ZXZlbnRSZWdpc3RyeVtldk5keF1bbm1zcF0ubGVuZ3RoO2huZHg8aG5kTDtobmR4KyspZXZ0cy5wdXNoKHtldjpldk5keCxuYW1lc3BhY2U6bm1zcCxoYW5kbGVyOmV2ZW50UmVnaXN0cnlbZXZOZHhdW25tc3BdW2huZHhdfSk7ZWxzZSBldnRzLnB1c2goe2V2OmV2TmR4LG5hbWVzcGFjZTpubXNwLGhhbmRsZXI6aGFuZGxlcn0pO3JldHVybiBldnRzfWlmKGlzVmFsaWRFbGVtZW50KHRoaXNbMF0pKXtldmVudFJlZ2lzdHJ5PXRoaXNbMF0uZXZlbnRSZWdpc3RyeSxlbGVtPXRoaXNbMF07Zm9yKHZhciBfZXZlbnRzPWV2ZW50cy5zcGxpdChcIiBcIiksZW5keD0wO2VuZHg8X2V2ZW50cy5sZW5ndGg7ZW5keCsrKWZvcih2YXIgbnNFdmVudD1fZXZlbnRzW2VuZHhdLnNwbGl0KFwiLlwiKSxvZmZFdmVudHM9cmVzb2x2ZU5hbWVzcGFjZShuc0V2ZW50WzBdLG5zRXZlbnRbMV0pLGk9MCxvZmZFdmVudHNMPW9mZkV2ZW50cy5sZW5ndGg7aTxvZmZFdmVudHNMO2krKylyZW1vdmVFdmVudChvZmZFdmVudHNbaV0uZXYsb2ZmRXZlbnRzW2ldLm5hbWVzcGFjZSxvZmZFdmVudHNbaV0uaGFuZGxlcil9cmV0dXJuIHRoaXN9ZnVuY3Rpb24gdHJpZ2dlcihldmVudHMpe2lmKGlzVmFsaWRFbGVtZW50KHRoaXNbMF0pKWZvcih2YXIgZXZlbnRSZWdpc3RyeT10aGlzWzBdLmV2ZW50UmVnaXN0cnksZWxlbT10aGlzWzBdLF9ldmVudHM9XCJzdHJpbmdcIj09dHlwZW9mIGV2ZW50cz9ldmVudHMuc3BsaXQoXCIgXCIpOltldmVudHMudHlwZV0sZW5keD0wO2VuZHg8X2V2ZW50cy5sZW5ndGg7ZW5keCsrKXt2YXIgbnNFdmVudD1fZXZlbnRzW2VuZHhdLnNwbGl0KFwiLlwiKSxldj1uc0V2ZW50WzBdLG5hbWVzcGFjZT1uc0V2ZW50WzFdfHxcImdsb2JhbFwiO2lmKHZvaWQgMCE9PWRvY3VtZW50JiZcImdsb2JhbFwiPT09bmFtZXNwYWNlKXt2YXIgZXZudCxpLHBhcmFtcz17YnViYmxlczohMCxjYW5jZWxhYmxlOiEwLGRldGFpbDphcmd1bWVudHNbMV19O2lmKGRvY3VtZW50LmNyZWF0ZUV2ZW50KXt0cnl7ZXZudD1uZXcgQ3VzdG9tRXZlbnQoZXYscGFyYW1zKX1jYXRjaChlKXtldm50PWRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiQ3VzdG9tRXZlbnRcIiksZXZudC5pbml0Q3VzdG9tRXZlbnQoZXYscGFyYW1zLmJ1YmJsZXMscGFyYW1zLmNhbmNlbGFibGUscGFyYW1zLmRldGFpbCl9ZXZlbnRzLnR5cGUmJigwLF9leHRlbmQuZGVmYXVsdCkoZXZudCxldmVudHMpLGVsZW0uZGlzcGF0Y2hFdmVudChldm50KX1lbHNlIGV2bnQ9ZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QoKSxldm50LmV2ZW50VHlwZT1ldixldm50LmRldGFpbD1hcmd1bWVudHNbMV0sZXZlbnRzLnR5cGUmJigwLF9leHRlbmQuZGVmYXVsdCkoZXZudCxldmVudHMpLGVsZW0uZmlyZUV2ZW50KFwib25cIitldm50LmV2ZW50VHlwZSxldm50KX1lbHNlIGlmKHZvaWQgMCE9PWV2ZW50UmVnaXN0cnlbZXZdKWlmKGFyZ3VtZW50c1swXT1hcmd1bWVudHNbMF0udHlwZT9hcmd1bWVudHNbMF06X2lucHV0bWFzay5kZWZhdWx0LkV2ZW50KGFyZ3VtZW50c1swXSksYXJndW1lbnRzWzBdLmRldGFpbD1hcmd1bWVudHMuc2xpY2UoMSksXCJnbG9iYWxcIj09PW5hbWVzcGFjZSlmb3IodmFyIG5tc3AgaW4gZXZlbnRSZWdpc3RyeVtldl0pZm9yKGk9MDtpPGV2ZW50UmVnaXN0cnlbZXZdW25tc3BdLmxlbmd0aDtpKyspZXZlbnRSZWdpc3RyeVtldl1bbm1zcF1baV0uYXBwbHkoZWxlbSxhcmd1bWVudHMpO2Vsc2UgZm9yKGk9MDtpPGV2ZW50UmVnaXN0cnlbZXZdW25hbWVzcGFjZV0ubGVuZ3RoO2krKylldmVudFJlZ2lzdHJ5W2V2XVtuYW1lc3BhY2VdW2ldLmFwcGx5KGVsZW0sYXJndW1lbnRzKX1yZXR1cm4gdGhpc31leHBvcnRzLkV2ZW50PUV2ZW50LFwiZnVuY3Rpb25cIj09dHlwZW9mIF93aW5kb3cuZGVmYXVsdC5DdXN0b21FdmVudD9leHBvcnRzLkV2ZW50PUV2ZW50PV93aW5kb3cuZGVmYXVsdC5DdXN0b21FdmVudDooZXhwb3J0cy5FdmVudD1FdmVudD1mdW5jdGlvbiBFdmVudChldmVudCxwYXJhbXMpe3BhcmFtcz1wYXJhbXN8fHtidWJibGVzOiExLGNhbmNlbGFibGU6ITEsZGV0YWlsOnZvaWQgMH07dmFyIGV2dD1kb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO3JldHVybiBldnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50LHBhcmFtcy5idWJibGVzLHBhcmFtcy5jYW5jZWxhYmxlLHBhcmFtcy5kZXRhaWwpLGV2dH0sRXZlbnQucHJvdG90eXBlPV93aW5kb3cuZGVmYXVsdC5FdmVudC5wcm90b3R5cGUpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmdlbmVyYXRlTWFza1NldD1nZW5lcmF0ZU1hc2tTZXQsZXhwb3J0cy5hbmFseXNlTWFzaz1hbmFseXNlTWFzazt2YXIgX2lucHV0bWFzaz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oOSkpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBnZW5lcmF0ZU1hc2tTZXQob3B0cyxub2NhY2hlKXt2YXIgbXM7ZnVuY3Rpb24gZ2VuZXJhdGVNYXNrKG1hc2ssbWV0YWRhdGEsb3B0cyl7dmFyIHJlZ2V4TWFzaz0hMSxtYXNrc2V0RGVmaW5pdGlvbixtYXNrZGVmS2V5O2lmKG51bGwhPT1tYXNrJiZcIlwiIT09bWFza3x8KHJlZ2V4TWFzaz1udWxsIT09b3B0cy5yZWdleCxtYXNrPXJlZ2V4TWFzaz8obWFzaz1vcHRzLnJlZ2V4LG1hc2sucmVwbGFjZSgvXihcXF4pKC4qKShcXCQpJC8sXCIkMlwiKSk6KHJlZ2V4TWFzaz0hMCxcIi4qXCIpKSwxPT09bWFzay5sZW5ndGgmJiExPT09b3B0cy5ncmVlZHkmJjAhPT1vcHRzLnJlcGVhdCYmKG9wdHMucGxhY2Vob2xkZXI9XCJcIiksMDxvcHRzLnJlcGVhdHx8XCIqXCI9PT1vcHRzLnJlcGVhdHx8XCIrXCI9PT1vcHRzLnJlcGVhdCl7dmFyIHJlcGVhdFN0YXJ0PVwiKlwiPT09b3B0cy5yZXBlYXQ/MDpcIitcIj09PW9wdHMucmVwZWF0PzE6b3B0cy5yZXBlYXQ7bWFzaz1vcHRzLmdyb3VwbWFya2VyWzBdK21hc2srb3B0cy5ncm91cG1hcmtlclsxXStvcHRzLnF1YW50aWZpZXJtYXJrZXJbMF0rcmVwZWF0U3RhcnQrXCIsXCIrb3B0cy5yZXBlYXQrb3B0cy5xdWFudGlmaWVybWFya2VyWzFdfXJldHVybiBtYXNrZGVmS2V5PXJlZ2V4TWFzaz9cInJlZ2V4X1wiK29wdHMucmVnZXg6b3B0cy5udW1lcmljSW5wdXQ/bWFzay5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKTptYXNrLCExIT09b3B0cy5rZWVwU3RhdGljJiYobWFza2RlZktleT1cImtzX1wiK21hc2tkZWZLZXkpLHZvaWQgMD09PUlucHV0bWFzay5wcm90b3R5cGUubWFza3NDYWNoZVttYXNrZGVmS2V5XXx8ITA9PT1ub2NhY2hlPyhtYXNrc2V0RGVmaW5pdGlvbj17bWFzazptYXNrLG1hc2tUb2tlbjpJbnB1dG1hc2sucHJvdG90eXBlLmFuYWx5c2VNYXNrKG1hc2sscmVnZXhNYXNrLG9wdHMpLHZhbGlkUG9zaXRpb25zOnt9LF9idWZmZXI6dm9pZCAwLGJ1ZmZlcjp2b2lkIDAsdGVzdHM6e30sZXhjbHVkZXM6e30sbWV0YWRhdGE6bWV0YWRhdGEsbWFza0xlbmd0aDp2b2lkIDAsaml0T2Zmc2V0Ont9fSwhMCE9PW5vY2FjaGUmJihJbnB1dG1hc2sucHJvdG90eXBlLm1hc2tzQ2FjaGVbbWFza2RlZktleV09bWFza3NldERlZmluaXRpb24sbWFza3NldERlZmluaXRpb249X2lucHV0bWFzay5kZWZhdWx0LmV4dGVuZCghMCx7fSxJbnB1dG1hc2sucHJvdG90eXBlLm1hc2tzQ2FjaGVbbWFza2RlZktleV0pKSk6bWFza3NldERlZmluaXRpb249X2lucHV0bWFzay5kZWZhdWx0LmV4dGVuZCghMCx7fSxJbnB1dG1hc2sucHJvdG90eXBlLm1hc2tzQ2FjaGVbbWFza2RlZktleV0pLG1hc2tzZXREZWZpbml0aW9ufWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdHMubWFzayYmKG9wdHMubWFzaz1vcHRzLm1hc2sob3B0cykpLEFycmF5LmlzQXJyYXkob3B0cy5tYXNrKSl7aWYoMTxvcHRzLm1hc2subGVuZ3RoKXtudWxsPT09b3B0cy5rZWVwU3RhdGljJiYob3B0cy5rZWVwU3RhdGljPSEwKTt2YXIgYWx0TWFzaz1vcHRzLmdyb3VwbWFya2VyWzBdO3JldHVybihvcHRzLmlzUlRMP29wdHMubWFzay5yZXZlcnNlKCk6b3B0cy5tYXNrKS5mb3JFYWNoKGZ1bmN0aW9uKG1zayl7MTxhbHRNYXNrLmxlbmd0aCYmKGFsdE1hc2srPW9wdHMuZ3JvdXBtYXJrZXJbMV0rb3B0cy5hbHRlcm5hdG9ybWFya2VyK29wdHMuZ3JvdXBtYXJrZXJbMF0pLHZvaWQgMCE9PW1zay5tYXNrJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBtc2subWFzaz9hbHRNYXNrKz1tc2subWFzazphbHRNYXNrKz1tc2t9KSxhbHRNYXNrKz1vcHRzLmdyb3VwbWFya2VyWzFdLGdlbmVyYXRlTWFzayhhbHRNYXNrLG9wdHMubWFzayxvcHRzKX1vcHRzLm1hc2s9b3B0cy5tYXNrLnBvcCgpfXJldHVybiBudWxsPT09b3B0cy5rZWVwU3RhdGljJiYob3B0cy5rZWVwU3RhdGljPSExKSxtcz1vcHRzLm1hc2smJnZvaWQgMCE9PW9wdHMubWFzay5tYXNrJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvcHRzLm1hc2subWFzaz9nZW5lcmF0ZU1hc2sob3B0cy5tYXNrLm1hc2ssb3B0cy5tYXNrLG9wdHMpOmdlbmVyYXRlTWFzayhvcHRzLm1hc2ssb3B0cy5tYXNrLG9wdHMpLG1zfWZ1bmN0aW9uIGFuYWx5c2VNYXNrKG1hc2sscmVnZXhNYXNrLG9wdHMpe3ZhciB0b2tlbml6ZXI9Lyg/Ols/KitdfFxce1swLTkrKl0rKD86LFswLTkrKl0qKT8oPzpcXHxbMC05KypdKik/XFx9KXxbXi4/KiteJHtbXSgpfFxcXFxdK3wuL2cscmVnZXhUb2tlbml6ZXI9L1xcW1xcXj9dPyg/OlteXFxcXFxcXV0rfFxcXFxbXFxTXFxzXT8pKl0/fFxcXFwoPzowKD86WzAtM11bMC03XXswLDJ9fFs0LTddWzAtN10/KT98WzEtOV1bMC05XSp8eFswLTlBLUZhLWZdezJ9fHVbMC05QS1GYS1mXXs0fXxjW0EtWmEtel18W1xcU1xcc10/KXxcXCgoPzpcXD9bOj0hXT8pP3woPzpbPyorXXxcXHtbMC05XSsoPzosWzAtOV0qKT9cXH0pXFw/P3xbXi4/KiteJHtbKCl8XFxcXF0rfC4vZyxlc2NhcGVkPSExLGN1cnJlbnRUb2tlbj1uZXcgTWFza1Rva2VuLG1hdGNoLG0sb3BlbmVuaW5ncz1bXSxtYXNrVG9rZW5zPVtdLG9wZW5pbmdUb2tlbixjdXJyZW50T3BlbmluZ1Rva2VuLGFsdGVybmF0b3IsbGFzdE1hdGNoLGNsb3NlUmVnZXhHcm91cD0hMTtmdW5jdGlvbiBNYXNrVG9rZW4oaXNHcm91cCxpc09wdGlvbmFsLGlzUXVhbnRpZmllcixpc0FsdGVybmF0b3Ipe3RoaXMubWF0Y2hlcz1bXSx0aGlzLm9wZW5Hcm91cD1pc0dyb3VwfHwhMSx0aGlzLmFsdGVybmF0b3JHcm91cD0hMSx0aGlzLmlzR3JvdXA9aXNHcm91cHx8ITEsdGhpcy5pc09wdGlvbmFsPWlzT3B0aW9uYWx8fCExLHRoaXMuaXNRdWFudGlmaWVyPWlzUXVhbnRpZmllcnx8ITEsdGhpcy5pc0FsdGVybmF0b3I9aXNBbHRlcm5hdG9yfHwhMSx0aGlzLnF1YW50aWZpZXI9e21pbjoxLG1heDoxfX1mdW5jdGlvbiBpbnNlcnRUZXN0RGVmaW5pdGlvbihtdG9rZW4sZWxlbWVudCxwb3NpdGlvbil7cG9zaXRpb249dm9pZCAwIT09cG9zaXRpb24/cG9zaXRpb246bXRva2VuLm1hdGNoZXMubGVuZ3RoO3ZhciBwcmV2TWF0Y2g9bXRva2VuLm1hdGNoZXNbcG9zaXRpb24tMV07aWYocmVnZXhNYXNrKTA9PT1lbGVtZW50LmluZGV4T2YoXCJbXCIpfHxlc2NhcGVkJiYvXFxcXGR8XFxcXHN8XFxcXHddL2kudGVzdChlbGVtZW50KXx8XCIuXCI9PT1lbGVtZW50P210b2tlbi5tYXRjaGVzLnNwbGljZShwb3NpdGlvbisrLDAse2ZuOm5ldyBSZWdFeHAoZWxlbWVudCxvcHRzLmNhc2luZz9cImlcIjpcIlwiKSxzdGF0aWM6ITEsb3B0aW9uYWxpdHk6ITEsbmV3QmxvY2tNYXJrZXI6dm9pZCAwPT09cHJldk1hdGNoP1wibWFzdGVyXCI6cHJldk1hdGNoLmRlZiE9PWVsZW1lbnQsY2FzaW5nOm51bGwsZGVmOmVsZW1lbnQscGxhY2Vob2xkZXI6dm9pZCAwLG5hdGl2ZURlZjplbGVtZW50fSk6KGVzY2FwZWQmJihlbGVtZW50PWVsZW1lbnRbZWxlbWVudC5sZW5ndGgtMV0pLGVsZW1lbnQuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihsbW50LG5keCl7cHJldk1hdGNoPW10b2tlbi5tYXRjaGVzW3Bvc2l0aW9uLTFdLG10b2tlbi5tYXRjaGVzLnNwbGljZShwb3NpdGlvbisrLDAse2ZuOi9bYS16XS9pLnRlc3Qob3B0cy5zdGF0aWNEZWZpbml0aW9uU3ltYm9sfHxsbW50KT9uZXcgUmVnRXhwKFwiW1wiKyhvcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2x8fGxtbnQpK1wiXVwiLG9wdHMuY2FzaW5nP1wiaVwiOlwiXCIpOm51bGwsc3RhdGljOiEwLG9wdGlvbmFsaXR5OiExLG5ld0Jsb2NrTWFya2VyOnZvaWQgMD09PXByZXZNYXRjaD9cIm1hc3RlclwiOnByZXZNYXRjaC5kZWYhPT1sbW50JiYhMCE9PXByZXZNYXRjaC5zdGF0aWMsY2FzaW5nOm51bGwsZGVmOm9wdHMuc3RhdGljRGVmaW5pdGlvblN5bWJvbHx8bG1udCxwbGFjZWhvbGRlcjp2b2lkIDAhPT1vcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2w/bG1udDp2b2lkIDAsbmF0aXZlRGVmOihlc2NhcGVkP1wiJ1wiOlwiXCIpK2xtbnR9KX0pKSxlc2NhcGVkPSExO2Vsc2V7dmFyIG1hc2tkZWY9b3B0cy5kZWZpbml0aW9ucyYmb3B0cy5kZWZpbml0aW9uc1tlbGVtZW50XXx8b3B0cy51c2VQcm90b3R5cGVEZWZpbml0aW9ucyYmSW5wdXRtYXNrLnByb3RvdHlwZS5kZWZpbml0aW9uc1tlbGVtZW50XTttYXNrZGVmJiYhZXNjYXBlZD9tdG9rZW4ubWF0Y2hlcy5zcGxpY2UocG9zaXRpb24rKywwLHtmbjptYXNrZGVmLnZhbGlkYXRvcj9cInN0cmluZ1wiPT10eXBlb2YgbWFza2RlZi52YWxpZGF0b3I/bmV3IFJlZ0V4cChtYXNrZGVmLnZhbGlkYXRvcixvcHRzLmNhc2luZz9cImlcIjpcIlwiKTpuZXcgZnVuY3Rpb24oKXt0aGlzLnRlc3Q9bWFza2RlZi52YWxpZGF0b3J9Om5ldyBSZWdFeHAoXCIuXCIpLHN0YXRpYzptYXNrZGVmLnN0YXRpY3x8ITEsb3B0aW9uYWxpdHk6ITEsbmV3QmxvY2tNYXJrZXI6dm9pZCAwPT09cHJldk1hdGNoP1wibWFzdGVyXCI6cHJldk1hdGNoLmRlZiE9PShtYXNrZGVmLmRlZmluaXRpb25TeW1ib2x8fGVsZW1lbnQpLGNhc2luZzptYXNrZGVmLmNhc2luZyxkZWY6bWFza2RlZi5kZWZpbml0aW9uU3ltYm9sfHxlbGVtZW50LHBsYWNlaG9sZGVyOm1hc2tkZWYucGxhY2Vob2xkZXIsbmF0aXZlRGVmOmVsZW1lbnQsZ2VuZXJhdGVkOm1hc2tkZWYuZ2VuZXJhdGVkfSk6KG10b2tlbi5tYXRjaGVzLnNwbGljZShwb3NpdGlvbisrLDAse2ZuOi9bYS16XS9pLnRlc3Qob3B0cy5zdGF0aWNEZWZpbml0aW9uU3ltYm9sfHxlbGVtZW50KT9uZXcgUmVnRXhwKFwiW1wiKyhvcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2x8fGVsZW1lbnQpK1wiXVwiLG9wdHMuY2FzaW5nP1wiaVwiOlwiXCIpOm51bGwsc3RhdGljOiEwLG9wdGlvbmFsaXR5OiExLG5ld0Jsb2NrTWFya2VyOnZvaWQgMD09PXByZXZNYXRjaD9cIm1hc3RlclwiOnByZXZNYXRjaC5kZWYhPT1lbGVtZW50JiYhMCE9PXByZXZNYXRjaC5zdGF0aWMsY2FzaW5nOm51bGwsZGVmOm9wdHMuc3RhdGljRGVmaW5pdGlvblN5bWJvbHx8ZWxlbWVudCxwbGFjZWhvbGRlcjp2b2lkIDAhPT1vcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2w/ZWxlbWVudDp2b2lkIDAsbmF0aXZlRGVmOihlc2NhcGVkP1wiJ1wiOlwiXCIpK2VsZW1lbnR9KSxlc2NhcGVkPSExKX19ZnVuY3Rpb24gdmVyaWZ5R3JvdXBNYXJrZXIobWFza1Rva2VuKXttYXNrVG9rZW4mJm1hc2tUb2tlbi5tYXRjaGVzJiZtYXNrVG9rZW4ubWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uKHRva2VuLG5keCl7dmFyIG5leHRUb2tlbj1tYXNrVG9rZW4ubWF0Y2hlc1tuZHgrMV07KHZvaWQgMD09PW5leHRUb2tlbnx8dm9pZCAwPT09bmV4dFRva2VuLm1hdGNoZXN8fCExPT09bmV4dFRva2VuLmlzUXVhbnRpZmllcikmJnRva2VuJiZ0b2tlbi5pc0dyb3VwJiYodG9rZW4uaXNHcm91cD0hMSxyZWdleE1hc2t8fChpbnNlcnRUZXN0RGVmaW5pdGlvbih0b2tlbixvcHRzLmdyb3VwbWFya2VyWzBdLDApLCEwIT09dG9rZW4ub3Blbkdyb3VwJiZpbnNlcnRUZXN0RGVmaW5pdGlvbih0b2tlbixvcHRzLmdyb3VwbWFya2VyWzFdKSkpLHZlcmlmeUdyb3VwTWFya2VyKHRva2VuKX0pfWZ1bmN0aW9uIGRlZmF1bHRDYXNlKCl7aWYoMDxvcGVuZW5pbmdzLmxlbmd0aCl7aWYoY3VycmVudE9wZW5pbmdUb2tlbj1vcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoLTFdLGluc2VydFRlc3REZWZpbml0aW9uKGN1cnJlbnRPcGVuaW5nVG9rZW4sbSksY3VycmVudE9wZW5pbmdUb2tlbi5pc0FsdGVybmF0b3Ipe2FsdGVybmF0b3I9b3BlbmVuaW5ncy5wb3AoKTtmb3IodmFyIG1uZHg9MDttbmR4PGFsdGVybmF0b3IubWF0Y2hlcy5sZW5ndGg7bW5keCsrKWFsdGVybmF0b3IubWF0Y2hlc1ttbmR4XS5pc0dyb3VwJiYoYWx0ZXJuYXRvci5tYXRjaGVzW21uZHhdLmlzR3JvdXA9ITEpOzA8b3BlbmVuaW5ncy5sZW5ndGg/KGN1cnJlbnRPcGVuaW5nVG9rZW49b3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aC0xXSxjdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXMucHVzaChhbHRlcm5hdG9yKSk6Y3VycmVudFRva2VuLm1hdGNoZXMucHVzaChhbHRlcm5hdG9yKX19ZWxzZSBpbnNlcnRUZXN0RGVmaW5pdGlvbihjdXJyZW50VG9rZW4sbSl9ZnVuY3Rpb24gcmV2ZXJzZVRva2VucyhtYXNrVG9rZW4pe2Z1bmN0aW9uIHJldmVyc2VTdGF0aWMoc3Qpe3JldHVybiBzdD09PW9wdHMub3B0aW9uYWxtYXJrZXJbMF0/c3Q9b3B0cy5vcHRpb25hbG1hcmtlclsxXTpzdD09PW9wdHMub3B0aW9uYWxtYXJrZXJbMV0/c3Q9b3B0cy5vcHRpb25hbG1hcmtlclswXTpzdD09PW9wdHMuZ3JvdXBtYXJrZXJbMF0/c3Q9b3B0cy5ncm91cG1hcmtlclsxXTpzdD09PW9wdHMuZ3JvdXBtYXJrZXJbMV0mJihzdD1vcHRzLmdyb3VwbWFya2VyWzBdKSxzdH1mb3IodmFyIG1hdGNoIGluIG1hc2tUb2tlbi5tYXRjaGVzPW1hc2tUb2tlbi5tYXRjaGVzLnJldmVyc2UoKSxtYXNrVG9rZW4ubWF0Y2hlcylpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobWFza1Rva2VuLm1hdGNoZXMsbWF0Y2gpKXt2YXIgaW50TWF0Y2g9cGFyc2VJbnQobWF0Y2gpO2lmKG1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXS5pc1F1YW50aWZpZXImJm1hc2tUb2tlbi5tYXRjaGVzW2ludE1hdGNoKzFdJiZtYXNrVG9rZW4ubWF0Y2hlc1tpbnRNYXRjaCsxXS5pc0dyb3VwKXt2YXIgcXQ9bWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdO21hc2tUb2tlbi5tYXRjaGVzLnNwbGljZShtYXRjaCwxKSxtYXNrVG9rZW4ubWF0Y2hlcy5zcGxpY2UoaW50TWF0Y2grMSwwLHF0KX12b2lkIDAhPT1tYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0ubWF0Y2hlcz9tYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF09cmV2ZXJzZVRva2VucyhtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0pOm1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXT1yZXZlcnNlU3RhdGljKG1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXSl9cmV0dXJuIG1hc2tUb2tlbn1mdW5jdGlvbiBncm91cGlmeShtYXRjaGVzKXt2YXIgZ3JvdXBUb2tlbj1uZXcgTWFza1Rva2VuKCEwKTtyZXR1cm4gZ3JvdXBUb2tlbi5vcGVuR3JvdXA9ITEsZ3JvdXBUb2tlbi5tYXRjaGVzPW1hdGNoZXMsZ3JvdXBUb2tlbn1mdW5jdGlvbiBjbG9zZUdyb3VwKCl7aWYob3BlbmluZ1Rva2VuPW9wZW5lbmluZ3MucG9wKCksb3BlbmluZ1Rva2VuLm9wZW5Hcm91cD0hMSx2b2lkIDAhPT1vcGVuaW5nVG9rZW4paWYoMDxvcGVuZW5pbmdzLmxlbmd0aCl7aWYoY3VycmVudE9wZW5pbmdUb2tlbj1vcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoLTFdLGN1cnJlbnRPcGVuaW5nVG9rZW4ubWF0Y2hlcy5wdXNoKG9wZW5pbmdUb2tlbiksY3VycmVudE9wZW5pbmdUb2tlbi5pc0FsdGVybmF0b3Ipe2FsdGVybmF0b3I9b3BlbmVuaW5ncy5wb3AoKTtmb3IodmFyIG1uZHg9MDttbmR4PGFsdGVybmF0b3IubWF0Y2hlcy5sZW5ndGg7bW5keCsrKWFsdGVybmF0b3IubWF0Y2hlc1ttbmR4XS5pc0dyb3VwPSExLGFsdGVybmF0b3IubWF0Y2hlc1ttbmR4XS5hbHRlcm5hdG9yR3JvdXA9ITE7MDxvcGVuZW5pbmdzLmxlbmd0aD8oY3VycmVudE9wZW5pbmdUb2tlbj1vcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoLTFdLGN1cnJlbnRPcGVuaW5nVG9rZW4ubWF0Y2hlcy5wdXNoKGFsdGVybmF0b3IpKTpjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKGFsdGVybmF0b3IpfX1lbHNlIGN1cnJlbnRUb2tlbi5tYXRjaGVzLnB1c2gob3BlbmluZ1Rva2VuKTtlbHNlIGRlZmF1bHRDYXNlKCl9ZnVuY3Rpb24gZ3JvdXBRdWFudGlmaWVyKG1hdGNoZXMpe3ZhciBsYXN0TWF0Y2g9bWF0Y2hlcy5wb3AoKTtyZXR1cm4gbGFzdE1hdGNoLmlzUXVhbnRpZmllciYmKGxhc3RNYXRjaD1ncm91cGlmeShbbWF0Y2hlcy5wb3AoKSxsYXN0TWF0Y2hdKSksbGFzdE1hdGNofWZvcihyZWdleE1hc2smJihvcHRzLm9wdGlvbmFsbWFya2VyWzBdPXZvaWQgMCxvcHRzLm9wdGlvbmFsbWFya2VyWzFdPXZvaWQgMCk7bWF0Y2g9cmVnZXhNYXNrP3JlZ2V4VG9rZW5pemVyLmV4ZWMobWFzayk6dG9rZW5pemVyLmV4ZWMobWFzayk7KXtpZihtPW1hdGNoWzBdLHJlZ2V4TWFzaylzd2l0Y2gobS5jaGFyQXQoMCkpe2Nhc2VcIj9cIjptPVwiezAsMX1cIjticmVhaztjYXNlXCIrXCI6Y2FzZVwiKlwiOm09XCJ7XCIrbStcIn1cIjticmVhaztjYXNlXCJ8XCI6aWYoMD09PW9wZW5lbmluZ3MubGVuZ3RoKXt2YXIgYWx0UmVnZXhHcm91cD1ncm91cGlmeShjdXJyZW50VG9rZW4ubWF0Y2hlcyk7YWx0UmVnZXhHcm91cC5vcGVuR3JvdXA9ITAsb3BlbmVuaW5ncy5wdXNoKGFsdFJlZ2V4R3JvdXApLGN1cnJlbnRUb2tlbi5tYXRjaGVzPVtdLGNsb3NlUmVnZXhHcm91cD0hMH1icmVha31pZihlc2NhcGVkKWRlZmF1bHRDYXNlKCk7ZWxzZSBzd2l0Y2gobS5jaGFyQXQoMCkpe2Nhc2VcIiRcIjpjYXNlXCJeXCI6cmVnZXhNYXNrfHxkZWZhdWx0Q2FzZSgpO2JyZWFrO2Nhc2VcIig/PVwiOmJyZWFrO2Nhc2VcIig/IVwiOmJyZWFrO2Nhc2VcIig/PD1cIjpicmVhaztjYXNlXCIoPzwhXCI6YnJlYWs7Y2FzZSBvcHRzLmVzY2FwZUNoYXI6ZXNjYXBlZD0hMCxyZWdleE1hc2smJmRlZmF1bHRDYXNlKCk7YnJlYWs7Y2FzZSBvcHRzLm9wdGlvbmFsbWFya2VyWzFdOmNhc2Ugb3B0cy5ncm91cG1hcmtlclsxXTpjbG9zZUdyb3VwKCk7YnJlYWs7Y2FzZSBvcHRzLm9wdGlvbmFsbWFya2VyWzBdOm9wZW5lbmluZ3MucHVzaChuZXcgTWFza1Rva2VuKCExLCEwKSk7YnJlYWs7Y2FzZSBvcHRzLmdyb3VwbWFya2VyWzBdOm9wZW5lbmluZ3MucHVzaChuZXcgTWFza1Rva2VuKCEwKSk7YnJlYWs7Y2FzZSBvcHRzLnF1YW50aWZpZXJtYXJrZXJbMF06dmFyIHF1YW50aWZpZXI9bmV3IE1hc2tUb2tlbighMSwhMSwhMCk7bT1tLnJlcGxhY2UoL1t7fV0vZyxcIlwiKTt2YXIgbXFqPW0uc3BsaXQoXCJ8XCIpLG1xPW1xalswXS5zcGxpdChcIixcIiksbXEwPWlzTmFOKG1xWzBdKT9tcVswXTpwYXJzZUludChtcVswXSksbXExPTE9PT1tcS5sZW5ndGg/bXEwOmlzTmFOKG1xWzFdKT9tcVsxXTpwYXJzZUludChtcVsxXSk7XCIqXCIhPT1tcTAmJlwiK1wiIT09bXEwfHwobXEwPVwiKlwiPT09bXExPzA6MSkscXVhbnRpZmllci5xdWFudGlmaWVyPXttaW46bXEwLG1heDptcTEsaml0Om1xalsxXX07dmFyIG1hdGNoZXM9MDxvcGVuZW5pbmdzLmxlbmd0aD9vcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoLTFdLm1hdGNoZXM6Y3VycmVudFRva2VuLm1hdGNoZXM7aWYobWF0Y2g9bWF0Y2hlcy5wb3AoKSxtYXRjaC5pc0FsdGVybmF0b3Ipe21hdGNoZXMucHVzaChtYXRjaCksbWF0Y2hlcz1tYXRjaC5tYXRjaGVzO3ZhciBncm91cFRva2VuPW5ldyBNYXNrVG9rZW4oITApLHRtcE1hdGNoPW1hdGNoZXMucG9wKCk7bWF0Y2hlcy5wdXNoKGdyb3VwVG9rZW4pLG1hdGNoZXM9Z3JvdXBUb2tlbi5tYXRjaGVzLG1hdGNoPXRtcE1hdGNofW1hdGNoLmlzR3JvdXB8fChtYXRjaD1ncm91cGlmeShbbWF0Y2hdKSksbWF0Y2hlcy5wdXNoKG1hdGNoKSxtYXRjaGVzLnB1c2gocXVhbnRpZmllcik7YnJlYWs7Y2FzZSBvcHRzLmFsdGVybmF0b3JtYXJrZXI6aWYoMDxvcGVuZW5pbmdzLmxlbmd0aCl7Y3VycmVudE9wZW5pbmdUb2tlbj1vcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoLTFdO3ZhciBzdWJUb2tlbj1jdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXNbY3VycmVudE9wZW5pbmdUb2tlbi5tYXRjaGVzLmxlbmd0aC0xXTtsYXN0TWF0Y2g9Y3VycmVudE9wZW5pbmdUb2tlbi5vcGVuR3JvdXAmJih2b2lkIDA9PT1zdWJUb2tlbi5tYXRjaGVzfHwhMT09PXN1YlRva2VuLmlzR3JvdXAmJiExPT09c3ViVG9rZW4uaXNBbHRlcm5hdG9yKT9vcGVuZW5pbmdzLnBvcCgpOmdyb3VwUXVhbnRpZmllcihjdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXMpfWVsc2UgbGFzdE1hdGNoPWdyb3VwUXVhbnRpZmllcihjdXJyZW50VG9rZW4ubWF0Y2hlcyk7aWYobGFzdE1hdGNoLmlzQWx0ZXJuYXRvcilvcGVuZW5pbmdzLnB1c2gobGFzdE1hdGNoKTtlbHNlIGlmKGxhc3RNYXRjaC5hbHRlcm5hdG9yR3JvdXA/KGFsdGVybmF0b3I9b3BlbmVuaW5ncy5wb3AoKSxsYXN0TWF0Y2guYWx0ZXJuYXRvckdyb3VwPSExKTphbHRlcm5hdG9yPW5ldyBNYXNrVG9rZW4oITEsITEsITEsITApLGFsdGVybmF0b3IubWF0Y2hlcy5wdXNoKGxhc3RNYXRjaCksb3BlbmVuaW5ncy5wdXNoKGFsdGVybmF0b3IpLGxhc3RNYXRjaC5vcGVuR3JvdXApe2xhc3RNYXRjaC5vcGVuR3JvdXA9ITE7dmFyIGFsdGVybmF0b3JHcm91cD1uZXcgTWFza1Rva2VuKCEwKTthbHRlcm5hdG9yR3JvdXAuYWx0ZXJuYXRvckdyb3VwPSEwLG9wZW5lbmluZ3MucHVzaChhbHRlcm5hdG9yR3JvdXApfWJyZWFrO2RlZmF1bHQ6ZGVmYXVsdENhc2UoKX19Zm9yKGNsb3NlUmVnZXhHcm91cCYmY2xvc2VHcm91cCgpOzA8b3BlbmVuaW5ncy5sZW5ndGg7KW9wZW5pbmdUb2tlbj1vcGVuZW5pbmdzLnBvcCgpLGN1cnJlbnRUb2tlbi5tYXRjaGVzLnB1c2gob3BlbmluZ1Rva2VuKTtyZXR1cm4gMDxjdXJyZW50VG9rZW4ubWF0Y2hlcy5sZW5ndGgmJih2ZXJpZnlHcm91cE1hcmtlcihjdXJyZW50VG9rZW4pLG1hc2tUb2tlbnMucHVzaChjdXJyZW50VG9rZW4pKSwob3B0cy5udW1lcmljSW5wdXR8fG9wdHMuaXNSVEwpJiZyZXZlcnNlVG9rZW5zKG1hc2tUb2tlbnNbMF0pLG1hc2tUb2tlbnN9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfZGVmYXVsdD17OTp7dmFsaWRhdG9yOlwiWzAtOVxcdWZmMTAtXFx1ZmYxOV1cIixkZWZpbml0aW9uU3ltYm9sOlwiKlwifSxhOnt2YWxpZGF0b3I6XCJbQS1aYS16XFx1MDQxMC1cXHUwNDRmXFx1MDQwMVxcdTA0NTFcXHhjMC1cXHhmZlxceGI1XVwiLGRlZmluaXRpb25TeW1ib2w6XCIqXCJ9LFwiKlwiOnt2YWxpZGF0b3I6XCJbMC05XFx1ZmYxMC1cXHVmZjE5QS1aYS16XFx1MDQxMC1cXHUwNDRmXFx1MDQwMVxcdTA0NTFcXHhjMC1cXHhmZlxceGI1XVwifX07ZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfZGVmYXVsdD17X21heFRlc3RQb3M6NTAwLHBsYWNlaG9sZGVyOlwiX1wiLG9wdGlvbmFsbWFya2VyOltcIltcIixcIl1cIl0scXVhbnRpZmllcm1hcmtlcjpbXCJ7XCIsXCJ9XCJdLGdyb3VwbWFya2VyOltcIihcIixcIilcIl0sYWx0ZXJuYXRvcm1hcmtlcjpcInxcIixlc2NhcGVDaGFyOlwiXFxcXFwiLG1hc2s6bnVsbCxyZWdleDpudWxsLG9uY29tcGxldGU6ZnVuY3Rpb24gb25jb21wbGV0ZSgpe30sb25pbmNvbXBsZXRlOmZ1bmN0aW9uIG9uaW5jb21wbGV0ZSgpe30sb25jbGVhcmVkOmZ1bmN0aW9uIG9uY2xlYXJlZCgpe30scmVwZWF0OjAsZ3JlZWR5OiExLGF1dG9Vbm1hc2s6ITEscmVtb3ZlTWFza09uU3VibWl0OiExLGNsZWFyTWFza09uTG9zdEZvY3VzOiEwLGluc2VydE1vZGU6ITAsaW5zZXJ0TW9kZVZpc3VhbDohMCxjbGVhckluY29tcGxldGU6ITEsYWxpYXM6bnVsbCxvbktleURvd246ZnVuY3Rpb24gb25LZXlEb3duKCl7fSxvbkJlZm9yZU1hc2s6bnVsbCxvbkJlZm9yZVBhc3RlOmZ1bmN0aW9uIG9uQmVmb3JlUGFzdGUocGFzdGVkVmFsdWUsb3B0cyl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0cy5vbkJlZm9yZU1hc2s/b3B0cy5vbkJlZm9yZU1hc2suY2FsbCh0aGlzLHBhc3RlZFZhbHVlLG9wdHMpOnBhc3RlZFZhbHVlfSxvbkJlZm9yZVdyaXRlOm51bGwsb25Vbk1hc2s6bnVsbCxzaG93TWFza09uRm9jdXM6ITAsc2hvd01hc2tPbkhvdmVyOiEwLG9uS2V5VmFsaWRhdGlvbjpmdW5jdGlvbiBvbktleVZhbGlkYXRpb24oKXt9LHNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI6XCIgXCIsbnVtZXJpY0lucHV0OiExLHJpZ2h0QWxpZ246ITEsdW5kb09uRXNjYXBlOiEwLHJhZGl4UG9pbnQ6XCJcIixfcmFkaXhEYW5jZTohMSxncm91cFNlcGFyYXRvcjpcIlwiLGtlZXBTdGF0aWM6bnVsbCxwb3NpdGlvbkNhcmV0T25UYWI6ITAsdGFiVGhyb3VnaDohMSxzdXBwb3J0c0lucHV0VHlwZTpbXCJ0ZXh0XCIsXCJ0ZWxcIixcInVybFwiLFwicGFzc3dvcmRcIixcInNlYXJjaFwiXSxpZ25vcmFibGVzOls4LDksMTksMjcsMzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDUsNDYsOTMsMTEyLDExMywxMTQsMTE1LDExNiwxMTcsMTE4LDExOSwxMjAsMTIxLDEyMiwxMjMsMCwyMjldLGlzQ29tcGxldGU6bnVsbCxwcmVWYWxpZGF0aW9uOm51bGwscG9zdFZhbGlkYXRpb246bnVsbCxzdGF0aWNEZWZpbml0aW9uU3ltYm9sOnZvaWQgMCxqaXRNYXNraW5nOiExLG51bGxhYmxlOiEwLGlucHV0RXZlbnRPbmx5OiExLG5vVmFsdWVQYXRjaGluZzohMSxwb3NpdGlvbkNhcmV0T25DbGljazpcImx2cFwiLGNhc2luZzpudWxsLGlucHV0bW9kZTpcInRleHRcIixpbXBvcnREYXRhQXR0cmlidXRlczohMCxzaGlmdFBvc2l0aW9uczohMCx1c2VQcm90b3R5cGVEZWZpbml0aW9uczohMH07ZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjt2YXIgX2lucHV0bWFzaz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMikpLF9rZXljb2RlPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygwKSksX2VzY2FwZVJlZ2V4PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygxMykpLF9wb3NpdGlvbmluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiB0eXBlb2Ygb2JqfTpmdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygb2JqfSxfdHlwZW9mKG9iail9ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fXZhciAkPV9pbnB1dG1hc2suZGVmYXVsdC5kZXBlbmRlbmN5TGliLGN1cnJlbnRZZWFyPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSxmb3JtYXRDb2RlPXtkOltcIlsxLTldfFsxMl1bMC05XXwzWzAxXVwiLERhdGUucHJvdG90eXBlLnNldERhdGUsXCJkYXlcIixEYXRlLnByb3RvdHlwZS5nZXREYXRlXSxkZDpbXCIwWzEtOV18WzEyXVswLTldfDNbMDFdXCIsRGF0ZS5wcm90b3R5cGUuc2V0RGF0ZSxcImRheVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhZChEYXRlLnByb3RvdHlwZS5nZXREYXRlLmNhbGwodGhpcyksMil9XSxkZGQ6W1wiXCJdLGRkZGQ6W1wiXCJdLG06W1wiWzEtOV18MVswMTJdXCIsRGF0ZS5wcm90b3R5cGUuc2V0TW9udGgsXCJtb250aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIERhdGUucHJvdG90eXBlLmdldE1vbnRoLmNhbGwodGhpcykrMX1dLG1tOltcIjBbMS05XXwxWzAxMl1cIixEYXRlLnByb3RvdHlwZS5zZXRNb250aCxcIm1vbnRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldE1vbnRoLmNhbGwodGhpcykrMSwyKX1dLG1tbTpbXCJcIl0sbW1tbTpbXCJcIl0seXk6W1wiWzAtOV17Mn1cIixEYXRlLnByb3RvdHlwZS5zZXRGdWxsWWVhcixcInllYXJcIixmdW5jdGlvbigpe3JldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0RnVsbFllYXIuY2FsbCh0aGlzKSwyKX1dLHl5eXk6W1wiWzAtOV17NH1cIixEYXRlLnByb3RvdHlwZS5zZXRGdWxsWWVhcixcInllYXJcIixmdW5jdGlvbigpe3JldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0RnVsbFllYXIuY2FsbCh0aGlzKSw0KX1dLGg6W1wiWzEtOV18MVswLTJdXCIsRGF0ZS5wcm90b3R5cGUuc2V0SG91cnMsXCJob3Vyc1wiLERhdGUucHJvdG90eXBlLmdldEhvdXJzXSxoaDpbXCIwWzEtOV18MVswLTJdXCIsRGF0ZS5wcm90b3R5cGUuc2V0SG91cnMsXCJob3Vyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhZChEYXRlLnByb3RvdHlwZS5nZXRIb3Vycy5jYWxsKHRoaXMpLDIpfV0saHg6W2Z1bmN0aW9uKHgpe3JldHVyblwiWzAtOV17XCIuY29uY2F0KHgsXCJ9XCIpfSxEYXRlLnByb3RvdHlwZS5zZXRIb3VycyxcImhvdXJzXCIsZnVuY3Rpb24oeCl7cmV0dXJuIERhdGUucHJvdG90eXBlLmdldEhvdXJzfV0sSDpbXCIxP1swLTldfDJbMC0zXVwiLERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixEYXRlLnByb3RvdHlwZS5nZXRIb3Vyc10sSEg6W1wiMFswLTldfDFbMC05XXwyWzAtM11cIixEYXRlLnByb3RvdHlwZS5zZXRIb3VycyxcImhvdXJzXCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldEhvdXJzLmNhbGwodGhpcyksMil9XSxIeDpbZnVuY3Rpb24oeCl7cmV0dXJuXCJbMC05XXtcIi5jb25jYXQoeCxcIn1cIil9LERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixmdW5jdGlvbih4KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldEhvdXJzLmNhbGwodGhpcykseCl9fV0sTTpbXCJbMS01XT9bMC05XVwiLERhdGUucHJvdG90eXBlLnNldE1pbnV0ZXMsXCJtaW51dGVzXCIsRGF0ZS5wcm90b3R5cGUuZ2V0TWludXRlc10sTU06W1wiMFswLTldfDFbMC05XXwyWzAtOV18M1swLTldfDRbMC05XXw1WzAtOV1cIixEYXRlLnByb3RvdHlwZS5zZXRNaW51dGVzLFwibWludXRlc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhZChEYXRlLnByb3RvdHlwZS5nZXRNaW51dGVzLmNhbGwodGhpcyksMil9XSxzOltcIlsxLTVdP1swLTldXCIsRGF0ZS5wcm90b3R5cGUuc2V0U2Vjb25kcyxcInNlY29uZHNcIixEYXRlLnByb3RvdHlwZS5nZXRTZWNvbmRzXSxzczpbXCIwWzAtOV18MVswLTldfDJbMC05XXwzWzAtOV18NFswLTldfDVbMC05XVwiLERhdGUucHJvdG90eXBlLnNldFNlY29uZHMsXCJzZWNvbmRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldFNlY29uZHMuY2FsbCh0aGlzKSwyKX1dLGw6W1wiWzAtOV17M31cIixEYXRlLnByb3RvdHlwZS5zZXRNaWxsaXNlY29uZHMsXCJtaWxsaXNlY29uZHNcIixmdW5jdGlvbigpe3JldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0TWlsbGlzZWNvbmRzLmNhbGwodGhpcyksMyl9XSxMOltcIlswLTldezJ9XCIsRGF0ZS5wcm90b3R5cGUuc2V0TWlsbGlzZWNvbmRzLFwibWlsbGlzZWNvbmRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldE1pbGxpc2Vjb25kcy5jYWxsKHRoaXMpLDIpfV0sdDpbXCJbYXBdXCJdLHR0OltcIlthcF1tXCJdLFQ6W1wiW0FQXVwiXSxUVDpbXCJbQVBdTVwiXSxaOltcIlwiXSxvOltcIlwiXSxTOltcIlwiXX0sZm9ybWF0QWxpYXM9e2lzb0RhdGU6XCJ5eXl5LW1tLWRkXCIsaXNvVGltZTpcIkhIOk1NOnNzXCIsaXNvRGF0ZVRpbWU6XCJ5eXl5LW1tLWRkJ1QnSEg6TU06c3NcIixpc29VdGNEYXRlVGltZTpcIlVUQzp5eXl5LW1tLWRkJ1QnSEg6TU06c3MnWidcIn07ZnVuY3Rpb24gZm9ybWF0Y29kZShtYXRjaCl7dmFyIGR5bk1hdGNoZXM9bmV3IFJlZ0V4cChcIlxcXFxkKyRcIikuZXhlYyhtYXRjaFswXSk7aWYoZHluTWF0Y2hlcyYmdm9pZCAwIT09ZHluTWF0Y2hlc1swXSl7dmFyIGZjb2RlPWZvcm1hdENvZGVbbWF0Y2hbMF1bMF0rXCJ4XCJdLnNsaWNlKFwiXCIpO3JldHVybiBmY29kZVswXT1mY29kZVswXShkeW5NYXRjaGVzWzBdKSxmY29kZVszXT1mY29kZVszXShkeW5NYXRjaGVzWzBdKSxmY29kZX1pZihmb3JtYXRDb2RlW21hdGNoWzBdXSlyZXR1cm4gZm9ybWF0Q29kZVttYXRjaFswXV19ZnVuY3Rpb24gZ2V0VG9rZW5pemVyKG9wdHMpe2lmKCFvcHRzLnRva2VuaXplcil7dmFyIHRva2Vucz1bXSxkeW50b2tlbnM9W107Zm9yKHZhciBuZHggaW4gZm9ybWF0Q29kZSlpZigvXFwuKngkLy50ZXN0KG5keCkpe3ZhciBkeW5Ub2tlbj1uZHhbMF0rXCJcXFxcZCtcIjstMT09PWR5bnRva2Vucy5pbmRleE9mKGR5blRva2VuKSYmZHludG9rZW5zLnB1c2goZHluVG9rZW4pfWVsc2UtMT09PXRva2Vucy5pbmRleE9mKG5keFswXSkmJnRva2Vucy5wdXNoKG5keFswXSk7b3B0cy50b2tlbml6ZXI9XCIoXCIrKDA8ZHludG9rZW5zLmxlbmd0aD9keW50b2tlbnMuam9pbihcInxcIikrXCJ8XCI6XCJcIikrdG9rZW5zLmpvaW4oXCIrfFwiKStcIikrP3wuXCIsb3B0cy50b2tlbml6ZXI9bmV3IFJlZ0V4cChvcHRzLnRva2VuaXplcixcImdcIil9cmV0dXJuIG9wdHMudG9rZW5pemVyfWZ1bmN0aW9uIHByZWZpbGxZZWFyKGRhdGVQYXJ0cyxjdXJyZW50UmVzdWx0LG9wdHMpe2lmKGRhdGVQYXJ0cy55ZWFyIT09ZGF0ZVBhcnRzLnJhd3llYXIpe3ZhciBjcnJudHllYXI9Y3VycmVudFllYXIudG9TdHJpbmcoKSxlbnRlcmVkUGFydD1kYXRlUGFydHMucmF3eWVhci5yZXBsYWNlKC9bXjAtOV0vZyxcIlwiKSxjdXJyZW50WWVhclBhcnQ9Y3JybnR5ZWFyLnNsaWNlKDAsZW50ZXJlZFBhcnQubGVuZ3RoKSxjdXJyZW50WWVhck5leHRQYXJ0PWNycm50eWVhci5zbGljZShlbnRlcmVkUGFydC5sZW5ndGgpO2lmKDI9PT1lbnRlcmVkUGFydC5sZW5ndGgmJmVudGVyZWRQYXJ0PT09Y3VycmVudFllYXJQYXJ0KXt2YXIgZW50cnlDdXJyZW50WWVhcj1uZXcgRGF0ZShjdXJyZW50WWVhcixkYXRlUGFydHMubW9udGgtMSxkYXRlUGFydHMuZGF5KTtkYXRlUGFydHMuZGF5PT1lbnRyeUN1cnJlbnRZZWFyLmdldERhdGUoKSYmKCFvcHRzLm1heHx8b3B0cy5tYXguZGF0ZS5nZXRUaW1lKCk+PWVudHJ5Q3VycmVudFllYXIuZ2V0VGltZSgpKSYmKGRhdGVQYXJ0cy5kYXRlLnNldEZ1bGxZZWFyKGN1cnJlbnRZZWFyKSxkYXRlUGFydHMueWVhcj1jcnJudHllYXIsY3VycmVudFJlc3VsdC5pbnNlcnQ9W3twb3M6Y3VycmVudFJlc3VsdC5wb3MrMSxjOmN1cnJlbnRZZWFyTmV4dFBhcnRbMF19LHtwb3M6Y3VycmVudFJlc3VsdC5wb3MrMixjOmN1cnJlbnRZZWFyTmV4dFBhcnRbMV19XSl9fXJldHVybiBjdXJyZW50UmVzdWx0fWZ1bmN0aW9uIGlzVmFsaWREYXRlKGRhdGVQYXJ0cyxjdXJyZW50UmVzdWx0LG9wdHMpe2lmKHZvaWQgMD09PWRhdGVQYXJ0cy5yYXdkYXl8fCFpc0Zpbml0ZShkYXRlUGFydHMucmF3ZGF5KSYmbmV3IERhdGUoZGF0ZVBhcnRzLmRhdGUuZ2V0RnVsbFllYXIoKSxpc0Zpbml0ZShkYXRlUGFydHMucmF3bW9udGgpP2RhdGVQYXJ0cy5tb250aDpkYXRlUGFydHMuZGF0ZS5nZXRNb250aCgpKzEsMCkuZ2V0RGF0ZSgpPj1kYXRlUGFydHMuZGF5fHxcIjI5XCI9PWRhdGVQYXJ0cy5kYXkmJiFpc0Zpbml0ZShkYXRlUGFydHMucmF3eWVhcil8fG5ldyBEYXRlKGRhdGVQYXJ0cy5kYXRlLmdldEZ1bGxZZWFyKCksaXNGaW5pdGUoZGF0ZVBhcnRzLnJhd21vbnRoKT9kYXRlUGFydHMubW9udGg6ZGF0ZVBhcnRzLmRhdGUuZ2V0TW9udGgoKSsxLDApLmdldERhdGUoKT49ZGF0ZVBhcnRzLmRheSlyZXR1cm4gY3VycmVudFJlc3VsdDtpZihcIjI5XCI9PWRhdGVQYXJ0cy5kYXkpe3ZhciB0b2tlbk1hdGNoPWdldFRva2VuTWF0Y2goY3VycmVudFJlc3VsdC5wb3Msb3B0cyk7aWYoXCJ5eXl5XCI9PT10b2tlbk1hdGNoLnRhcmdldE1hdGNoWzBdJiZjdXJyZW50UmVzdWx0LnBvcy10b2tlbk1hdGNoLnRhcmdldE1hdGNoSW5kZXg9PTIpcmV0dXJuIGN1cnJlbnRSZXN1bHQucmVtb3ZlPWN1cnJlbnRSZXN1bHQucG9zKzEsY3VycmVudFJlc3VsdH1lbHNlIGlmKFwiMDJcIj09ZGF0ZVBhcnRzLm1vbnRoJiZcIjMwXCI9PWRhdGVQYXJ0cy5kYXkpcmV0dXJuIGRhdGVQYXJ0cy5kYXk9XCIwM1wiLGRhdGVQYXJ0cy5kYXRlLnNldERhdGUoMyksZGF0ZVBhcnRzLmRhdGUuc2V0TW9udGgoMSksY3VycmVudFJlc3VsdC5pbnNlcnQ9W3twb3M6Y3VycmVudFJlc3VsdC5wb3MsYzpcIjBcIn0se3BvczpjdXJyZW50UmVzdWx0LnBvcysxLGM6Y3VycmVudFJlc3VsdC5jfV0sY3VycmVudFJlc3VsdC5jYXJldD1fcG9zaXRpb25pbmcuc2Vla05leHQuY2FsbCh0aGlzLGN1cnJlbnRSZXN1bHQucG9zKzEpLGN1cnJlbnRSZXN1bHQ7cmV0dXJuITF9ZnVuY3Rpb24gaXNEYXRlSW5SYW5nZShkYXRlUGFydHMscmVzdWx0LG9wdHMsbWFza3NldCxmcm9tQ2hlY2t2YWwpe2lmKCFyZXN1bHQpcmV0dXJuIHJlc3VsdDtpZihvcHRzLm1pbil7aWYoZGF0ZVBhcnRzLnJhd3llYXIpe3ZhciByYXdZZWFyPWRhdGVQYXJ0cy5yYXd5ZWFyLnJlcGxhY2UoL1teMC05XS9nLFwiXCIpLG1pblllYXI9b3B0cy5taW4ueWVhci5zdWJzdHIoMCxyYXdZZWFyLmxlbmd0aCksbWF4WWVhcjtpZihyYXdZZWFyPG1pblllYXIpe3ZhciB0b2tlbk1hdGNoPWdldFRva2VuTWF0Y2gocmVzdWx0LnBvcyxvcHRzKTtpZihyYXdZZWFyPWRhdGVQYXJ0cy5yYXd5ZWFyLnN1YnN0cigwLHJlc3VsdC5wb3MtdG9rZW5NYXRjaC50YXJnZXRNYXRjaEluZGV4KzEpLnJlcGxhY2UoL1teMC05XS9nLFwiMFwiKSxtaW5ZZWFyPW9wdHMubWluLnllYXIuc3Vic3RyKDAscmF3WWVhci5sZW5ndGgpLG1pblllYXI8PXJhd1llYXIpcmV0dXJuIHJlc3VsdC5yZW1vdmU9dG9rZW5NYXRjaC50YXJnZXRNYXRjaEluZGV4K3Jhd1llYXIubGVuZ3RoLHJlc3VsdDtpZihyYXdZZWFyPVwieXl5eVwiPT09dG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXT9kYXRlUGFydHMucmF3eWVhci5zdWJzdHIoMSwxKTpkYXRlUGFydHMucmF3eWVhci5zdWJzdHIoMCwxKSxtaW5ZZWFyPW9wdHMubWluLnllYXIuc3Vic3RyKDIsMSksbWF4WWVhcj1vcHRzLm1heD9vcHRzLm1heC55ZWFyLnN1YnN0cigyLDEpOnJhd1llYXIsMT09PXJhd1llYXIubGVuZ3RoJiZtaW5ZZWFyPD1yYXdZZWFyJiZyYXdZZWFyPD1tYXhZZWFyJiYhMCE9PWZyb21DaGVja3ZhbClyZXR1cm5cInl5eXlcIj09PXRva2VuTWF0Y2gudGFyZ2V0TWF0Y2hbMF0/KHJlc3VsdC5pbnNlcnQ9W3twb3M6cmVzdWx0LnBvcysxLGM6cmF3WWVhcixzdHJpY3Q6ITB9XSxyZXN1bHQuY2FyZXQ9cmVzdWx0LnBvcysyLG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvc10uaW5wdXQ9b3B0cy5taW4ueWVhclsxXSk6KHJlc3VsdC5pbnNlcnQ9W3twb3M6cmVzdWx0LnBvcysxLGM6b3B0cy5taW4ueWVhclsxXSxzdHJpY3Q6ITB9LHtwb3M6cmVzdWx0LnBvcysyLGM6cmF3WWVhcixzdHJpY3Q6ITB9XSxyZXN1bHQuY2FyZXQ9cmVzdWx0LnBvcyszLG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvc10uaW5wdXQ9b3B0cy5taW4ueWVhclswXSkscmVzdWx0O3Jlc3VsdD0hMX19cmVzdWx0JiZkYXRlUGFydHMueWVhciYmZGF0ZVBhcnRzLnllYXI9PT1kYXRlUGFydHMucmF3eWVhciYmb3B0cy5taW4uZGF0ZS5nZXRUaW1lKCk9PW9wdHMubWluLmRhdGUuZ2V0VGltZSgpJiYocmVzdWx0PW9wdHMubWluLmRhdGUuZ2V0VGltZSgpPD1kYXRlUGFydHMuZGF0ZS5nZXRUaW1lKCkpfXJldHVybiByZXN1bHQmJm9wdHMubWF4JiZvcHRzLm1heC5kYXRlLmdldFRpbWUoKT09b3B0cy5tYXguZGF0ZS5nZXRUaW1lKCkmJihyZXN1bHQ9b3B0cy5tYXguZGF0ZS5nZXRUaW1lKCk+PWRhdGVQYXJ0cy5kYXRlLmdldFRpbWUoKSkscmVzdWx0fWZ1bmN0aW9uIHBhcnNlKGZvcm1hdCxkYXRlT2JqVmFsdWUsb3B0cyxyYXcpe3ZhciBtYXNrPVwiXCIsbWF0Y2gsZmNvZGU7Zm9yKGdldFRva2VuaXplcihvcHRzKS5sYXN0SW5kZXg9MDttYXRjaD1nZXRUb2tlbml6ZXIob3B0cykuZXhlYyhmb3JtYXQpOylpZih2b2lkIDA9PT1kYXRlT2JqVmFsdWUpaWYoZmNvZGU9Zm9ybWF0Y29kZShtYXRjaCkpbWFzays9XCIoXCIrZmNvZGVbMF0rXCIpXCI7ZWxzZSBzd2l0Y2gobWF0Y2hbMF0pe2Nhc2VcIltcIjptYXNrKz1cIihcIjticmVhaztjYXNlXCJdXCI6bWFzays9XCIpP1wiO2JyZWFrO2RlZmF1bHQ6bWFzays9KDAsX2VzY2FwZVJlZ2V4LmRlZmF1bHQpKG1hdGNoWzBdKX1lbHNlIGlmKGZjb2RlPWZvcm1hdGNvZGUobWF0Y2gpKWlmKCEwIT09cmF3JiZmY29kZVszXSl7dmFyIGdldEZuPWZjb2RlWzNdO21hc2srPWdldEZuLmNhbGwoZGF0ZU9ialZhbHVlLmRhdGUpfWVsc2UgZmNvZGVbMl0/bWFzays9ZGF0ZU9ialZhbHVlW1wicmF3XCIrZmNvZGVbMl1dOm1hc2srPW1hdGNoWzBdO2Vsc2UgbWFzays9bWF0Y2hbMF07cmV0dXJuIG1hc2t9ZnVuY3Rpb24gcGFkKHZhbCxsZW4pe2Zvcih2YWw9U3RyaW5nKHZhbCksbGVuPWxlbnx8Mjt2YWwubGVuZ3RoPGxlbjspdmFsPVwiMFwiK3ZhbDtyZXR1cm4gdmFsfWZ1bmN0aW9uIGFuYWx5c2VNYXNrKG1hc2tTdHJpbmcsZm9ybWF0LG9wdHMpe3ZhciBkYXRlT2JqPXtkYXRlOm5ldyBEYXRlKDEsMCwxKX0sdGFyZ2V0UHJvcCxtYXNrPW1hc2tTdHJpbmcsbWF0Y2gsZGF0ZU9wZXJhdGlvbjtmdW5jdGlvbiBzZXRWYWx1ZShkYXRlT2JqLHZhbHVlLG9wdHMpe2lmKGRhdGVPYmpbdGFyZ2V0UHJvcF09dmFsdWUucmVwbGFjZSgvW14wLTldL2csXCIwXCIpLGRhdGVPYmpbXCJyYXdcIit0YXJnZXRQcm9wXT12YWx1ZSx2b2lkIDAhPT1kYXRlT3BlcmF0aW9uKXt2YXIgZGF0YXZhbHVlPWRhdGVPYmpbdGFyZ2V0UHJvcF07XCJkYXlcIj09PXRhcmdldFByb3AmJjA9PT1wYXJzZUludChkYXRhdmFsdWUpJiYoZGF0YXZhbHVlPTEpLFwibW9udGhcIj09PXRhcmdldFByb3AmJihkYXRhdmFsdWU9cGFyc2VJbnQoZGF0YXZhbHVlKSwwPGRhdGF2YWx1ZSkmJihkYXRhdmFsdWUtPTEpLGRhdGVPcGVyYXRpb24uY2FsbChkYXRlT2JqLmRhdGUsZGF0YXZhbHVlKX19aWYoXCJzdHJpbmdcIj09dHlwZW9mIG1hc2spe2ZvcihnZXRUb2tlbml6ZXIob3B0cykubGFzdEluZGV4PTA7bWF0Y2g9Z2V0VG9rZW5pemVyKG9wdHMpLmV4ZWMoZm9ybWF0KTspe3ZhciBkeW5NYXRjaGVzPW5ldyBSZWdFeHAoXCJcXFxcZCskXCIpLmV4ZWMobWF0Y2hbMF0pLGZjb2RlPWR5bk1hdGNoZXM/bWF0Y2hbMF1bMF0rXCJ4XCI6bWF0Y2hbMF0sdmFsdWU9dm9pZCAwO2lmKGR5bk1hdGNoZXMpe3ZhciBsYXN0SW5kZXg9Z2V0VG9rZW5pemVyKG9wdHMpLmxhc3RJbmRleCx0b2thbk1hdGNoPWdldFRva2VuTWF0Y2gobWF0Y2guaW5kZXgsb3B0cyk7Z2V0VG9rZW5pemVyKG9wdHMpLmxhc3RJbmRleD1sYXN0SW5kZXgsdmFsdWU9bWFzay5zbGljZSgwLG1hc2suaW5kZXhPZih0b2thbk1hdGNoLm5leHRNYXRjaFswXSkpfWVsc2UgdmFsdWU9bWFzay5zbGljZSgwLGZjb2RlLmxlbmd0aCk7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZvcm1hdENvZGUsZmNvZGUpJiYodGFyZ2V0UHJvcD1mb3JtYXRDb2RlW2Zjb2RlXVsyXSxkYXRlT3BlcmF0aW9uPWZvcm1hdENvZGVbZmNvZGVdWzFdLHNldFZhbHVlKGRhdGVPYmosdmFsdWUsb3B0cykpLG1hc2s9bWFzay5zbGljZSh2YWx1ZS5sZW5ndGgpfXJldHVybiBkYXRlT2JqfWlmKG1hc2smJlwib2JqZWN0XCI9PT1fdHlwZW9mKG1hc2spJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobWFzayxcImRhdGVcIikpcmV0dXJuIG1hc2t9ZnVuY3Rpb24gaW1wb3J0RGF0ZShkYXRlT2JqLG9wdHMpe3JldHVybiBwYXJzZShvcHRzLmlucHV0Rm9ybWF0LHtkYXRlOmRhdGVPYmp9LG9wdHMpfWZ1bmN0aW9uIGdldFRva2VuTWF0Y2gocG9zLG9wdHMpe3ZhciBjYWxjUG9zPTAsdGFyZ2V0TWF0Y2gsbWF0Y2gsbWF0Y2hMZW5ndGg9MDtmb3IoZ2V0VG9rZW5pemVyKG9wdHMpLmxhc3RJbmRleD0wO21hdGNoPWdldFRva2VuaXplcihvcHRzKS5leGVjKG9wdHMuaW5wdXRGb3JtYXQpOyl7dmFyIGR5bk1hdGNoZXM9bmV3IFJlZ0V4cChcIlxcXFxkKyRcIikuZXhlYyhtYXRjaFswXSk7aWYobWF0Y2hMZW5ndGg9ZHluTWF0Y2hlcz9wYXJzZUludChkeW5NYXRjaGVzWzBdKTptYXRjaFswXS5sZW5ndGgsY2FsY1Bvcys9bWF0Y2hMZW5ndGgscG9zPD1jYWxjUG9zKXt0YXJnZXRNYXRjaD1tYXRjaCxtYXRjaD1nZXRUb2tlbml6ZXIob3B0cykuZXhlYyhvcHRzLmlucHV0Rm9ybWF0KTticmVha319cmV0dXJue3RhcmdldE1hdGNoSW5kZXg6Y2FsY1Bvcy1tYXRjaExlbmd0aCxuZXh0TWF0Y2g6bWF0Y2gsdGFyZ2V0TWF0Y2g6dGFyZ2V0TWF0Y2h9fV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmRBbGlhc2VzKHtkYXRldGltZTp7bWFzazpmdW5jdGlvbiBtYXNrKG9wdHMpe3JldHVybiBvcHRzLm51bWVyaWNJbnB1dD0hMSxmb3JtYXRDb2RlLlM9b3B0cy5pMThuLm9yZGluYWxTdWZmaXguam9pbihcInxcIiksb3B0cy5pbnB1dEZvcm1hdD1mb3JtYXRBbGlhc1tvcHRzLmlucHV0Rm9ybWF0XXx8b3B0cy5pbnB1dEZvcm1hdCxvcHRzLmRpc3BsYXlGb3JtYXQ9Zm9ybWF0QWxpYXNbb3B0cy5kaXNwbGF5Rm9ybWF0XXx8b3B0cy5kaXNwbGF5Rm9ybWF0fHxvcHRzLmlucHV0Rm9ybWF0LG9wdHMub3V0cHV0Rm9ybWF0PWZvcm1hdEFsaWFzW29wdHMub3V0cHV0Rm9ybWF0XXx8b3B0cy5vdXRwdXRGb3JtYXR8fG9wdHMuaW5wdXRGb3JtYXQsb3B0cy5wbGFjZWhvbGRlcj1cIlwiIT09b3B0cy5wbGFjZWhvbGRlcj9vcHRzLnBsYWNlaG9sZGVyOm9wdHMuaW5wdXRGb3JtYXQucmVwbGFjZSgvW1tcXF1dLyxcIlwiKSxvcHRzLnJlZ2V4PXBhcnNlKG9wdHMuaW5wdXRGb3JtYXQsdm9pZCAwLG9wdHMpLG9wdHMubWluPWFuYWx5c2VNYXNrKG9wdHMubWluLG9wdHMuaW5wdXRGb3JtYXQsb3B0cyksb3B0cy5tYXg9YW5hbHlzZU1hc2sob3B0cy5tYXgsb3B0cy5pbnB1dEZvcm1hdCxvcHRzKSxudWxsfSxwbGFjZWhvbGRlcjpcIlwiLGlucHV0Rm9ybWF0OlwiaXNvRGF0ZVRpbWVcIixkaXNwbGF5Rm9ybWF0OnZvaWQgMCxvdXRwdXRGb3JtYXQ6dm9pZCAwLG1pbjpudWxsLG1heDpudWxsLHNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI6XCJcIixpMThuOntkYXlOYW1lczpbXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCIsXCJTdW5cIixcIk1vbmRheVwiLFwiVHVlc2RheVwiLFwiV2VkbmVzZGF5XCIsXCJUaHVyc2RheVwiLFwiRnJpZGF5XCIsXCJTYXR1cmRheVwiLFwiU3VuZGF5XCJdLG1vbnRoTmFtZXM6W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiLFwiSmFudWFyeVwiLFwiRmVicnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdLG9yZGluYWxTdWZmaXg6W1wic3RcIixcIm5kXCIsXCJyZFwiLFwidGhcIl19LHByZVZhbGlkYXRpb246ZnVuY3Rpb24gcHJlVmFsaWRhdGlvbihidWZmZXIscG9zLGMsaXNTZWxlY3Rpb24sb3B0cyxtYXNrc2V0LGNhcmV0UG9zLHN0cmljdCl7aWYoc3RyaWN0KXJldHVybiEwO2lmKGlzTmFOKGMpJiZidWZmZXJbcG9zXSE9PWMpe3ZhciB0b2tlbk1hdGNoPWdldFRva2VuTWF0Y2gocG9zLG9wdHMpO2lmKHRva2VuTWF0Y2gubmV4dE1hdGNoJiZ0b2tlbk1hdGNoLm5leHRNYXRjaFswXT09PWMmJjE8dG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXS5sZW5ndGgpe3ZhciB2YWxpZGF0b3I9Zm9ybWF0Q29kZVt0b2tlbk1hdGNoLnRhcmdldE1hdGNoWzBdXVswXTtpZihuZXcgUmVnRXhwKHZhbGlkYXRvcikudGVzdChcIjBcIitidWZmZXJbcG9zLTFdKSlyZXR1cm4gYnVmZmVyW3Bvc109YnVmZmVyW3Bvcy0xXSxidWZmZXJbcG9zLTFdPVwiMFwiLHtmdXp6eTohMCxidWZmZXI6YnVmZmVyLHJlZnJlc2hGcm9tQnVmZmVyOntzdGFydDpwb3MtMSxlbmQ6cG9zKzF9LHBvczpwb3MrMX19fXJldHVybiEwfSxwb3N0VmFsaWRhdGlvbjpmdW5jdGlvbiBwb3N0VmFsaWRhdGlvbihidWZmZXIscG9zLGMsY3VycmVudFJlc3VsdCxvcHRzLG1hc2tzZXQsc3RyaWN0LGZyb21DaGVja3ZhbCl7dmFyIGlucHV0bWFzaz10aGlzLHRva2VuTWF0Y2gsdmFsaWRhdG9yO2lmKHN0cmljdClyZXR1cm4hMDtpZighMT09PWN1cnJlbnRSZXN1bHQpcmV0dXJuIHRva2VuTWF0Y2g9Z2V0VG9rZW5NYXRjaChwb3MrMSxvcHRzKSx0b2tlbk1hdGNoLnRhcmdldE1hdGNoJiZ0b2tlbk1hdGNoLnRhcmdldE1hdGNoSW5kZXg9PT1wb3MmJjE8dG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXS5sZW5ndGgmJnZvaWQgMCE9PWZvcm1hdENvZGVbdG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXV0mJih2YWxpZGF0b3I9Zm9ybWF0Q29kZVt0b2tlbk1hdGNoLnRhcmdldE1hdGNoWzBdXVswXSxuZXcgUmVnRXhwKHZhbGlkYXRvcikudGVzdChcIjBcIitjKSk/e2luc2VydDpbe3Bvczpwb3MsYzpcIjBcIn0se3Bvczpwb3MrMSxjOmN9XSxwb3M6cG9zKzF9OmN1cnJlbnRSZXN1bHQ7aWYoY3VycmVudFJlc3VsdC5mdXp6eSYmKGJ1ZmZlcj1jdXJyZW50UmVzdWx0LmJ1ZmZlcixwb3M9Y3VycmVudFJlc3VsdC5wb3MpLHRva2VuTWF0Y2g9Z2V0VG9rZW5NYXRjaChwb3Msb3B0cyksdG9rZW5NYXRjaC50YXJnZXRNYXRjaCYmdG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXSYmdm9pZCAwIT09Zm9ybWF0Q29kZVt0b2tlbk1hdGNoLnRhcmdldE1hdGNoWzBdXSl7dmFsaWRhdG9yPWZvcm1hdENvZGVbdG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXV1bMF07dmFyIHBhcnQ9YnVmZmVyLnNsaWNlKHRva2VuTWF0Y2gudGFyZ2V0TWF0Y2hJbmRleCx0b2tlbk1hdGNoLnRhcmdldE1hdGNoSW5kZXgrdG9rZW5NYXRjaC50YXJnZXRNYXRjaFswXS5sZW5ndGgpOyExPT09bmV3IFJlZ0V4cCh2YWxpZGF0b3IpLnRlc3QocGFydC5qb2luKFwiXCIpKSYmMj09PXRva2VuTWF0Y2gudGFyZ2V0TWF0Y2hbMF0ubGVuZ3RoJiZtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Rva2VuTWF0Y2gudGFyZ2V0TWF0Y2hJbmRleF0mJm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbdG9rZW5NYXRjaC50YXJnZXRNYXRjaEluZGV4KzFdJiYobWFza3NldC52YWxpZFBvc2l0aW9uc1t0b2tlbk1hdGNoLnRhcmdldE1hdGNoSW5kZXgrMV0uaW5wdXQ9XCIwXCIpfXZhciByZXN1bHQ9Y3VycmVudFJlc3VsdCxkYXRlUGFydHM9YW5hbHlzZU1hc2soYnVmZmVyLmpvaW4oXCJcIiksb3B0cy5pbnB1dEZvcm1hdCxvcHRzKTtyZXR1cm4gcmVzdWx0JiZkYXRlUGFydHMuZGF0ZS5nZXRUaW1lKCk9PWRhdGVQYXJ0cy5kYXRlLmdldFRpbWUoKSYmKHJlc3VsdD1wcmVmaWxsWWVhcihkYXRlUGFydHMscmVzdWx0LG9wdHMpLHJlc3VsdD1pc1ZhbGlkRGF0ZS5jYWxsKHRoaXMsZGF0ZVBhcnRzLHJlc3VsdCxvcHRzKSxyZXN1bHQ9aXNEYXRlSW5SYW5nZShkYXRlUGFydHMscmVzdWx0LG9wdHMsbWFza3NldCxmcm9tQ2hlY2t2YWwpKSxwb3MmJnJlc3VsdCYmY3VycmVudFJlc3VsdC5wb3MhPT1wb3M/e2J1ZmZlcjpwYXJzZShvcHRzLmlucHV0Rm9ybWF0LGRhdGVQYXJ0cyxvcHRzKS5zcGxpdChcIlwiKSxyZWZyZXNoRnJvbUJ1ZmZlcjp7c3RhcnQ6cG9zLGVuZDpjdXJyZW50UmVzdWx0LnBvc319OnJlc3VsdH0sb25LZXlEb3duOmZ1bmN0aW9uIG9uS2V5RG93bihlLGJ1ZmZlcixjYXJldFBvcyxvcHRzKXt2YXIgaW5wdXQ9dGhpcztlLmN0cmxLZXkmJmUua2V5Q29kZT09PV9rZXljb2RlLmRlZmF1bHQuUklHSFQmJih0aGlzLmlucHV0bWFzay5fdmFsdWVTZXQoaW1wb3J0RGF0ZShuZXcgRGF0ZSxvcHRzKSksJCh0aGlzKS50cmlnZ2VyKFwic2V0dmFsdWVcIikpfSxvblVuTWFzazpmdW5jdGlvbiBvblVuTWFzayhtYXNrZWRWYWx1ZSx1bm1hc2tlZFZhbHVlLG9wdHMpe3JldHVybiB1bm1hc2tlZFZhbHVlP3BhcnNlKG9wdHMub3V0cHV0Rm9ybWF0LGFuYWx5c2VNYXNrKG1hc2tlZFZhbHVlLG9wdHMuaW5wdXRGb3JtYXQsb3B0cyksb3B0cywhMCk6dW5tYXNrZWRWYWx1ZX0sY2FzaW5nOmZ1bmN0aW9uIGNhc2luZyhlbGVtLHRlc3QscG9zLHZhbGlkUG9zaXRpb25zKXtyZXR1cm4gMD09dGVzdC5uYXRpdmVEZWYuaW5kZXhPZihcIlthcF1cIik/ZWxlbS50b0xvd2VyQ2FzZSgpOjA9PXRlc3QubmF0aXZlRGVmLmluZGV4T2YoXCJbQVBdXCIpP2VsZW0udG9VcHBlckNhc2UoKTplbGVtfSxvbkJlZm9yZU1hc2s6ZnVuY3Rpb24gb25CZWZvcmVNYXNrKGluaXRpYWxWYWx1ZSxvcHRzKXtyZXR1cm5cIltvYmplY3QgRGF0ZV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpbml0aWFsVmFsdWUpJiYoaW5pdGlhbFZhbHVlPWltcG9ydERhdGUoaW5pdGlhbFZhbHVlLG9wdHMpKSxpbml0aWFsVmFsdWV9LGluc2VydE1vZGU6ITEsc2hpZnRQb3NpdGlvbnM6ITEsa2VlcFN0YXRpYzohMSxpbnB1dG1vZGU6XCJudW1lcmljXCJ9fSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO3ZhciBfaW5wdXRtYXNrPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygyKSksX2tleWNvZGU9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDApKSxfZXNjYXBlUmVnZXg9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKSk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fXZhciAkPV9pbnB1dG1hc2suZGVmYXVsdC5kZXBlbmRlbmN5TGliO2Z1bmN0aW9uIGF1dG9Fc2NhcGUodHh0LG9wdHMpe2Zvcih2YXIgZXNjYXBlZFR4dD1cIlwiLGk9MDtpPHR4dC5sZW5ndGg7aSsrKV9pbnB1dG1hc2suZGVmYXVsdC5wcm90b3R5cGUuZGVmaW5pdGlvbnNbdHh0LmNoYXJBdChpKV18fG9wdHMuZGVmaW5pdGlvbnNbdHh0LmNoYXJBdChpKV18fG9wdHMub3B0aW9uYWxtYXJrZXJbMF09PT10eHQuY2hhckF0KGkpfHxvcHRzLm9wdGlvbmFsbWFya2VyWzFdPT09dHh0LmNoYXJBdChpKXx8b3B0cy5xdWFudGlmaWVybWFya2VyWzBdPT09dHh0LmNoYXJBdChpKXx8b3B0cy5xdWFudGlmaWVybWFya2VyWzFdPT09dHh0LmNoYXJBdChpKXx8b3B0cy5ncm91cG1hcmtlclswXT09PXR4dC5jaGFyQXQoaSl8fG9wdHMuZ3JvdXBtYXJrZXJbMV09PT10eHQuY2hhckF0KGkpfHxvcHRzLmFsdGVybmF0b3JtYXJrZXI9PT10eHQuY2hhckF0KGkpP2VzY2FwZWRUeHQrPVwiXFxcXFwiK3R4dC5jaGFyQXQoaSk6ZXNjYXBlZFR4dCs9dHh0LmNoYXJBdChpKTtyZXR1cm4gZXNjYXBlZFR4dH1mdW5jdGlvbiBhbGlnbkRpZ2l0cyhidWZmZXIsZGlnaXRzLG9wdHMsZm9yY2Upe2lmKDA8YnVmZmVyLmxlbmd0aCYmMDxkaWdpdHMmJighb3B0cy5kaWdpdHNPcHRpb25hbHx8Zm9yY2UpKXt2YXIgcmFkaXhQb3NpdGlvbj1idWZmZXIuaW5kZXhPZihvcHRzLnJhZGl4UG9pbnQpLG5lZ2F0aW9uQmFjaz0hMTtvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2s9PT1idWZmZXJbYnVmZmVyLmxlbmd0aC0xXSYmKG5lZ2F0aW9uQmFjaz0hMCxidWZmZXIubGVuZ3RoLS0pLC0xPT09cmFkaXhQb3NpdGlvbiYmKGJ1ZmZlci5wdXNoKG9wdHMucmFkaXhQb2ludCkscmFkaXhQb3NpdGlvbj1idWZmZXIubGVuZ3RoLTEpO2Zvcih2YXIgaT0xO2k8PWRpZ2l0cztpKyspaXNGaW5pdGUoYnVmZmVyW3JhZGl4UG9zaXRpb24raV0pfHwoYnVmZmVyW3JhZGl4UG9zaXRpb24raV09XCIwXCIpfXJldHVybiBuZWdhdGlvbkJhY2smJmJ1ZmZlci5wdXNoKG9wdHMubmVnYXRpb25TeW1ib2wuYmFjayksYnVmZmVyfWZ1bmN0aW9uIGZpbmRWYWxpZGF0b3Ioc3ltYm9sLG1hc2tzZXQpe3ZhciBwb3NOZHg9MDtpZihcIitcIj09PXN5bWJvbCl7Zm9yKHBvc05keCBpbiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zKTtwb3NOZHg9cGFyc2VJbnQocG9zTmR4KX1mb3IodmFyIHRzdE5keCBpbiBtYXNrc2V0LnRlc3RzKWlmKHRzdE5keD1wYXJzZUludCh0c3ROZHgpLHBvc05keDw9dHN0TmR4KWZvcih2YXIgbmR4PTAsbmR4bD1tYXNrc2V0LnRlc3RzW3RzdE5keF0ubGVuZ3RoO25keDxuZHhsO25keCsrKWlmKCh2b2lkIDA9PT1tYXNrc2V0LnZhbGlkUG9zaXRpb25zW3RzdE5keF18fFwiLVwiPT09c3ltYm9sKSYmbWFza3NldC50ZXN0c1t0c3ROZHhdW25keF0ubWF0Y2guZGVmPT09c3ltYm9sKXJldHVybiB0c3ROZHgrKHZvaWQgMCE9PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbdHN0TmR4XSYmXCItXCIhPT1zeW1ib2w/MTowKTtyZXR1cm4gcG9zTmR4fWZ1bmN0aW9uIGZpbmRWYWxpZChzeW1ib2wsbWFza3NldCl7dmFyIHJldD0tMTtmb3IodmFyIG5keCBpbiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zKXt2YXIgdHN0PW1hc2tzZXQudmFsaWRQb3NpdGlvbnNbbmR4XTtpZih0c3QmJnRzdC5tYXRjaC5kZWY9PT1zeW1ib2wpe3JldD1wYXJzZUludChuZHgpO2JyZWFrfX1yZXR1cm4gcmV0fWZ1bmN0aW9uIHBhcnNlTWluTWF4T3B0aW9ucyhvcHRzKXt2b2lkIDA9PT1vcHRzLnBhcnNlTWluTWF4T3B0aW9ucyYmKG51bGwhPT1vcHRzLm1pbiYmKG9wdHMubWluPW9wdHMubWluLnRvU3RyaW5nKCkucmVwbGFjZShuZXcgUmVnRXhwKCgwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLmdyb3VwU2VwYXJhdG9yKSxcImdcIiksXCJcIiksXCIsXCI9PT1vcHRzLnJhZGl4UG9pbnQmJihvcHRzLm1pbj1vcHRzLm1pbi5yZXBsYWNlKG9wdHMucmFkaXhQb2ludCxcIi5cIikpLG9wdHMubWluPWlzRmluaXRlKG9wdHMubWluKT9wYXJzZUZsb2F0KG9wdHMubWluKTpOYU4saXNOYU4ob3B0cy5taW4pJiYob3B0cy5taW49TnVtYmVyLk1JTl9WQUxVRSkpLG51bGwhPT1vcHRzLm1heCYmKG9wdHMubWF4PW9wdHMubWF4LnRvU3RyaW5nKCkucmVwbGFjZShuZXcgUmVnRXhwKCgwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLmdyb3VwU2VwYXJhdG9yKSxcImdcIiksXCJcIiksXCIsXCI9PT1vcHRzLnJhZGl4UG9pbnQmJihvcHRzLm1heD1vcHRzLm1heC5yZXBsYWNlKG9wdHMucmFkaXhQb2ludCxcIi5cIikpLG9wdHMubWF4PWlzRmluaXRlKG9wdHMubWF4KT9wYXJzZUZsb2F0KG9wdHMubWF4KTpOYU4saXNOYU4ob3B0cy5tYXgpJiYob3B0cy5tYXg9TnVtYmVyLk1BWF9WQUxVRSkpLG9wdHMucGFyc2VNaW5NYXhPcHRpb25zPVwiZG9uZVwiKX1mdW5jdGlvbiBnZW5NYXNrKG9wdHMpe29wdHMucmVwZWF0PTAsb3B0cy5ncm91cFNlcGFyYXRvcj09PW9wdHMucmFkaXhQb2ludCYmb3B0cy5kaWdpdHMmJlwiMFwiIT09b3B0cy5kaWdpdHMmJihcIi5cIj09PW9wdHMucmFkaXhQb2ludD9vcHRzLmdyb3VwU2VwYXJhdG9yPVwiLFwiOlwiLFwiPT09b3B0cy5yYWRpeFBvaW50P29wdHMuZ3JvdXBTZXBhcmF0b3I9XCIuXCI6b3B0cy5ncm91cFNlcGFyYXRvcj1cIlwiKSxcIiBcIj09PW9wdHMuZ3JvdXBTZXBhcmF0b3ImJihvcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI9dm9pZCAwKSwxPG9wdHMucGxhY2Vob2xkZXIubGVuZ3RoJiYob3B0cy5wbGFjZWhvbGRlcj1vcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSksXCJyYWRpeEZvY3VzXCI9PT1vcHRzLnBvc2l0aW9uQ2FyZXRPbkNsaWNrJiZcIlwiPT09b3B0cy5wbGFjZWhvbGRlciYmKG9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2s9XCJsdnBcIik7dmFyIGRlY2ltYWxEZWY9XCIwXCIscmFkaXhQb2ludERlZj1vcHRzLnJhZGl4UG9pbnQ7ITA9PT1vcHRzLm51bWVyaWNJbnB1dCYmdm9pZCAwPT09b3B0cy5fX2ZpbmFuY2VJbnB1dD8oZGVjaW1hbERlZj1cIjFcIixvcHRzLnBvc2l0aW9uQ2FyZXRPbkNsaWNrPVwicmFkaXhGb2N1c1wiPT09b3B0cy5wb3NpdGlvbkNhcmV0T25DbGljaz9cImx2cFwiOm9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2ssb3B0cy5kaWdpdHNPcHRpb25hbD0hMSxpc05hTihvcHRzLmRpZ2l0cykmJihvcHRzLmRpZ2l0cz0yKSxvcHRzLl9yYWRpeERhbmNlPSExLHJhZGl4UG9pbnREZWY9XCIsXCI9PT1vcHRzLnJhZGl4UG9pbnQ/XCI/XCI6XCIhXCIsXCJcIiE9PW9wdHMucmFkaXhQb2ludCYmdm9pZCAwPT09b3B0cy5kZWZpbml0aW9uc1tyYWRpeFBvaW50RGVmXSYmKG9wdHMuZGVmaW5pdGlvbnNbcmFkaXhQb2ludERlZl09e30sb3B0cy5kZWZpbml0aW9uc1tyYWRpeFBvaW50RGVmXS52YWxpZGF0b3I9XCJbXCIrb3B0cy5yYWRpeFBvaW50K1wiXVwiLG9wdHMuZGVmaW5pdGlvbnNbcmFkaXhQb2ludERlZl0ucGxhY2Vob2xkZXI9b3B0cy5yYWRpeFBvaW50LG9wdHMuZGVmaW5pdGlvbnNbcmFkaXhQb2ludERlZl0uc3RhdGljPSEwLG9wdHMuZGVmaW5pdGlvbnNbcmFkaXhQb2ludERlZl0uZ2VuZXJhdGVkPSEwKSk6KG9wdHMuX19maW5hbmNlSW5wdXQ9ITEsb3B0cy5udW1lcmljSW5wdXQ9ITApO3ZhciBtYXNrPVwiWytdXCIsYWx0TWFzaztpZihtYXNrKz1hdXRvRXNjYXBlKG9wdHMucHJlZml4LG9wdHMpLFwiXCIhPT1vcHRzLmdyb3VwU2VwYXJhdG9yPyh2b2lkIDA9PT1vcHRzLmRlZmluaXRpb25zW29wdHMuZ3JvdXBTZXBhcmF0b3JdJiYob3B0cy5kZWZpbml0aW9uc1tvcHRzLmdyb3VwU2VwYXJhdG9yXT17fSxvcHRzLmRlZmluaXRpb25zW29wdHMuZ3JvdXBTZXBhcmF0b3JdLnZhbGlkYXRvcj1cIltcIitvcHRzLmdyb3VwU2VwYXJhdG9yK1wiXVwiLG9wdHMuZGVmaW5pdGlvbnNbb3B0cy5ncm91cFNlcGFyYXRvcl0ucGxhY2Vob2xkZXI9b3B0cy5ncm91cFNlcGFyYXRvcixvcHRzLmRlZmluaXRpb25zW29wdHMuZ3JvdXBTZXBhcmF0b3JdLnN0YXRpYz0hMCxvcHRzLmRlZmluaXRpb25zW29wdHMuZ3JvdXBTZXBhcmF0b3JdLmdlbmVyYXRlZD0hMCksbWFzays9b3B0cy5fbWFzayhvcHRzKSk6bWFzays9XCI5eyt9XCIsdm9pZCAwIT09b3B0cy5kaWdpdHMmJjAhPT1vcHRzLmRpZ2l0cyl7dmFyIGRxPW9wdHMuZGlnaXRzLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO2lzRmluaXRlKGRxWzBdKSYmZHFbMV0mJmlzRmluaXRlKGRxWzFdKT9tYXNrKz1yYWRpeFBvaW50RGVmK2RlY2ltYWxEZWYrXCJ7XCIrb3B0cy5kaWdpdHMrXCJ9XCI6KGlzTmFOKG9wdHMuZGlnaXRzKXx8MDxwYXJzZUludChvcHRzLmRpZ2l0cykpJiYob3B0cy5kaWdpdHNPcHRpb25hbD8oYWx0TWFzaz1tYXNrK3JhZGl4UG9pbnREZWYrZGVjaW1hbERlZitcInswLFwiK29wdHMuZGlnaXRzK1wifVwiLG9wdHMua2VlcFN0YXRpYz0hMCk6bWFzays9cmFkaXhQb2ludERlZitkZWNpbWFsRGVmK1wie1wiK29wdHMuZGlnaXRzK1wifVwiKX1yZXR1cm4gbWFzays9YXV0b0VzY2FwZShvcHRzLnN1ZmZpeCxvcHRzKSxtYXNrKz1cIlstXVwiLGFsdE1hc2smJihtYXNrPVthbHRNYXNrK2F1dG9Fc2NhcGUob3B0cy5zdWZmaXgsb3B0cykrXCJbLV1cIixtYXNrXSksb3B0cy5ncmVlZHk9ITEscGFyc2VNaW5NYXhPcHRpb25zKG9wdHMpLG1hc2t9ZnVuY3Rpb24gaGFubmRsZVJhZGl4RGFuY2UocG9zLGMscmFkaXhQb3MsbWFza3NldCxvcHRzKXtyZXR1cm4gb3B0cy5fcmFkaXhEYW5jZSYmb3B0cy5udW1lcmljSW5wdXQmJmMhPT1vcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2smJnBvczw9cmFkaXhQb3MmJigwPHJhZGl4UG9zfHxjPT1vcHRzLnJhZGl4UG9pbnQpJiYodm9pZCAwPT09bWFza3NldC52YWxpZFBvc2l0aW9uc1twb3MtMV18fG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zLTFdLmlucHV0IT09b3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSYmKHBvcy09MSkscG9zfWZ1bmN0aW9uIGRlY2ltYWxWYWxpZGF0b3IoY2hycyxtYXNrc2V0LHBvcyxzdHJpY3Qsb3B0cyl7dmFyIHJhZGl4UG9zPW1hc2tzZXQuYnVmZmVyP21hc2tzZXQuYnVmZmVyLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KTotMSxyZXN1bHQ9LTEhPT1yYWRpeFBvcyYmbmV3IFJlZ0V4cChcIlswLTlcXHVmZjExLVxcdWZmMTldXCIpLnRlc3QoY2hycyk7cmV0dXJuIG9wdHMuX3JhZGl4RGFuY2UmJnJlc3VsdCYmbnVsbD09bWFza3NldC52YWxpZFBvc2l0aW9uc1tyYWRpeFBvc10/e2luc2VydDp7cG9zOnJhZGl4UG9zPT09cG9zP3JhZGl4UG9zKzE6cmFkaXhQb3MsYzpvcHRzLnJhZGl4UG9pbnR9LHBvczpwb3N9OnJlc3VsdH1mdW5jdGlvbiBjaGVja0ZvckxlYWRpbmdaZXJvZXMoYnVmZmVyLG9wdHMpe3ZhciBudW1iZXJNYXRjaGVzPW5ldyBSZWdFeHAoXCIoXlwiKyhcIlwiIT09b3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udD8oMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCkrXCI/XCI6XCJcIikrKDAsX2VzY2FwZVJlZ2V4LmRlZmF1bHQpKG9wdHMucHJlZml4KStcIikoLiopKFwiKygwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLnN1ZmZpeCkrKFwiXCIhPW9wdHMubmVnYXRpb25TeW1ib2wuYmFjaz8oMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKStcIj9cIjpcIlwiKStcIiQpXCIpLmV4ZWMoYnVmZmVyLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIikpLG51bWJlcj1udW1iZXJNYXRjaGVzP251bWJlck1hdGNoZXNbMl06XCJcIixsZWFkaW5nemVyb2VzPSExO3JldHVybiBudW1iZXImJihudW1iZXI9bnVtYmVyLnNwbGl0KG9wdHMucmFkaXhQb2ludC5jaGFyQXQoMCkpWzBdLGxlYWRpbmd6ZXJvZXM9bmV3IFJlZ0V4cChcIl5bMFwiK29wdHMuZ3JvdXBTZXBhcmF0b3IrXCJdKlwiKS5leGVjKG51bWJlcikpLCEoIWxlYWRpbmd6ZXJvZXN8fCEoMTxsZWFkaW5nemVyb2VzWzBdLmxlbmd0aHx8MDxsZWFkaW5nemVyb2VzWzBdLmxlbmd0aCYmbGVhZGluZ3plcm9lc1swXS5sZW5ndGg8bnVtYmVyLmxlbmd0aCkpJiZsZWFkaW5nemVyb2VzfV9pbnB1dG1hc2suZGVmYXVsdC5leHRlbmRBbGlhc2VzKHtudW1lcmljOnttYXNrOmdlbk1hc2ssX21hc2s6ZnVuY3Rpb24gX21hc2sob3B0cyl7cmV0dXJuXCIoXCIrb3B0cy5ncm91cFNlcGFyYXRvcitcIjk5OSl7K3wxfVwifSxkaWdpdHM6XCIqXCIsZGlnaXRzT3B0aW9uYWw6ITAsZW5mb3JjZURpZ2l0c09uQmx1cjohMSxyYWRpeFBvaW50OlwiLlwiLHBvc2l0aW9uQ2FyZXRPbkNsaWNrOlwicmFkaXhGb2N1c1wiLF9yYWRpeERhbmNlOiEwLGdyb3VwU2VwYXJhdG9yOlwiXCIsYWxsb3dNaW51czohMCxuZWdhdGlvblN5bWJvbDp7ZnJvbnQ6XCItXCIsYmFjazpcIlwifSxwcmVmaXg6XCJcIixzdWZmaXg6XCJcIixtaW46bnVsbCxtYXg6bnVsbCxTZXRNYXhPbk92ZXJmbG93OiExLHN0ZXA6MSxpbnB1dFR5cGU6XCJ0ZXh0XCIsdW5tYXNrQXNOdW1iZXI6ITEscm91bmRpbmdGTjpNYXRoLnJvdW5kLGlucHV0bW9kZTpcIm51bWVyaWNcIixzaG9ydGN1dHM6e2s6XCIwMDBcIixtOlwiMDAwMDAwXCJ9LHBsYWNlaG9sZGVyOlwiMFwiLGdyZWVkeTohMSxyaWdodEFsaWduOiEwLGluc2VydE1vZGU6ITAsYXV0b1VubWFzazohMSxza2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyOlwiXCIsZGVmaW5pdGlvbnM6ezA6e3ZhbGlkYXRvcjpkZWNpbWFsVmFsaWRhdG9yfSwxOnt2YWxpZGF0b3I6ZGVjaW1hbFZhbGlkYXRvcixkZWZpbml0aW9uU3ltYm9sOlwiOVwifSxcIitcIjp7dmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcihjaHJzLG1hc2tzZXQscG9zLHN0cmljdCxvcHRzKXtyZXR1cm4gb3B0cy5hbGxvd01pbnVzJiYoXCItXCI9PT1jaHJzfHxjaHJzPT09b3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCl9fSxcIi1cIjp7dmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcihjaHJzLG1hc2tzZXQscG9zLHN0cmljdCxvcHRzKXtyZXR1cm4gb3B0cy5hbGxvd01pbnVzJiZjaHJzPT09b3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrfX19LHByZVZhbGlkYXRpb246ZnVuY3Rpb24gcHJlVmFsaWRhdGlvbihidWZmZXIscG9zLGMsaXNTZWxlY3Rpb24sb3B0cyxtYXNrc2V0LGNhcmV0UG9zLHN0cmljdCl7aWYoITEhPT1vcHRzLl9fZmluYW5jZUlucHV0JiZjPT09b3B0cy5yYWRpeFBvaW50KXJldHVybiExO3ZhciBwYXR0ZXJuO2lmKHBhdHRlcm49b3B0cy5zaG9ydGN1dHMmJm9wdHMuc2hvcnRjdXRzW2NdKXtpZigxPHBhdHRlcm4ubGVuZ3RoKWZvcih2YXIgaW5zZXJ0cz1bXSxpPTA7aTxwYXR0ZXJuLmxlbmd0aDtpKyspaW5zZXJ0cy5wdXNoKHtwb3M6cG9zK2ksYzpwYXR0ZXJuW2ldLHN0cmljdDohMX0pO3JldHVybntpbnNlcnQ6aW5zZXJ0c319dmFyIHJhZGl4UG9zPWJ1ZmZlci5pbmRleE9mKG9wdHMucmFkaXhQb2ludCksaW5pdFBvcz1wb3M7aWYocG9zPWhhbm5kbGVSYWRpeERhbmNlKHBvcyxjLHJhZGl4UG9zLG1hc2tzZXQsb3B0cyksXCItXCI9PT1jfHxjPT09b3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCl7aWYoITAhPT1vcHRzLmFsbG93TWludXMpcmV0dXJuITE7dmFyIGlzTmVnYXRpdmU9ITEsZnJvbnQ9ZmluZFZhbGlkKFwiK1wiLG1hc2tzZXQpLGJhY2s9ZmluZFZhbGlkKFwiLVwiLG1hc2tzZXQpO3JldHVybi0xIT09ZnJvbnQmJihpc05lZ2F0aXZlPVtmcm9udCxiYWNrXSksITEhPT1pc05lZ2F0aXZlP3tyZW1vdmU6aXNOZWdhdGl2ZSxjYXJldDppbml0UG9zLW9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQubGVuZ3RofTp7aW5zZXJ0Olt7cG9zOmZpbmRWYWxpZGF0b3IoXCIrXCIsbWFza3NldCksYzpvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250LGZyb21Jc1ZhbGlkOiEwfSx7cG9zOmZpbmRWYWxpZGF0b3IoXCItXCIsbWFza3NldCksYzpvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2ssZnJvbUlzVmFsaWQ6dm9pZCAwfV0sY2FyZXQ6aW5pdFBvcytvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2subGVuZ3RofX1pZihjPT09b3B0cy5ncm91cFNlcGFyYXRvcilyZXR1cm57Y2FyZXQ6aW5pdFBvc307aWYoc3RyaWN0KXJldHVybiEwO2lmKC0xIT09cmFkaXhQb3MmJiEwPT09b3B0cy5fcmFkaXhEYW5jZSYmITE9PT1pc1NlbGVjdGlvbiYmYz09PW9wdHMucmFkaXhQb2ludCYmdm9pZCAwIT09b3B0cy5kaWdpdHMmJihpc05hTihvcHRzLmRpZ2l0cyl8fDA8cGFyc2VJbnQob3B0cy5kaWdpdHMpKSYmcmFkaXhQb3MhPT1wb3MpcmV0dXJue2NhcmV0Om9wdHMuX3JhZGl4RGFuY2UmJnBvcz09PXJhZGl4UG9zLTE/cmFkaXhQb3MrMTpyYWRpeFBvc307aWYoITE9PT1vcHRzLl9fZmluYW5jZUlucHV0KWlmKGlzU2VsZWN0aW9uKXtpZihvcHRzLmRpZ2l0c09wdGlvbmFsKXJldHVybntyZXdyaXRlUG9zaXRpb246Y2FyZXRQb3MuZW5kfTtpZighb3B0cy5kaWdpdHNPcHRpb25hbCl7aWYoY2FyZXRQb3MuYmVnaW4+cmFkaXhQb3MmJmNhcmV0UG9zLmVuZDw9cmFkaXhQb3MpcmV0dXJuIGM9PT1vcHRzLnJhZGl4UG9pbnQ/e2luc2VydDp7cG9zOnJhZGl4UG9zKzEsYzpcIjBcIixmcm9tSXNWYWxpZDohMH0scmV3cml0ZVBvc2l0aW9uOnJhZGl4UG9zfTp7cmV3cml0ZVBvc2l0aW9uOnJhZGl4UG9zKzF9O2lmKGNhcmV0UG9zLmJlZ2luPHJhZGl4UG9zKXJldHVybntyZXdyaXRlUG9zaXRpb246Y2FyZXRQb3MuYmVnaW4tMX19fWVsc2UgaWYoIW9wdHMuc2hvd01hc2tPbkhvdmVyJiYhb3B0cy5zaG93TWFza09uRm9jdXMmJiFvcHRzLmRpZ2l0c09wdGlvbmFsJiYwPG9wdHMuZGlnaXRzJiZcIlwiPT09dGhpcy5fX3ZhbHVlR2V0LmNhbGwodGhpcykpcmV0dXJue3Jld3JpdGVQb3NpdGlvbjpyYWRpeFBvc307cmV0dXJue3Jld3JpdGVQb3NpdGlvbjpwb3N9fSxwb3N0VmFsaWRhdGlvbjpmdW5jdGlvbiBwb3N0VmFsaWRhdGlvbihidWZmZXIscG9zLGMsY3VycmVudFJlc3VsdCxvcHRzLG1hc2tzZXQsc3RyaWN0KXtpZighMT09PWN1cnJlbnRSZXN1bHQpcmV0dXJuIGN1cnJlbnRSZXN1bHQ7aWYoc3RyaWN0KXJldHVybiEwO2lmKG51bGwhPT1vcHRzLm1pbnx8bnVsbCE9PW9wdHMubWF4KXt2YXIgdW5tYXNrZWQ9b3B0cy5vblVuTWFzayhidWZmZXIuc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKSx2b2lkIDAsJC5leHRlbmQoe30sb3B0cyx7dW5tYXNrQXNOdW1iZXI6ITB9KSk7aWYobnVsbCE9PW9wdHMubWluJiZ1bm1hc2tlZDxvcHRzLm1pbiYmKHVubWFza2VkLnRvU3RyaW5nKCkubGVuZ3RoPm9wdHMubWluLnRvU3RyaW5nKCkubGVuZ3RofHx1bm1hc2tlZDwwKSlyZXR1cm4hMTtpZihudWxsIT09b3B0cy5tYXgmJnVubWFza2VkPm9wdHMubWF4KXJldHVybiEhb3B0cy5TZXRNYXhPbk92ZXJmbG93JiZ7cmVmcmVzaEZyb21CdWZmZXI6ITAsYnVmZmVyOmFsaWduRGlnaXRzKG9wdHMubWF4LnRvU3RyaW5nKCkucmVwbGFjZShcIi5cIixvcHRzLnJhZGl4UG9pbnQpLnNwbGl0KFwiXCIpLG9wdHMuZGlnaXRzLG9wdHMpLnJldmVyc2UoKX19cmV0dXJuIGN1cnJlbnRSZXN1bHR9LG9uVW5NYXNrOmZ1bmN0aW9uIG9uVW5NYXNrKG1hc2tlZFZhbHVlLHVubWFza2VkVmFsdWUsb3B0cyl7aWYoXCJcIj09PXVubWFza2VkVmFsdWUmJiEwPT09b3B0cy5udWxsYWJsZSlyZXR1cm4gdW5tYXNrZWRWYWx1ZTt2YXIgcHJvY2Vzc1ZhbHVlPW1hc2tlZFZhbHVlLnJlcGxhY2Uob3B0cy5wcmVmaXgsXCJcIik7cmV0dXJuIHByb2Nlc3NWYWx1ZT1wcm9jZXNzVmFsdWUucmVwbGFjZShvcHRzLnN1ZmZpeCxcIlwiKSxwcm9jZXNzVmFsdWU9cHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5ncm91cFNlcGFyYXRvciksXCJnXCIpLFwiXCIpLFwiXCIhPT1vcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSYmKHByb2Nlc3NWYWx1ZT1wcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKG9wdHMucGxhY2Vob2xkZXIuY2hhckF0KDApLFwiZ1wiKSxcIjBcIikpLG9wdHMudW5tYXNrQXNOdW1iZXI/KFwiXCIhPT1vcHRzLnJhZGl4UG9pbnQmJi0xIT09cHJvY2Vzc1ZhbHVlLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KSYmKHByb2Nlc3NWYWx1ZT1wcm9jZXNzVmFsdWUucmVwbGFjZShfZXNjYXBlUmVnZXguZGVmYXVsdC5jYWxsKHRoaXMsb3B0cy5yYWRpeFBvaW50KSxcIi5cIikpLHByb2Nlc3NWYWx1ZT1wcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKFwiXlwiKygwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSksXCItXCIpLHByb2Nlc3NWYWx1ZT1wcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKCgwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2spK1wiJFwiKSxcIlwiKSxOdW1iZXIocHJvY2Vzc1ZhbHVlKSk6cHJvY2Vzc1ZhbHVlfSxpc0NvbXBsZXRlOmZ1bmN0aW9uIGlzQ29tcGxldGUoYnVmZmVyLG9wdHMpe3ZhciBtYXNrZWRWYWx1ZT0ob3B0cy5udW1lcmljSW5wdXQ/YnVmZmVyLnNsaWNlKCkucmV2ZXJzZSgpOmJ1ZmZlcikuam9pbihcIlwiKTtyZXR1cm4gbWFza2VkVmFsdWU9bWFza2VkVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKFwiXlwiKygwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSksXCItXCIpLG1hc2tlZFZhbHVlPW1hc2tlZFZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKStcIiRcIiksXCJcIiksbWFza2VkVmFsdWU9bWFza2VkVmFsdWUucmVwbGFjZShvcHRzLnByZWZpeCxcIlwiKSxtYXNrZWRWYWx1ZT1tYXNrZWRWYWx1ZS5yZXBsYWNlKG9wdHMuc3VmZml4LFwiXCIpLG1hc2tlZFZhbHVlPW1hc2tlZFZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5ncm91cFNlcGFyYXRvcikrXCIoWzAtOV17M30pXCIsXCJnXCIpLFwiJDFcIiksXCIsXCI9PT1vcHRzLnJhZGl4UG9pbnQmJihtYXNrZWRWYWx1ZT1tYXNrZWRWYWx1ZS5yZXBsYWNlKCgwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLnJhZGl4UG9pbnQpLFwiLlwiKSksaXNGaW5pdGUobWFza2VkVmFsdWUpfSxvbkJlZm9yZU1hc2s6ZnVuY3Rpb24gb25CZWZvcmVNYXNrKGluaXRpYWxWYWx1ZSxvcHRzKXt2YXIgcmFkaXhQb2ludD1vcHRzLnJhZGl4UG9pbnR8fFwiLFwiO2lzRmluaXRlKG9wdHMuZGlnaXRzKSYmKG9wdHMuZGlnaXRzPXBhcnNlSW50KG9wdHMuZGlnaXRzKSksXCJudW1iZXJcIiE9dHlwZW9mIGluaXRpYWxWYWx1ZSYmXCJudW1iZXJcIiE9PW9wdHMuaW5wdXRUeXBlfHxcIlwiPT09cmFkaXhQb2ludHx8KGluaXRpYWxWYWx1ZT1pbml0aWFsVmFsdWUudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLHJhZGl4UG9pbnQpKTt2YXIgaXNOYWd0aXZlPVwiLVwiPT09aW5pdGlhbFZhbHVlLmNoYXJBdCgwKXx8aW5pdGlhbFZhbHVlLmNoYXJBdCgwKT09PW9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQsdmFsdWVQYXJ0cz1pbml0aWFsVmFsdWUuc3BsaXQocmFkaXhQb2ludCksaW50ZWdlclBhcnQ9dmFsdWVQYXJ0c1swXS5yZXBsYWNlKC9bXlxcLTAtOV0vZyxcIlwiKSxkZWNpbWFsUGFydD0xPHZhbHVlUGFydHMubGVuZ3RoP3ZhbHVlUGFydHNbMV0ucmVwbGFjZSgvW14wLTldL2csXCJcIik6XCJcIixmb3JjZURpZ2l0cz0xPHZhbHVlUGFydHMubGVuZ3RoO2luaXRpYWxWYWx1ZT1pbnRlZ2VyUGFydCsoXCJcIiE9PWRlY2ltYWxQYXJ0P3JhZGl4UG9pbnQrZGVjaW1hbFBhcnQ6ZGVjaW1hbFBhcnQpO3ZhciBkaWdpdHM9MDtpZihcIlwiIT09cmFkaXhQb2ludCYmKGRpZ2l0cz1vcHRzLmRpZ2l0c09wdGlvbmFsP29wdHMuZGlnaXRzPGRlY2ltYWxQYXJ0Lmxlbmd0aD9vcHRzLmRpZ2l0czpkZWNpbWFsUGFydC5sZW5ndGg6b3B0cy5kaWdpdHMsXCJcIiE9PWRlY2ltYWxQYXJ0fHwhb3B0cy5kaWdpdHNPcHRpb25hbCkpe3ZhciBkaWdpdHNGYWN0b3I9TWF0aC5wb3coMTAsZGlnaXRzfHwxKTtpbml0aWFsVmFsdWU9aW5pdGlhbFZhbHVlLnJlcGxhY2UoKDAsX2VzY2FwZVJlZ2V4LmRlZmF1bHQpKHJhZGl4UG9pbnQpLFwiLlwiKSxpc05hTihwYXJzZUZsb2F0KGluaXRpYWxWYWx1ZSkpfHwoaW5pdGlhbFZhbHVlPShvcHRzLnJvdW5kaW5nRk4ocGFyc2VGbG9hdChpbml0aWFsVmFsdWUpKmRpZ2l0c0ZhY3RvcikvZGlnaXRzRmFjdG9yKS50b0ZpeGVkKGRpZ2l0cykpLGluaXRpYWxWYWx1ZT1pbml0aWFsVmFsdWUudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLHJhZGl4UG9pbnQpfWlmKDA9PT1vcHRzLmRpZ2l0cyYmLTEhPT1pbml0aWFsVmFsdWUuaW5kZXhPZihyYWRpeFBvaW50KSYmKGluaXRpYWxWYWx1ZT1pbml0aWFsVmFsdWUuc3Vic3RyaW5nKDAsaW5pdGlhbFZhbHVlLmluZGV4T2YocmFkaXhQb2ludCkpKSxudWxsIT09b3B0cy5taW58fG51bGwhPT1vcHRzLm1heCl7dmFyIG51bWJlclZhbHVlPWluaXRpYWxWYWx1ZS50b1N0cmluZygpLnJlcGxhY2UocmFkaXhQb2ludCxcIi5cIik7bnVsbCE9PW9wdHMubWluJiZudW1iZXJWYWx1ZTxvcHRzLm1pbj9pbml0aWFsVmFsdWU9b3B0cy5taW4udG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLHJhZGl4UG9pbnQpOm51bGwhPT1vcHRzLm1heCYmbnVtYmVyVmFsdWU+b3B0cy5tYXgmJihpbml0aWFsVmFsdWU9b3B0cy5tYXgudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLHJhZGl4UG9pbnQpKX1yZXR1cm4gaXNOYWd0aXZlJiZcIi1cIiE9PWluaXRpYWxWYWx1ZS5jaGFyQXQoMCkmJihpbml0aWFsVmFsdWU9XCItXCIraW5pdGlhbFZhbHVlKSxhbGlnbkRpZ2l0cyhpbml0aWFsVmFsdWUudG9TdHJpbmcoKS5zcGxpdChcIlwiKSxkaWdpdHMsb3B0cyxmb3JjZURpZ2l0cykuam9pbihcIlwiKX0sb25CZWZvcmVXcml0ZTpmdW5jdGlvbiBvbkJlZm9yZVdyaXRlKGUsYnVmZmVyLGNhcmV0UG9zLG9wdHMpe2Z1bmN0aW9uIHN0cmlwQnVmZmVyKGJ1ZmZlcixzdHJpcFJhZGl4KXtpZighMSE9PW9wdHMuX19maW5hbmNlSW5wdXR8fHN0cmlwUmFkaXgpe3ZhciBwb3NpdGlvbj1idWZmZXIuaW5kZXhPZihvcHRzLnJhZGl4UG9pbnQpOy0xIT09cG9zaXRpb24mJmJ1ZmZlci5zcGxpY2UocG9zaXRpb24sMSl9aWYoXCJcIiE9PW9wdHMuZ3JvdXBTZXBhcmF0b3IpZm9yKDstMSE9PShwb3NpdGlvbj1idWZmZXIuaW5kZXhPZihvcHRzLmdyb3VwU2VwYXJhdG9yKSk7KWJ1ZmZlci5zcGxpY2UocG9zaXRpb24sMSk7cmV0dXJuIGJ1ZmZlcn12YXIgcmVzdWx0LGxlYWRpbmd6ZXJvZXM9Y2hlY2tGb3JMZWFkaW5nWmVyb2VzKGJ1ZmZlcixvcHRzKTtpZihsZWFkaW5nemVyb2VzKWZvcih2YXIgY2FyZXROZHg9YnVmZmVyLmpvaW4oXCJcIikubGFzdEluZGV4T2YobGVhZGluZ3plcm9lc1swXS5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKSktKGxlYWRpbmd6ZXJvZXNbMF09PWxlYWRpbmd6ZXJvZXMuaW5wdXQ/MDoxKSxvZmZzZXQ9bGVhZGluZ3plcm9lc1swXT09bGVhZGluZ3plcm9lcy5pbnB1dD8xOjAsaT1sZWFkaW5nemVyb2VzWzBdLmxlbmd0aC1vZmZzZXQ7MDxpO2ktLSlkZWxldGUgdGhpcy5tYXNrc2V0LnZhbGlkUG9zaXRpb25zW2NhcmV0TmR4K2ldLGRlbGV0ZSBidWZmZXJbY2FyZXROZHgraV07aWYoZSlzd2l0Y2goZS50eXBlKXtjYXNlXCJibHVyXCI6Y2FzZVwiY2hlY2t2YWxcIjppZihudWxsIT09b3B0cy5taW4pe3ZhciB1bm1hc2tlZD1vcHRzLm9uVW5NYXNrKGJ1ZmZlci5zbGljZSgpLnJldmVyc2UoKS5qb2luKFwiXCIpLHZvaWQgMCwkLmV4dGVuZCh7fSxvcHRzLHt1bm1hc2tBc051bWJlcjohMH0pKTtpZihudWxsIT09b3B0cy5taW4mJnVubWFza2VkPG9wdHMubWluKXJldHVybntyZWZyZXNoRnJvbUJ1ZmZlcjohMCxidWZmZXI6YWxpZ25EaWdpdHMob3B0cy5taW4udG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLG9wdHMucmFkaXhQb2ludCkuc3BsaXQoXCJcIiksb3B0cy5kaWdpdHMsb3B0cykucmV2ZXJzZSgpfX1pZihidWZmZXJbYnVmZmVyLmxlbmd0aC0xXT09PW9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQpe3ZhciBubWJyTXRjaHM9bmV3IFJlZ0V4cChcIiheXCIrKFwiXCIhPW9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQ/KDAsX2VzY2FwZVJlZ2V4LmRlZmF1bHQpKG9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQpK1wiP1wiOlwiXCIpKygwLF9lc2NhcGVSZWdleC5kZWZhdWx0KShvcHRzLnByZWZpeCkrXCIpKC4qKShcIisoMCxfZXNjYXBlUmVnZXguZGVmYXVsdCkob3B0cy5zdWZmaXgpKyhcIlwiIT1vcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2s/KDAsX2VzY2FwZVJlZ2V4LmRlZmF1bHQpKG9wdHMubmVnYXRpb25TeW1ib2wuYmFjaykrXCI/XCI6XCJcIikrXCIkKVwiKS5leGVjKHN0cmlwQnVmZmVyKGJ1ZmZlci5zbGljZSgpLCEwKS5yZXZlcnNlKCkuam9pbihcIlwiKSksbnVtYmVyPW5tYnJNdGNocz9ubWJyTXRjaHNbMl06XCJcIjswPT1udW1iZXImJihyZXN1bHQ9e3JlZnJlc2hGcm9tQnVmZmVyOiEwLGJ1ZmZlcjpbMF19KX1lbHNlXCJcIiE9PW9wdHMucmFkaXhQb2ludCYmYnVmZmVyWzBdPT09b3B0cy5yYWRpeFBvaW50JiYocmVzdWx0JiZyZXN1bHQuYnVmZmVyP3Jlc3VsdC5idWZmZXIuc2hpZnQoKTooYnVmZmVyLnNoaWZ0KCkscmVzdWx0PXtyZWZyZXNoRnJvbUJ1ZmZlcjohMCxidWZmZXI6c3RyaXBCdWZmZXIoYnVmZmVyKX0pKTtpZihvcHRzLmVuZm9yY2VEaWdpdHNPbkJsdXIpe3Jlc3VsdD1yZXN1bHR8fHt9O3ZhciBiZmZyPXJlc3VsdCYmcmVzdWx0LmJ1ZmZlcnx8YnVmZmVyLnNsaWNlKCkucmV2ZXJzZSgpO3Jlc3VsdC5yZWZyZXNoRnJvbUJ1ZmZlcj0hMCxyZXN1bHQuYnVmZmVyPWFsaWduRGlnaXRzKGJmZnIsb3B0cy5kaWdpdHMsb3B0cywhMCkucmV2ZXJzZSgpfX1yZXR1cm4gcmVzdWx0fSxvbktleURvd246ZnVuY3Rpb24gb25LZXlEb3duKGUsYnVmZmVyLGNhcmV0UG9zLG9wdHMpe3ZhciAkaW5wdXQ9JCh0aGlzKSxiZmZyO2lmKGUuY3RybEtleSlzd2l0Y2goZS5rZXlDb2RlKXtjYXNlIF9rZXljb2RlLmRlZmF1bHQuVVA6cmV0dXJuIHRoaXMuaW5wdXRtYXNrLl9fdmFsdWVTZXQuY2FsbCh0aGlzLHBhcnNlRmxvYXQodGhpcy5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpKStwYXJzZUludChvcHRzLnN0ZXApKSwkaW5wdXQudHJpZ2dlcihcInNldHZhbHVlXCIpLCExO2Nhc2UgX2tleWNvZGUuZGVmYXVsdC5ET1dOOnJldHVybiB0aGlzLmlucHV0bWFzay5fX3ZhbHVlU2V0LmNhbGwodGhpcyxwYXJzZUZsb2F0KHRoaXMuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKSktcGFyc2VJbnQob3B0cy5zdGVwKSksJGlucHV0LnRyaWdnZXIoXCJzZXR2YWx1ZVwiKSwhMX1pZighZS5zaGlmdEtleSYmKGUua2V5Q29kZT09PV9rZXljb2RlLmRlZmF1bHQuREVMRVRFfHxlLmtleUNvZGU9PT1fa2V5Y29kZS5kZWZhdWx0LkJBQ0tTUEFDRXx8ZS5rZXlDb2RlPT09X2tleWNvZGUuZGVmYXVsdC5CQUNLU1BBQ0VfU0FGQVJJKSYmY2FyZXRQb3MuYmVnaW4hPT1idWZmZXIubGVuZ3RoKXtpZihidWZmZXJbZS5rZXlDb2RlPT09X2tleWNvZGUuZGVmYXVsdC5ERUxFVEU/Y2FyZXRQb3MuYmVnaW4tMTpjYXJldFBvcy5lbmRdPT09b3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udClyZXR1cm4gYmZmcj1idWZmZXIuc2xpY2UoKS5yZXZlcnNlKCksXCJcIiE9PW9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQmJmJmZnIuc2hpZnQoKSxcIlwiIT09b3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrJiZiZmZyLnBvcCgpLCRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIixbYmZmci5qb2luKFwiXCIpLGNhcmV0UG9zLmJlZ2luXSksITE7aWYoITA9PT1vcHRzLl9yYWRpeERhbmNlKXt2YXIgcmFkaXhQb3M9YnVmZmVyLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KTtpZihvcHRzLmRpZ2l0c09wdGlvbmFsKXtpZigwPT09cmFkaXhQb3MpcmV0dXJuIGJmZnI9YnVmZmVyLnNsaWNlKCkucmV2ZXJzZSgpLGJmZnIucG9wKCksJGlucHV0LnRyaWdnZXIoXCJzZXR2YWx1ZVwiLFtiZmZyLmpvaW4oXCJcIiksY2FyZXRQb3MuYmVnaW4+PWJmZnIubGVuZ3RoP2JmZnIubGVuZ3RoOmNhcmV0UG9zLmJlZ2luXSksITF9ZWxzZSBpZigtMSE9PXJhZGl4UG9zJiYoY2FyZXRQb3MuYmVnaW48cmFkaXhQb3N8fGNhcmV0UG9zLmVuZDxyYWRpeFBvc3x8ZS5rZXlDb2RlPT09X2tleWNvZGUuZGVmYXVsdC5ERUxFVEUmJmNhcmV0UG9zLmJlZ2luPT09cmFkaXhQb3MpKXJldHVybiBjYXJldFBvcy5iZWdpbiE9PWNhcmV0UG9zLmVuZHx8ZS5rZXlDb2RlIT09X2tleWNvZGUuZGVmYXVsdC5CQUNLU1BBQ0UmJmUua2V5Q29kZSE9PV9rZXljb2RlLmRlZmF1bHQuQkFDS1NQQUNFX1NBRkFSSXx8Y2FyZXRQb3MuYmVnaW4rKyxiZmZyPWJ1ZmZlci5zbGljZSgpLnJldmVyc2UoKSxiZmZyLnNwbGljZShiZmZyLmxlbmd0aC1jYXJldFBvcy5iZWdpbixjYXJldFBvcy5iZWdpbi1jYXJldFBvcy5lbmQrMSksYmZmcj1hbGlnbkRpZ2l0cyhiZmZyLG9wdHMuZGlnaXRzLG9wdHMpLmpvaW4oXCJcIiksJGlucHV0LnRyaWdnZXIoXCJzZXR2YWx1ZVwiLFtiZmZyLGNhcmV0UG9zLmJlZ2luPj1iZmZyLmxlbmd0aD9yYWRpeFBvcysxOmNhcmV0UG9zLmJlZ2luXSksITF9fX19LGN1cnJlbmN5OntwcmVmaXg6XCJcIixncm91cFNlcGFyYXRvcjpcIixcIixhbGlhczpcIm51bWVyaWNcIixkaWdpdHM6MixkaWdpdHNPcHRpb25hbDohMX0sZGVjaW1hbDp7YWxpYXM6XCJudW1lcmljXCJ9LGludGVnZXI6e2FsaWFzOlwibnVtZXJpY1wiLGRpZ2l0czowfSxwZXJjZW50YWdlOnthbGlhczpcIm51bWVyaWNcIixtaW46MCxtYXg6MTAwLHN1ZmZpeDpcIiAlXCIsZGlnaXRzOjAsYWxsb3dNaW51czohMX0saW5kaWFubnM6e2FsaWFzOlwibnVtZXJpY1wiLF9tYXNrOmZ1bmN0aW9uIF9tYXNrKG9wdHMpe3JldHVyblwiKFwiK29wdHMuZ3JvdXBTZXBhcmF0b3IrXCI5OSl7KnwxfShcIitvcHRzLmdyb3VwU2VwYXJhdG9yK1wiOTk5KXsxfDF9XCJ9LGdyb3VwU2VwYXJhdG9yOlwiLFwiLHJhZGl4UG9pbnQ6XCIuXCIscGxhY2Vob2xkZXI6XCIwXCIsZGlnaXRzOjIsZGlnaXRzT3B0aW9uYWw6ITF9fSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO3ZhciBfd2luZG93PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXyg2KSksX2lucHV0bWFzaz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMikpO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiB0eXBlb2Ygb2JqfTpmdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygb2JqfSxfdHlwZW9mKG9iail9ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiZfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyl9ZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpe3ZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0PV9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtyZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKXt2YXIgU3VwZXI9X2dldFByb3RvdHlwZU9mKERlcml2ZWQpLHJlc3VsdDtpZihoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KXt2YXIgTmV3VGFyZ2V0PV9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtyZXN1bHQ9UmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsYXJndW1lbnRzLE5ld1RhcmdldCl9ZWxzZSByZXN1bHQ9U3VwZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLHJlc3VsdCl9fWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPT1fdHlwZW9mKGNhbGwpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP19hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik6Y2FsbH1mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpe2lmKHZvaWQgMD09PXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiBzZWxmfWZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3Mpe3ZhciBfY2FjaGU9XCJmdW5jdGlvblwiPT10eXBlb2YgTWFwP25ldyBNYXA6dm9pZCAwO3JldHVybiBfd3JhcE5hdGl2ZVN1cGVyPWZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3Mpe2lmKG51bGw9PT1DbGFzc3x8IV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSlyZXR1cm4gQ2xhc3M7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBfY2FjaGUpe2lmKF9jYWNoZS5oYXMoQ2xhc3MpKXJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtfY2FjaGUuc2V0KENsYXNzLFdyYXBwZXIpfWZ1bmN0aW9uIFdyYXBwZXIoKXtyZXR1cm4gX2NvbnN0cnVjdChDbGFzcyxhcmd1bWVudHMsX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKX1yZXR1cm4gV3JhcHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpXcmFwcGVyLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLENsYXNzKX0sX3dyYXBOYXRpdmVTdXBlcihDbGFzcyl9ZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsYXJncyxDbGFzcyl7cmV0dXJuIF9jb25zdHJ1Y3Q9X2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpP1JlZmxlY3QuY29uc3RydWN0OmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LGFyZ3MsQ2xhc3Mpe3ZhciBhPVtudWxsXTthLnB1c2guYXBwbHkoYSxhcmdzKTt2YXIgQ29uc3RydWN0b3I9RnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsYSksaW5zdGFuY2U9bmV3IENvbnN0cnVjdG9yO3JldHVybiBDbGFzcyYmX3NldFByb3RvdHlwZU9mKGluc3RhbmNlLENsYXNzLnByb3RvdHlwZSksaW5zdGFuY2V9LF9jb25zdHJ1Y3QuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUHJveHkpcmV0dXJuITA7dHJ5e3JldHVybiBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsW10sZnVuY3Rpb24oKXt9KSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fWZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKXtyZXR1cm4tMSE9PUZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoZm4pLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpfWZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLHApe3JldHVybiBfc2V0UHJvdG90eXBlT2Y9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobyxwKXtyZXR1cm4gby5fX3Byb3RvX189cCxvfSxfc2V0UHJvdG90eXBlT2YobyxwKX1mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobyl7cmV0dXJuIF9nZXRQcm90b3R5cGVPZj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKXtyZXR1cm4gby5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihvKX0sX2dldFByb3RvdHlwZU9mKG8pfWZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX12YXIgZG9jdW1lbnQ9X3dpbmRvdy5kZWZhdWx0LmRvY3VtZW50O2lmKGRvY3VtZW50JiZkb2N1bWVudC5oZWFkJiZkb2N1bWVudC5oZWFkLmF0dGFjaFNoYWRvdyYmX3dpbmRvdy5kZWZhdWx0LmN1c3RvbUVsZW1lbnRzJiZ2b2lkIDA9PT1fd2luZG93LmRlZmF1bHQuY3VzdG9tRWxlbWVudHMuZ2V0KFwiaW5wdXQtbWFza1wiKSl7dmFyIElucHV0bWFza0VsZW1lbnQ9ZnVuY3Rpb24oX0hUTUxFbGVtZW50KXtfaW5oZXJpdHMoSW5wdXRtYXNrRWxlbWVudCxfSFRNTEVsZW1lbnQpO3ZhciBfc3VwZXI9X2NyZWF0ZVN1cGVyKElucHV0bWFza0VsZW1lbnQpO2Z1bmN0aW9uIElucHV0bWFza0VsZW1lbnQoKXt2YXIgX3RoaXM7X2NsYXNzQ2FsbENoZWNrKHRoaXMsSW5wdXRtYXNrRWxlbWVudCksX3RoaXM9X3N1cGVyLmNhbGwodGhpcyk7dmFyIGF0dHJpYnV0ZU5hbWVzPV90aGlzLmdldEF0dHJpYnV0ZU5hbWVzKCksc2hhZG93PV90aGlzLmF0dGFjaFNoYWRvdyh7bW9kZTpcImNsb3NlZFwifSksaW5wdXQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO2Zvcih2YXIgYXR0ciBpbiBpbnB1dC50eXBlPVwidGV4dFwiLHNoYWRvdy5hcHBlbmRDaGlsZChpbnB1dCksYXR0cmlidXRlTmFtZXMpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGF0dHJpYnV0ZU5hbWVzLGF0dHIpJiZpbnB1dC5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZXNbYXR0cl0sX3RoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWVzW2F0dHJdKSk7dmFyIGltPW5ldyBfaW5wdXRtYXNrLmRlZmF1bHQ7cmV0dXJuIGltLmRhdGFBdHRyaWJ1dGU9XCJcIixpbS5tYXNrKGlucHV0KSxpbnB1dC5pbnB1dG1hc2suc2hhZG93Um9vdD1zaGFkb3csX3RoaXN9cmV0dXJuIElucHV0bWFza0VsZW1lbnR9KF93cmFwTmF0aXZlU3VwZXIoSFRNTEVsZW1lbnQpKTtfd2luZG93LmRlZmF1bHQuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwiaW5wdXQtbWFza1wiLElucHV0bWFza0VsZW1lbnQpfX1dLGluc3RhbGxlZE1vZHVsZXM9e30sX193ZWJwYWNrX3JlcXVpcmVfXy5tPW1vZHVsZXMsX193ZWJwYWNrX3JlcXVpcmVfXy5jPWluc3RhbGxlZE1vZHVsZXMsX193ZWJwYWNrX3JlcXVpcmVfXy5kPWZ1bmN0aW9uKGV4cG9ydHMsbmFtZSxnZXR0ZXIpe19fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLG5hbWUpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxuYW1lLHtlbnVtZXJhYmxlOiEwLGdldDpnZXR0ZXJ9KX0sX193ZWJwYWNrX3JlcXVpcmVfXy5yPWZ1bmN0aW9uKGV4cG9ydHMpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LF9fd2VicGFja19yZXF1aXJlX18udD1mdW5jdGlvbih2YWx1ZSxtb2RlKXtpZigxJm1vZGUmJih2YWx1ZT1fX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKSksOCZtb2RlKXJldHVybiB2YWx1ZTtpZig0Jm1vZGUmJlwib2JqZWN0XCI9PXR5cGVvZiB2YWx1ZSYmdmFsdWUmJnZhbHVlLl9fZXNNb2R1bGUpcmV0dXJuIHZhbHVlO3ZhciBucz1PYmplY3QuY3JlYXRlKG51bGwpO2lmKF9fd2VicGFja19yZXF1aXJlX18ucihucyksT2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOnZhbHVlfSksMiZtb2RlJiZcInN0cmluZ1wiIT10eXBlb2YgdmFsdWUpZm9yKHZhciBrZXkgaW4gdmFsdWUpX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLGtleSxmdW5jdGlvbihrZXkpe3JldHVybiB2YWx1ZVtrZXldfS5iaW5kKG51bGwsa2V5KSk7cmV0dXJuIG5zfSxfX3dlYnBhY2tfcmVxdWlyZV9fLm49ZnVuY3Rpb24obW9kdWxlKXt2YXIgZ2V0dGVyPW1vZHVsZSYmbW9kdWxlLl9fZXNNb2R1bGU/ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpe3JldHVybiBtb2R1bGUuZGVmYXVsdH06ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpe3JldHVybiBtb2R1bGV9O3JldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLFwiYVwiLGdldHRlciksZ2V0dGVyfSxfX3dlYnBhY2tfcmVxdWlyZV9fLm89ZnVuY3Rpb24ob2JqZWN0LHByb3BlcnR5KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxwcm9wZXJ0eSl9LF9fd2VicGFja19yZXF1aXJlX18ucD1cIlwiLF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zPTE0KTtmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKXtpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0czt2YXIgbW9kdWxlPWluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdPXtpOm1vZHVsZUlkLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsbW9kdWxlLG1vZHVsZS5leHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pLG1vZHVsZS5sPSEwLG1vZHVsZS5leHBvcnRzfXZhciBtb2R1bGVzLGluc3RhbGxlZE1vZHVsZXN9KTsiLCJ2YXIgQj1PYmplY3QuZGVmaW5lUHJvcGVydHk7dmFyIFY9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sczt2YXIgVz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFk9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTt2YXIgTD0oZix1LHApPT51IGluIGY/QihmLHUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnB9KTpmW3VdPXAseD0oZix1KT0+e2Zvcih2YXIgcCBpbiB1fHwodT17fSkpVy5jYWxsKHUscCkmJkwoZixwLHVbcF0pO2lmKFYpZm9yKHZhciBwIG9mIFYodSkpWS5jYWxsKHUscCkmJkwoZixwLHVbcF0pO3JldHVybiBmfTt2YXIgZD0oZix1LHApPT4oTChmLHR5cGVvZiB1IT1cInN5bWJvbFwiP3UrXCJcIjp1LHApLHApOyhmdW5jdGlvbihmLHUpe3R5cGVvZiBleHBvcnRzPT1cIm9iamVjdFwiJiZ0eXBlb2YgbW9kdWxlIT1cInVuZGVmaW5lZFwiP21vZHVsZS5leHBvcnRzPXUoKTp0eXBlb2YgZGVmaW5lPT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQ/ZGVmaW5lKHUpOihmPXR5cGVvZiBnbG9iYWxUaGlzIT1cInVuZGVmaW5lZFwiP2dsb2JhbFRoaXM6Znx8c2VsZixmLkp1c3RWYWxpZGF0ZT11KCkpfSkodGhpcyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2NvbnN0IGY9L14oKFtePD4oKVtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31dKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLyx1PS9eWzAtOV0rJC8scD0vXig/PS4qW0EtWmEtel0pKD89LipcXGQpW0EtWmEtelxcZF17OCx9JC8sTT0vXig/PS4qW2Etel0pKD89LipbQS1aXSkoPz0uKlxcZCkoPz0uKltAJCElKj8mXSlbQS1aYS16XFxkQCQhJSo/Jl17OCx9JC8sUD1vPT57bGV0IGU9bztyZXR1cm4gdHlwZW9mIG89PVwic3RyaW5nXCImJihlPW8udHJpbSgpKSwhZX0sTj1vPT5mLnRlc3QobyksRz0obyxlKT0+by5sZW5ndGg+ZSxBPShvLGUpPT5vLmxlbmd0aDxlLGo9bz0+dS50ZXN0KG8pLHE9bz0+cC50ZXN0KG8pLE89bz0+TS50ZXN0KG8pLHo9KG8sZSk9Pm8+ZSxEPShvLGUpPT5vPGU7dmFyIGg7KGZ1bmN0aW9uKG8pe28uUmVxdWlyZWQ9XCJyZXF1aXJlZFwiLG8uRW1haWw9XCJlbWFpbFwiLG8uTWluTGVuZ3RoPVwibWluTGVuZ3RoXCIsby5NYXhMZW5ndGg9XCJtYXhMZW5ndGhcIixvLlBhc3N3b3JkPVwicGFzc3dvcmRcIixvLk51bWJlcj1cIm51bWJlclwiLG8uTWF4TnVtYmVyPVwibWF4TnVtYmVyXCIsby5NaW5OdW1iZXI9XCJtaW5OdW1iZXJcIixvLlN0cm9uZ1Bhc3N3b3JkPVwic3Ryb25nUGFzc3dvcmRcIixvLkN1c3RvbVJlZ2V4cD1cImN1c3RvbVJlZ2V4cFwifSkoaHx8KGg9e30pKTt2YXIgZzsoZnVuY3Rpb24obyl7by5SZXF1aXJlZD1cInJlcXVpcmVkXCJ9KShnfHwoZz17fSkpO3ZhciBDOyhmdW5jdGlvbihvKXtvLkxhYmVsPVwibGFiZWxcIixvLkxhYmVsQXJyb3c9XCJsYWJlbEFycm93XCJ9KShDfHwoQz17fSkpO2NvbnN0IEg9KG8sZSk9Pntzd2l0Y2gobyl7Y2FzZSBoLlJlcXVpcmVkOnJldHVyblwiVGhlIGZpZWxkIGlzIHJlcXVpcmVkXCI7Y2FzZSBoLkVtYWlsOnJldHVyblwiRW1haWwgaGFzIGludmFsaWQgZm9ybWF0XCI7Y2FzZSBoLk1heExlbmd0aDpyZXR1cm5cIlRoZSBmaWVsZCBtdXN0IGNvbnRhaW4gYSBtYXhpbXVtIG9mIDp2YWx1ZSBjaGFyYWN0ZXJzXCIucmVwbGFjZShcIjp2YWx1ZVwiLFN0cmluZyhlKSk7Y2FzZSBoLk1pbkxlbmd0aDpyZXR1cm5cIlRoZSBmaWVsZCBtdXN0IGNvbnRhaW4gYSBtaW5pbXVtIG9mIDp2YWx1ZSBjaGFyYWN0ZXJzXCIucmVwbGFjZShcIjp2YWx1ZVwiLFN0cmluZyhlKSk7Y2FzZSBoLlBhc3N3b3JkOnJldHVyblwiUGFzc3dvcmQgbXVzdCBjb250YWluIG1pbmltdW0gZWlnaHQgY2hhcmFjdGVycywgYXQgbGVhc3Qgb25lIGxldHRlciBhbmQgb25lIG51bWJlclwiO2Nhc2UgaC5OdW1iZXI6cmV0dXJuXCJWYWx1ZSBzaG91bGQgYmUgYSBudW1iZXJcIjtjYXNlIGguU3Ryb25nUGFzc3dvcmQ6cmV0dXJuXCJQYXNzd29yZCBzaG91bGQgY29udGFpbiBtaW5pbXVtIGVpZ2h0IGNoYXJhY3RlcnMsIGF0IGxlYXN0IG9uZSB1cHBlcmNhc2UgbGV0dGVyLCBvbmUgbG93ZXJjYXNlIGxldHRlciwgb25lIG51bWJlciBhbmQgb25lIHNwZWNpYWwgY2hhcmFjdGVyXCI7Y2FzZSBoLk1heE51bWJlcjpyZXR1cm5cIk51bWJlciBzaG91bGQgYmUgbGVzcyBvciBlcXVhbCB0aGFuIDp2YWx1ZVwiLnJlcGxhY2UoXCI6dmFsdWVcIixTdHJpbmcoZSkpO2Nhc2UgaC5NaW5OdW1iZXI6cmV0dXJuXCJOdW1iZXIgc2hvdWxkIGJlIG1vcmUgb3IgZXF1YWwgdGhhbiA6dmFsdWVcIi5yZXBsYWNlKFwiOnZhbHVlXCIsU3RyaW5nKGUpKTtkZWZhdWx0OnJldHVyblwiVmFsdWUgaXMgaW5jb3JyZWN0XCJ9fSxfPW89Pntzd2l0Y2gobyl7Y2FzZSBnLlJlcXVpcmVkOnJldHVyblwiVGhlIGZpZWxkIGlzIHJlcXVpcmVkXCI7ZGVmYXVsdDpyZXR1cm5cIkdyb3VwIGlzIGluY29ycmVjdFwifX0sdj1vPT4hIW8mJnR5cGVvZiBvLnRoZW49PVwiZnVuY3Rpb25cIixYPVwiLmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWxbZGF0YS10b29sdGlwPXRydWVde3Bvc2l0aW9uOmZpeGVkO3BhZGRpbmc6NHB4IDhweDtiYWNrZ3JvdW5kOiM0MjNmM2Y7Y29sb3I6I2ZmZjt3aGl0ZS1zcGFjZTpub3dyYXA7ei1pbmRleDoxMDtib3JkZXItcmFkaXVzOjRweDt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNXB4KX0uanVzdC12YWxpZGF0ZS1lcnJvci1sYWJlbFtkYXRhLXRvb2x0aXA9dHJ1ZV06YmVmb3Jle2NvbnRlbnQ6Jyc7d2lkdGg6MDtoZWlnaHQ6MDtib3JkZXItbGVmdDpzb2xpZCA1cHggdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OnNvbGlkIDVweCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOnNvbGlkIDVweCAjNDIzZjNmO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MztkaXNwbGF5OmJsb2NrO2JvdHRvbTotNXB4O3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTtsZWZ0OmNhbGMoNTAlIC0gNXB4KX0uanVzdC12YWxpZGF0ZS1lcnJvci1sYWJlbFtkYXRhLXRvb2x0aXA9dHJ1ZV1bZGF0YS1kaXJlY3Rpb249bGVmdF17dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTVweCl9Lmp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWxbZGF0YS10b29sdGlwPXRydWVdW2RhdGEtZGlyZWN0aW9uPWxlZnRdOmJlZm9yZXtyaWdodDotN3B4O2JvdHRvbTphdXRvO2xlZnQ6YXV0bzt0b3A6Y2FsYyg1MCUgLSAycHgpO3RyYW5zZm9ybTpyb3RhdGUoOTBkZWcpfS5qdXN0LXZhbGlkYXRlLWVycm9yLWxhYmVsW2RhdGEtdG9vbHRpcD10cnVlXVtkYXRhLWRpcmVjdGlvbj1yaWdodF17dHJhbnNmb3JtOnRyYW5zbGF0ZVgoNXB4KX0uanVzdC12YWxpZGF0ZS1lcnJvci1sYWJlbFtkYXRhLXRvb2x0aXA9dHJ1ZV1bZGF0YS1kaXJlY3Rpb249cmlnaHRdOmJlZm9yZXtyaWdodDphdXRvO2JvdHRvbTphdXRvO2xlZnQ6LTdweDt0b3A6Y2FsYyg1MCUgLSAycHgpO3RyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKX0uanVzdC12YWxpZGF0ZS1lcnJvci1sYWJlbFtkYXRhLXRvb2x0aXA9dHJ1ZV1bZGF0YS1kaXJlY3Rpb249Ym90dG9tXXt0cmFuc2Zvcm06dHJhbnNsYXRlWSg1cHgpfS5qdXN0LXZhbGlkYXRlLWVycm9yLWxhYmVsW2RhdGEtdG9vbHRpcD10cnVlXVtkYXRhLWRpcmVjdGlvbj1ib3R0b21dOmJlZm9yZXtyaWdodDphdXRvO2JvdHRvbTphdXRvO2xlZnQ6Y2FsYyg1MCUgLSA1cHgpO3RvcDotNXB4O3RyYW5zZm9ybTpyb3RhdGUoMCl9XCIsRT01LFM9e2Vycm9yRmllbGRTdHlsZTp7Y29sb3I6XCIjYjgxMTExXCIsYm9yZGVyOlwiMXB4IHNvbGlkICNCODExMTFcIn0sZXJyb3JGaWVsZENzc0NsYXNzOlwianVzdC12YWxpZGF0ZS1lcnJvci1maWVsZFwiLGVycm9yTGFiZWxTdHlsZTp7Y29sb3I6XCIjYjgxMTExXCJ9LGVycm9yTGFiZWxDc3NDbGFzczpcImp1c3QtdmFsaWRhdGUtZXJyb3ItbGFiZWxcIixmb2N1c0ludmFsaWRGaWVsZDohMCxsb2NrRm9ybTohMCx0ZXN0aW5nTW9kZTohMX07Y2xhc3MgWntjb25zdHJ1Y3RvcihlLHIsdCl7ZCh0aGlzLFwiZm9ybVwiLG51bGwpO2QodGhpcyxcImZpZWxkc1wiLHt9KTtkKHRoaXMsXCJncm91cEZpZWxkc1wiLHt9KTtkKHRoaXMsXCJlcnJvcnNcIix7fSk7ZCh0aGlzLFwiaXNWYWxpZFwiLCExKTtkKHRoaXMsXCJpc1N1Ym1pdHRlZFwiLCExKTtkKHRoaXMsXCJnbG9iYWxDb25maWdcIixTKTtkKHRoaXMsXCJlcnJvckxhYmVsc1wiLFtdKTtkKHRoaXMsXCJldmVudExpc3RlbmVyc1wiLFtdKTtkKHRoaXMsXCJkaWN0TG9jYWxlXCIsW10pO2QodGhpcyxcImN1cnJlbnRMb2NhbGVcIik7ZCh0aGlzLFwiY3VzdG9tU3R5bGVUYWdzXCIse30pO2QodGhpcyxcIm9uU3VjY2Vzc0NhbGxiYWNrXCIpO2QodGhpcyxcIm9uRmFpbENhbGxiYWNrXCIpO2QodGhpcyxcInRvb2x0aXBzXCIsW10pO2QodGhpcyxcImxhc3RTY3JvbGxQb3NpdGlvblwiKTtkKHRoaXMsXCJpc1Njcm9sbFRpY2tcIik7ZCh0aGlzLFwicmVmcmVzaEFsbFRvb2x0aXBzXCIsKCk9Pnt0aGlzLnRvb2x0aXBzLmZvckVhY2goZT0+e2UucmVmcmVzaCgpfSl9KTtkKHRoaXMsXCJoYW5kbGVEb2N1bWVudFNjcm9sbFwiLCgpPT57dGhpcy5sYXN0U2Nyb2xsUG9zaXRpb249d2luZG93LnNjcm9sbFksdGhpcy5pc1Njcm9sbFRpY2t8fCh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT57dGhpcy5yZWZyZXNoQWxsVG9vbHRpcHMoKSx0aGlzLmlzU2Nyb2xsVGljaz0hMX0pLHRoaXMuaXNTY3JvbGxUaWNrPSEwKX0pO2QodGhpcyxcImZvcm1TdWJtaXRIYW5kbGVyXCIsZT0+e2UucHJldmVudERlZmF1bHQoKSx0aGlzLmlzU3VibWl0dGVkPSEwLHRoaXMuZ2xvYmFsQ29uZmlnLmxvY2tGb3JtJiZ0aGlzLmxvY2tGb3JtKCksdGhpcy52YWxpZGF0ZSgpLnRoZW4oKCk9Pnt2YXIgcix0O3RoaXMuaXNWYWxpZD8ocj10aGlzLm9uU3VjY2Vzc0NhbGxiYWNrKT09bnVsbHx8ci5jYWxsKHRoaXMsZSk6KHQ9dGhpcy5vbkZhaWxDYWxsYmFjayk9PW51bGx8fHQuY2FsbCh0aGlzLHRoaXMuZmllbGRzKSx0aGlzLmdsb2JhbENvbmZpZy5sb2NrRm9ybSYmdGhpcy51bmxvY2tGb3JtKCl9KX0pO2QodGhpcyxcImhhbmRsZUZpZWxkQ2hhbmdlXCIsZT0+e2xldCByLHQ7Zm9yKGNvbnN0IGkgaW4gdGhpcy5maWVsZHMpe2NvbnN0IHM9dGhpcy5maWVsZHNbaV07aWYocy5lbGVtPT09ZSl7cj1zLHQ9aTticmVha319IXJ8fCF0fHx0aGlzLnZhbGlkYXRlRmllbGQodCxyLCEwKX0pO2QodGhpcyxcImhhbmRsZUdyb3VwQ2hhbmdlXCIsZT0+e2xldCByLHQ7Zm9yKGNvbnN0IGkgaW4gdGhpcy5ncm91cEZpZWxkcyl7Y29uc3Qgcz10aGlzLmdyb3VwRmllbGRzW2ldO2lmKHMuZWxlbXMuZmluZChhPT5hPT09ZSkpe3I9cyx0PWk7YnJlYWt9fSFyfHwhdHx8dGhpcy52YWxpZGF0ZUdyb3VwKHQscil9KTtkKHRoaXMsXCJoYW5kbGVyQ2hhbmdlXCIsZT0+eyFlLnRhcmdldHx8KHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UoZS50YXJnZXQpLHRoaXMuaGFuZGxlR3JvdXBDaGFuZ2UoZS50YXJnZXQpLHRoaXMucmVuZGVyRXJyb3JzKCkpfSk7dGhpcy5pbml0aWFsaXplKGUscix0KX1pbml0aWFsaXplKGUscix0KXtpZih0aGlzLmZvcm09bnVsbCx0aGlzLmVycm9ycz17fSx0aGlzLmlzVmFsaWQ9ITEsdGhpcy5pc1N1Ym1pdHRlZD0hMSx0aGlzLmdsb2JhbENvbmZpZz1TLHRoaXMuZXJyb3JMYWJlbHM9W10sdGhpcy5ldmVudExpc3RlbmVycz1bXSx0aGlzLmN1c3RvbVN0eWxlVGFncz17fSx0aGlzLnRvb2x0aXBzPVtdLHR5cGVvZiBlPT1cInN0cmluZ1wiKXtjb25zdCBpPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk7aWYoIWkpdGhyb3cgRXJyb3IoYEZvcm0gd2l0aCAke2V9IHNlbGVjdG9yIG5vdCBmb3VuZCEgUGxlYXNlIGNoZWNrIHRoZSBmb3JtIHNlbGVjdG9yYCk7dGhpcy5zZXRGb3JtKGkpfWVsc2UgaWYoZSBpbnN0YW5jZW9mIEhUTUxGb3JtRWxlbWVudCl0aGlzLnNldEZvcm0oZSk7ZWxzZSB0aHJvdyBFcnJvcihcIkZvcm0gc2VsZWN0b3IgaXMgbm90IHZhbGlkLiBQbGVhc2Ugc3BlY2lmeSBhIHN0cmluZyBzZWxlY3RvciBvciBhIERPTSBlbGVtZW50LlwiKTtpZih0aGlzLmdsb2JhbENvbmZpZz14KHgoe30sUyksciksdCYmKHRoaXMuZGljdExvY2FsZT10KSx0aGlzLmlzVG9vbHRpcCgpKXtjb25zdCBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtpLnRleHRDb250ZW50PVgsdGhpcy5jdXN0b21TdHlsZVRhZ3NbQy5MYWJlbF09ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChpKSx0aGlzLmFkZExpc3RlbmVyKFwic2Nyb2xsXCIsZG9jdW1lbnQsdGhpcy5oYW5kbGVEb2N1bWVudFNjcm9sbCl9fWdldExvY2FsaXNlZFN0cmluZyhlKXt2YXIgdDtyZXR1cm4hdGhpcy5jdXJyZW50TG9jYWxlfHwhdGhpcy5kaWN0TG9jYWxlLmxlbmd0aD9lOigodD10aGlzLmRpY3RMb2NhbGUuZmluZChpPT5pLmtleT09PWUpKT09bnVsbD92b2lkIDA6dC5kaWN0W3RoaXMuY3VycmVudExvY2FsZV0pfHxlfWdldEZpZWxkRXJyb3JNZXNzYWdlKGUpe3JldHVybiB0aGlzLmdldExvY2FsaXNlZFN0cmluZyhlLmVycm9yTWVzc2FnZSl8fEgoZS5ydWxlLGUudmFsdWUpfWdldEdyb3VwRXJyb3JNZXNzYWdlKGUpe3JldHVybiB0aGlzLmdldExvY2FsaXNlZFN0cmluZyhlLmVycm9yTWVzc2FnZSl8fF8oZS5ydWxlKX1zZXRGaWVsZEludmFsaWQoZSxyKXt0aGlzLmZpZWxkc1tlXS5pc1ZhbGlkPSExLHRoaXMuZmllbGRzW2VdLmVycm9yTWVzc2FnZT10aGlzLmdldEZpZWxkRXJyb3JNZXNzYWdlKHIpfXNldEdyb3VwSW52YWxpZChlLHIpe3RoaXMuZ3JvdXBGaWVsZHNbZV0uaXNWYWxpZD0hMSx0aGlzLmdyb3VwRmllbGRzW2VdLmVycm9yTWVzc2FnZT10aGlzLmdldEdyb3VwRXJyb3JNZXNzYWdlKHIpfXNldEdyb3VwVmFsaWQoZSl7dGhpcy5ncm91cEZpZWxkc1tlXS5pc1ZhbGlkPSEwfWdldEVsZW1WYWx1ZShlKXtzd2l0Y2goZS50eXBlKXtjYXNlXCJjaGVja2JveFwiOnJldHVybiBlLmNoZWNrZWQ7ZGVmYXVsdDpyZXR1cm4gZS52YWx1ZX19dmFsaWRhdGVHcm91cFJ1bGUoZSxyLHQsaSl7c3dpdGNoKGkucnVsZSl7Y2FzZSBnLlJlcXVpcmVkOihyPT09XCJyYWRpb1wifHxyPT09XCJjaGVja2JveFwiKSYmKHQuZXZlcnkocz0+IXMuY2hlY2tlZCk/dGhpcy5zZXRHcm91cEludmFsaWQoZSxpKTp0aGlzLnNldEdyb3VwVmFsaWQoZSkpfX12YWxpZGF0ZUZpZWxkUnVsZShlLHIsdCxpPSExKXtjb25zdCBzPXQudmFsdWUsYT10aGlzLmdldEVsZW1WYWx1ZShyKTtzd2l0Y2godC5ydWxlKXtjYXNlIGguUmVxdWlyZWQ6e1AoYSkmJnRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9Y2FzZSBoLkVtYWlsOntpZih0eXBlb2YgYSE9XCJzdHJpbmdcIil7dGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTticmVha31OKGEpfHx0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfWNhc2UgaC5NYXhMZW5ndGg6e2lmKCFzKXtjb25zb2xlLmVycm9yKGBWYWx1ZSBmb3IgJHt0LnJ1bGV9IHJ1bGUgZm9yIFske2V9XSBmaWVsZCBpcyBub3QgZGVmaW5lZC4gVGhlIGZpZWxkIHdpbGwgYmUgYWx3YXlzIGludmFsaWQuYCksdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTtyZXR1cm59aWYodHlwZW9mIHMhPVwibnVtYmVyXCIpe2NvbnNvbGUuZXJyb3IoYFZhbHVlIGZvciAke3QucnVsZX0gcnVsZSBmb3IgWyR7ZX1dIHNob3VsZCBiZSBhIG51bWJlci4gVGhlIGZpZWxkIHdpbGwgYmUgYWx3YXlzIGludmFsaWQuYCksdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTtyZXR1cm59aWYodHlwZW9mIGEhPVwic3RyaW5nXCIpe3RoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9RyhhLHMpJiZ0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfWNhc2UgaC5NaW5MZW5ndGg6e2lmKCFzKXtjb25zb2xlLmVycm9yKGBWYWx1ZSBmb3IgJHt0LnJ1bGV9IHJ1bGUgZm9yIFske2V9XSBmaWVsZCBpcyBub3QgZGVmaW5lZC4gVGhlIGZpZWxkIHdpbGwgYmUgYWx3YXlzIGludmFsaWQuYCksdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTtyZXR1cm59aWYodHlwZW9mIHMhPVwibnVtYmVyXCIpe2NvbnNvbGUuZXJyb3IoYFZhbHVlIGZvciAke3QucnVsZX0gcnVsZSBmb3IgWyR7ZX1dIHNob3VsZCBiZSBhIG51bWJlci4gVGhlIGZpZWxkIHdpbGwgYmUgYWx3YXlzIGludmFsaWQuYCksdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTtyZXR1cm59aWYodHlwZW9mIGEhPVwic3RyaW5nXCIpe3RoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9QShhLHMpJiZ0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfWNhc2UgaC5QYXNzd29yZDp7aWYodHlwZW9mIGEhPVwic3RyaW5nXCIpe3RoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9cShhKXx8dGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTticmVha31jYXNlIGguU3Ryb25nUGFzc3dvcmQ6e2lmKHR5cGVvZiBhIT1cInN0cmluZ1wiKXt0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfU8oYSl8fHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9Y2FzZSBoLk51bWJlcjp7aWYodHlwZW9mIGEhPVwic3RyaW5nXCIpe3RoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9aihhKXx8dGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTticmVha31jYXNlIGguTWF4TnVtYmVyOntpZighcyl7Y29uc29sZS5lcnJvcihgVmFsdWUgZm9yICR7dC5ydWxlfSBydWxlIGZvciBbJHtlfV0gZmllbGQgaXMgbm90IGRlZmluZWQuIFRoZSBmaWVsZCB3aWxsIGJlIGFsd2F5cyBpbnZhbGlkLmApLHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7cmV0dXJufWlmKHR5cGVvZiBzIT1cIm51bWJlclwiKXtjb25zb2xlLmVycm9yKGBWYWx1ZSBmb3IgJHt0LnJ1bGV9IHJ1bGUgZm9yIFske2V9XSBmaWVsZCBzaG91bGQgYmUgYSBudW1iZXIuIFRoZSBmaWVsZCB3aWxsIGJlIGFsd2F5cyBpbnZhbGlkLmApLHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7cmV0dXJufWlmKHR5cGVvZiBhIT1cInN0cmluZ1wiKXt0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfWNvbnN0IGw9K2E7KE51bWJlci5pc05hTihsKXx8eihsLHMpKSYmdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTticmVha31jYXNlIGguTWluTnVtYmVyOntpZighcyl7Y29uc29sZS5lcnJvcihgVmFsdWUgZm9yICR7dC5ydWxlfSBydWxlIGZvciBbJHtlfV0gZmllbGQgaXMgbm90IGRlZmluZWQuIFRoZSBmaWVsZCB3aWxsIGJlIGFsd2F5cyBpbnZhbGlkLmApLHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7cmV0dXJufWlmKHR5cGVvZiBzIT1cIm51bWJlclwiKXtjb25zb2xlLmVycm9yKGBWYWx1ZSBmb3IgJHt0LnJ1bGV9IHJ1bGUgZm9yIFske2V9XSBmaWVsZCBzaG91bGQgYmUgYSBudW1iZXIuIFRoZSBmaWVsZCB3aWxsIGJlIGFsd2F5cyBpbnZhbGlkLmApLHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7cmV0dXJufWlmKHR5cGVvZiBhIT1cInN0cmluZ1wiKXt0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO2JyZWFrfWNvbnN0IGw9K2E7KE51bWJlci5pc05hTihsKXx8RChsLHMpKSYmdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTticmVha31jYXNlIGguQ3VzdG9tUmVnZXhwOntpZighcyl7Y29uc29sZS5lcnJvcihgVmFsdWUgZm9yICR7dC5ydWxlfSBydWxlIGZvciBbJHtlfV0gZmllbGQgaXMgbm90IGRlZmluZWQuIFRoaXMgZmllbGQgd2lsbCBiZSBhbHdheXMgaW52YWxpZC5gKSx0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO3JldHVybn1sZXQgbDt0cnl7bD1uZXcgUmVnRXhwKHMpfWNhdGNoe2NvbnNvbGUuZXJyb3IoYFZhbHVlIGZvciAke3QucnVsZX0gcnVsZSBmb3IgWyR7ZX1dIHNob3VsZCBiZSBhIHZhbGlkIHJlZ2V4cC4gVGhpcyBmaWVsZCB3aWxsIGJlIGFsd2F5cyBpbnZhbGlkLmApLHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9bC50ZXN0KFN0cmluZyhhKSl8fHRoaXMuc2V0RmllbGRJbnZhbGlkKGUsdCk7YnJlYWt9ZGVmYXVsdDp7aWYoIXQudmFsaWRhdG9yKXtjb25zb2xlLmVycm9yKGBWYWxpZGF0b3IgZm9yIGN1c3RvbSBydWxlIGZvciBbJHtlfV0gZmllbGQgaXMgbm90IGRlZmluZWQuIFRoaXMgZmllbGQgd2lsbCBiZSBhbHdheXMgaW52YWxpZC5gKSx0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO3JldHVybn1pZih0eXBlb2YgdC52YWxpZGF0b3IhPVwiZnVuY3Rpb25cIil7Y29uc29sZS5lcnJvcihgVmFsaWRhdG9yIGZvciBjdXN0b20gcnVsZSBmb3IgWyR7ZX1dIGZpZWxkIHNob3VsZCBiZSBhIGZ1bmN0aW9uLiBUaGlzIGZpZWxkIHdpbGwgYmUgYWx3YXlzIGludmFsaWQuYCksdGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KTtyZXR1cm59Y29uc3QgbD10LnZhbGlkYXRvcihhLHRoaXMuZmllbGRzKTtpZih0eXBlb2YgbCE9XCJib29sZWFuXCImJnR5cGVvZiBsIT1cImZ1bmN0aW9uXCImJmNvbnNvbGUuZXJyb3IoYFZhbGlkYXRvciByZXR1cm4gdmFsdWUgZm9yIFske2V9XSBmaWVsZCBzaG91bGQgYmUgYm9vbGVhbiBvciBmdW5jdGlvbi4gSXQgd2lsbCBiZSBjYXN0IHRvIGJvb2xlYW4uYCksdHlwZW9mIGw9PVwiZnVuY3Rpb25cIiYmIWkpe2NvbnN0IGM9bCgpO2lmKCF2KGMpKXtjb25zb2xlLmVycm9yKGBWYWxpZGF0b3IgZnVuY3Rpb24gZm9yIGN1c3RvbSBydWxlIGZvciBbJHtlfV0gZmllbGQgc2hvdWxkIHJldHVybiBhIFByb21pc2UuIFRoaXMgZmllbGQgd2lsbCBiZSBhbHdheXMgaW52YWxpZC5gKSx0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpO3JldHVybn1yZXR1cm4gYy50aGVuKG09PnttfHx0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpfSkuY2F0Y2goKCk9Pnt0aGlzLnNldEZpZWxkSW52YWxpZChlLHQpfSl9bHx8dGhpcy5zZXRGaWVsZEludmFsaWQoZSx0KX19fXZhbGlkYXRlRmllbGQoZSxyLHQ9ITEpe3IuaXNWYWxpZD0hMDtjb25zdCBpPVtdO3JldHVyblsuLi5yLnJ1bGVzXS5yZXZlcnNlKCkuZm9yRWFjaChzPT57Y29uc3QgYT10aGlzLnZhbGlkYXRlRmllbGRSdWxlKGUsci5lbGVtLHMsdCk7dihhKSYmaS5wdXNoKGEpfSksUHJvbWlzZS5hbGxTZXR0bGVkKGkpfXZhbGlkYXRlR3JvdXAoZSxyKXtjb25zdCB0PVtdO3JldHVyblsuLi5yLnJ1bGVzXS5yZXZlcnNlKCkuZm9yRWFjaChpPT57Y29uc3Qgcz10aGlzLnZhbGlkYXRlR3JvdXBSdWxlKGUsci50eXBlLHIuZWxlbXMsaSk7dihzKSYmdC5wdXNoKHMpfSksUHJvbWlzZS5hbGxTZXR0bGVkKHQpfWZvY3VzSW52YWxpZEZpZWxkKCl7Zm9yKGNvbnN0IGUgaW4gdGhpcy5maWVsZHMpe2NvbnN0IHI9dGhpcy5maWVsZHNbZV07aWYoIXIuaXNWYWxpZCl7c2V0VGltZW91dCgoKT0+ci5lbGVtLmZvY3VzKCksMCk7YnJlYWt9fX1hZnRlclN1Ym1pdFZhbGlkYXRpb24oKXt0aGlzLnJlbmRlckVycm9ycygpLHRoaXMuZ2xvYmFsQ29uZmlnLmZvY3VzSW52YWxpZEZpZWxkJiZ0aGlzLmZvY3VzSW52YWxpZEZpZWxkKCl9dmFsaWRhdGUoKXtyZXR1cm4gbmV3IFByb21pc2UoZT0+e2NvbnN0IHI9W107T2JqZWN0LmtleXModGhpcy5maWVsZHMpLmZvckVhY2godD0+e2NvbnN0IGk9dGhpcy5maWVsZHNbdF0scz10aGlzLnZhbGlkYXRlRmllbGQodCxpKTt2KHMpJiZyLnB1c2gocyl9KSxPYmplY3Qua2V5cyh0aGlzLmdyb3VwRmllbGRzKS5mb3JFYWNoKHQ9Pntjb25zdCBpPXRoaXMuZ3JvdXBGaWVsZHNbdF0scz10aGlzLnZhbGlkYXRlR3JvdXAodCxpKTt2KHMpJiZyLnB1c2gocyl9KSxyLmxlbmd0aD9Qcm9taXNlLmFsbFNldHRsZWQocikudGhlbigoKT0+e3RoaXMuYWZ0ZXJTdWJtaXRWYWxpZGF0aW9uKCksZSghMCl9KToodGhpcy5hZnRlclN1Ym1pdFZhbGlkYXRpb24oKSxlKCExKSl9KX1zZXRGb3JtKGUpe3RoaXMuZm9ybT1lLHRoaXMuZm9ybS5zZXRBdHRyaWJ1dGUoXCJub3ZhbGlkYXRlXCIsXCJub3ZhbGlkYXRlXCIpLHRoaXMucmVtb3ZlTGlzdGVuZXIoXCJzdWJtaXRcIix0aGlzLmZvcm0sdGhpcy5mb3JtU3VibWl0SGFuZGxlciksdGhpcy5hZGRMaXN0ZW5lcihcInN1Ym1pdFwiLHRoaXMuZm9ybSx0aGlzLmZvcm1TdWJtaXRIYW5kbGVyKX1hZGRMaXN0ZW5lcihlLHIsdCl7ci5hZGRFdmVudExpc3RlbmVyKGUsdCksdGhpcy5ldmVudExpc3RlbmVycy5wdXNoKHt0eXBlOmUsZWxlbTpyLGZ1bmM6dH0pfXJlbW92ZUxpc3RlbmVyKGUscix0KXtyLnJlbW92ZUV2ZW50TGlzdGVuZXIoZSx0KX1hZGRGaWVsZChlLHIsdCl7aWYodHlwZW9mIGUhPVwic3RyaW5nXCIpdGhyb3cgRXJyb3IoXCJGaWVsZCBzZWxlY3RvciBpcyBub3QgdmFsaWQuIFBsZWFzZSBzcGVjaWZ5IGEgc3RyaW5nIHNlbGVjdG9yLlwiKTtjb25zdCBpPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk7aWYoIWkpdGhyb3cgRXJyb3IoYEZpZWxkIHdpdGggJHtlfSBzZWxlY3RvciBub3QgZm91bmQhIFBsZWFzZSBjaGVjayB0aGUgZmllbGQgc2VsZWN0b3IuYCk7aWYoIUFycmF5LmlzQXJyYXkocil8fCFyLmxlbmd0aCl0aHJvdyBFcnJvcihgUnVsZXMgYXJndW1lbnQgZm9yIHRoZSBmaWVsZCBbJHtlfV0gc2hvdWxkIGJlIGFuIGFycmF5IGFuZCBzaG91bGQgY29udGFpbiBhdCBsZWFzdCAxIGVsZW1lbnQuYCk7cmV0dXJuIHIuZm9yRWFjaChzPT57aWYoIShcInJ1bGVcImluIHN8fFwidmFsaWRhdG9yXCJpbiBzKSl0aHJvdyBFcnJvcihgUnVsZXMgYXJndW1lbnQgZm9yIHRoZSBmaWVsZCBbJHtlfV0gbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBydWxlIG9yIHZhbGlkYXRvciBwcm9wZXJ0eS5gKTtpZighcy52YWxpZGF0b3ImJighcy5ydWxlfHwhT2JqZWN0LnZhbHVlcyhoKS5pbmNsdWRlcyhzLnJ1bGUpKSl0aHJvdyBFcnJvcihgUnVsZSBzaG91bGQgYmUgb25lIG9mIHRoZXNlIHR5cGVzOiAke09iamVjdC52YWx1ZXMoaCkuam9pbihcIiwgXCIpfS4gUHJvdmlkZWQgdmFsdWU6ICR7cy5ydWxlfWApfSksdGhpcy5maWVsZHNbZV09e2VsZW06aSxydWxlczpyLGlzVmFsaWQ6dm9pZCAwLGNvbmZpZzp0fSx0aGlzLnNldExpc3RlbmVycyhpKSx0aGlzLmlzU3VibWl0dGVkJiZ0aGlzLnZhbGlkYXRlKCksdGhpc31yZW1vdmVGaWVsZChlKXtpZih0eXBlb2YgZSE9XCJzdHJpbmdcIil0aHJvdyBFcnJvcihcIkZpZWxkIHNlbGVjdG9yIGlzIG5vdCB2YWxpZC4gUGxlYXNlIHNwZWNpZnkgYSBzdHJpbmcgc2VsZWN0b3IuXCIpO3JldHVybiB0aGlzLmZpZWxkc1tlXT8odGhpcy5kZXN0cm95KCksZGVsZXRlIHRoaXMuZmllbGRzW2VdLHRoaXMucmVmcmVzaCgpLHRoaXMpOihjb25zb2xlLmVycm9yKFwiRmllbGQgbm90IGZvdW5kLiBDaGVjayB0aGUgZmllbGQgc2VsZWN0b3IuXCIpLHRoaXMpfWFkZFJlcXVpcmVkR3JvdXAoZSxyLHQpe2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiKXRocm93IEVycm9yKFwiR3JvdXAgc2VsZWN0b3IgaXMgbm90IHZhbGlkLiBQbGVhc2Ugc3BlY2lmeSBhIHN0cmluZyBzZWxlY3Rvci5cIik7Y29uc3QgaT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpO2lmKCFpKXRocm93IEVycm9yKGBHcm91cCB3aXRoICR7ZX0gc2VsZWN0b3Igbm90IGZvdW5kISBQbGVhc2UgY2hlY2sgdGhlIGdyb3VwIHNlbGVjdG9yLmApO2NvbnN0IHM9aS5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRcIiksYT1BcnJheS5mcm9tKHMpLmV2ZXJ5KGM9PmMudHlwZT09PVwicmFkaW9cIiksbD1BcnJheS5mcm9tKHMpLmV2ZXJ5KGM9PmMudHlwZT09PVwiY2hlY2tib3hcIik7aWYoIWEmJiFsKXRocm93IEVycm9yKFwiR3JvdXAgc2hvdWxkIGNvbnRhaW4gZWl0aGVyIG9yIGNoZWNrYm94ZXMgb3IgcmFkaW8gYnV0dG9uc1wiKTtyZXR1cm4gdGhpcy5ncm91cEZpZWxkc1tlXT17cnVsZXM6W3tydWxlOmcuUmVxdWlyZWQsZXJyb3JNZXNzYWdlOnJ9XSxncm91cEVsZW06aSxlbGVtczpBcnJheS5mcm9tKHMpLHR5cGU6YT9cInJhZGlvXCI6XCJjaGVja2JveFwiLGlzRGlydHk6ITEsaXNWYWxpZDp2b2lkIDAsY29uZmlnOnR9LHMuZm9yRWFjaChjPT57dGhpcy5zZXRMaXN0ZW5lcnMoYyl9KSx0aGlzfWdldExpc3RlbmVyVHlwZShlKXtzd2l0Y2goZSl7Y2FzZVwiY2hlY2tib3hcIjpjYXNlXCJzZWxlY3Qtb25lXCI6Y2FzZVwicmFkaW9cIjpyZXR1cm5cImNoYW5nZVwiO2RlZmF1bHQ6cmV0dXJuXCJrZXl1cFwifX1zZXRMaXN0ZW5lcnMoZSl7Y29uc3Qgcj10aGlzLmdldExpc3RlbmVyVHlwZShlLnR5cGUpO3RoaXMucmVtb3ZlTGlzdGVuZXIocixlLHRoaXMuaGFuZGxlckNoYW5nZSksdGhpcy5hZGRMaXN0ZW5lcihyLGUsdGhpcy5oYW5kbGVyQ2hhbmdlKX1jbGVhckVycm9ycygpe3ZhciBlLHIsdDt0aGlzLmVycm9yTGFiZWxzLmZvckVhY2goaT0+aS5yZW1vdmUoKSk7Zm9yKGNvbnN0IGkgaW4gdGhpcy5maWVsZHMpe2NvbnN0IHM9dGhpcy5maWVsZHNbaV0sYT0oKGU9cy5jb25maWcpPT1udWxsP3ZvaWQgMDplLmVycm9yRmllbGRTdHlsZSl8fHRoaXMuZ2xvYmFsQ29uZmlnLmVycm9yRmllbGRTdHlsZTtPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGw9PntzLmVsZW0uc3R5bGVbbF09XCJcIn0pLHMuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCgocj1zLmNvbmZpZyk9PW51bGw/dm9pZCAwOnIuZXJyb3JGaWVsZENzc0NsYXNzKXx8dGhpcy5nbG9iYWxDb25maWcuZXJyb3JGaWVsZENzc0NsYXNzKX1mb3IoY29uc3QgaSBpbiB0aGlzLmdyb3VwRmllbGRzKXtjb25zdCBzPXRoaXMuZ3JvdXBGaWVsZHNbaV0sYT0oKHQ9cy5jb25maWcpPT1udWxsP3ZvaWQgMDp0LmVycm9yRmllbGRTdHlsZSl8fHRoaXMuZ2xvYmFsQ29uZmlnLmVycm9yRmllbGRTdHlsZTtPYmplY3Qua2V5cyhhKS5mb3JFYWNoKGw9PntzLmVsZW1zLmZvckVhY2goYz0+e3ZhciBtO2Muc3R5bGVbbF09XCJcIixjLmNsYXNzTGlzdC5yZW1vdmUoKChtPXMuY29uZmlnKT09bnVsbD92b2lkIDA6bS5lcnJvckZpZWxkQ3NzQ2xhc3MpfHx0aGlzLmdsb2JhbENvbmZpZy5lcnJvckZpZWxkQ3NzQ2xhc3MpfSl9KX10aGlzLnRvb2x0aXBzPVtdfWlzVG9vbHRpcCgpe3JldHVybiEhdGhpcy5nbG9iYWxDb25maWcudG9vbHRpcH1sb2NrRm9ybSgpe2NvbnN0IGU9dGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dCwgdGV4dGFyZWEsIGJ1dHRvbiwgc2VsZWN0XCIpO2ZvcihsZXQgcj0wLHQ9ZS5sZW5ndGg7cjx0OysrcillW3JdLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsXCJkaXNhYmxlZFwiKSxlW3JdLnN0eWxlLnBvaW50ZXJFdmVudHM9XCJub25lXCIsZVtyXS5zdHlsZS53ZWJraXRGaWx0ZXI9XCJncmF5c2NhbGUoMTAwJSlcIixlW3JdLnN0eWxlLmZpbHRlcj1cImdyYXlzY2FsZSgxMDAlKVwifXVubG9ja0Zvcm0oKXtjb25zdCBlPXRoaXMuZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXQsIHRleHRhcmVhLCBidXR0b24sIHNlbGVjdFwiKTtmb3IobGV0IHI9MCx0PWUubGVuZ3RoO3I8dDsrK3IpZVtyXS5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSxlW3JdLnN0eWxlLnBvaW50ZXJFdmVudHM9XCJcIixlW3JdLnN0eWxlLndlYmtpdEZpbHRlcj1cIlwiLGVbcl0uc3R5bGUuZmlsdGVyPVwiXCJ9cmVuZGVyVG9vbHRpcChlLHIsdCl7dmFyIHk7Y29uc3R7dG9wOmksbGVmdDpzLHdpZHRoOmEsaGVpZ2h0Omx9PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksYz1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG09dHx8KCh5PXRoaXMuZ2xvYmFsQ29uZmlnLnRvb2x0aXApPT1udWxsP3ZvaWQgMDp5LnBvc2l0aW9uKTtzd2l0Y2gobSl7Y2FzZVwibGVmdFwiOntyLnN0eWxlLnRvcD1gJHtpK2wvMi1jLmhlaWdodC8yfXB4YCxyLnN0eWxlLmxlZnQ9YCR7cy1jLndpZHRoLUV9cHhgO2JyZWFrfWNhc2VcInRvcFwiOntyLnN0eWxlLnRvcD1gJHtpLWMuaGVpZ2h0LUV9cHhgLHIuc3R5bGUubGVmdD1gJHtzK2EvMi1jLndpZHRoLzJ9cHhgO2JyZWFrfWNhc2VcInJpZ2h0XCI6e3Iuc3R5bGUudG9wPWAke2krbC8yLWMuaGVpZ2h0LzJ9cHhgLHIuc3R5bGUubGVmdD1gJHtzK2ErRX1weGA7YnJlYWt9Y2FzZVwiYm90dG9tXCI6e3Iuc3R5bGUudG9wPWAke2krbCtFfXB4YCxyLnN0eWxlLmxlZnQ9YCR7cythLzItYy53aWR0aC8yfXB4YDticmVha319cmV0dXJuIHIuZGF0YXNldC5kaXJlY3Rpb249bSx7cmVmcmVzaDooKT0+e3RoaXMucmVuZGVyVG9vbHRpcChlLHIsdCl9fX1jcmVhdGVFcnJvckxhYmVsRWxlbShlLHIsdCl7Y29uc3QgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2kuaW5uZXJIVE1MPXI7Y29uc3Qgcz10aGlzLmlzVG9vbHRpcCgpP3Q9PW51bGw/dm9pZCAwOnQuZXJyb3JMYWJlbFN0eWxlOih0PT1udWxsP3ZvaWQgMDp0LmVycm9yTGFiZWxTdHlsZSl8fHRoaXMuZ2xvYmFsQ29uZmlnLmVycm9yTGFiZWxTdHlsZTtyZXR1cm4gT2JqZWN0LmFzc2lnbihpLnN0eWxlLHMpLGkuY2xhc3NMaXN0LmFkZCgodD09bnVsbD92b2lkIDA6dC5lcnJvckxhYmVsQ3NzQ2xhc3MpfHx0aGlzLmdsb2JhbENvbmZpZy5lcnJvckxhYmVsQ3NzQ2xhc3MsXCJqdXN0LXZhbGlkYXRlLWVycm9yLWxhYmVsXCIpLHRoaXMuaXNUb29sdGlwKCkmJihpLmRhdGFzZXQudG9vbHRpcD1cInRydWVcIiksdGhpcy5nbG9iYWxDb25maWcudGVzdGluZ01vZGUmJihpLmRhdGFzZXQudGVzdElkPWBlcnJvci1sYWJlbC0ke2V9YCksdGhpcy5lcnJvckxhYmVscy5wdXNoKGkpLGl9cmVuZGVyRXJyb3JzKCl7dmFyIGUscix0LGkscyxhLGwsYyxtLGsseSxUO2lmKCEhdGhpcy5pc1N1Ym1pdHRlZCl7dGhpcy5jbGVhckVycm9ycygpLHRoaXMuaXNWYWxpZD0hMDtmb3IoY29uc3QgRiBpbiB0aGlzLmdyb3VwRmllbGRzKXtjb25zdCBuPXRoaXMuZ3JvdXBGaWVsZHNbRl07aWYobi5pc1ZhbGlkKWNvbnRpbnVlO3RoaXMuaXNWYWxpZD0hMSxuLmVsZW1zLmZvckVhY2godz0+e3ZhciAkLEk7T2JqZWN0LmFzc2lnbih3LnN0eWxlLCgoJD1uLmNvbmZpZyk9PW51bGw/dm9pZCAwOiQuZXJyb3JGaWVsZFN0eWxlKXx8dGhpcy5nbG9iYWxDb25maWcuZXJyb3JGaWVsZFN0eWxlKSx3LmNsYXNzTGlzdC5hZGQoKChJPW4uY29uZmlnKT09bnVsbD92b2lkIDA6SS5lcnJvckZpZWxkQ3NzQ2xhc3MpfHx0aGlzLmdsb2JhbENvbmZpZy5lcnJvckZpZWxkQ3NzQ2xhc3MpfSk7Y29uc3QgYj10aGlzLmNyZWF0ZUVycm9yTGFiZWxFbGVtKEYsbi5lcnJvck1lc3NhZ2Usbi5jb25maWcpO24uZ3JvdXBFbGVtLmFwcGVuZENoaWxkKGIpLHRoaXMuaXNUb29sdGlwKCkmJnRoaXMudG9vbHRpcHMucHVzaCh0aGlzLnJlbmRlclRvb2x0aXAobi5ncm91cEVsZW0sYiwocj0oZT1uLmNvbmZpZyk9PW51bGw/dm9pZCAwOmUudG9vbHRpcCk9PW51bGw/dm9pZCAwOnIucG9zaXRpb24pKX1mb3IoY29uc3QgRiBpbiB0aGlzLmZpZWxkcyl7Y29uc3Qgbj10aGlzLmZpZWxkc1tGXTtpZihuLmlzVmFsaWQpY29udGludWU7dGhpcy5pc1ZhbGlkPSExLG4uZWxlbS5jbGFzc0xpc3QuYWRkKCgodD1uLmNvbmZpZyk9PW51bGw/dm9pZCAwOnQuZXJyb3JGaWVsZENzc0NsYXNzKXx8dGhpcy5nbG9iYWxDb25maWcuZXJyb3JGaWVsZENzc0NsYXNzKTtjb25zdCBiPXRoaXMuY3JlYXRlRXJyb3JMYWJlbEVsZW0oRixuLmVycm9yTWVzc2FnZSxuLmNvbmZpZyk7aWYobi5lbGVtLnR5cGU9PT1cImNoZWNrYm94XCJ8fG4uZWxlbS50eXBlPT09XCJyYWRpb1wiKXtjb25zdCB3PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGxhYmVsW2Zvcj1cIiR7bi5lbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpfVwiXWApOygocz0oaT1uLmVsZW0ucGFyZW50RWxlbWVudCk9PW51bGw/dm9pZCAwOmkudGFnTmFtZSk9PW51bGw/dm9pZCAwOnMudG9Mb3dlckNhc2UoKSk9PT1cImxhYmVsXCI/KGw9KGE9bi5lbGVtLnBhcmVudEVsZW1lbnQpPT1udWxsP3ZvaWQgMDphLnBhcmVudEVsZW1lbnQpPT1udWxsfHxsLmFwcGVuZENoaWxkKGIpOnc/KGM9dy5wYXJlbnRFbGVtZW50KT09bnVsbHx8Yy5hcHBlbmRDaGlsZChiKToobT1uLmVsZW0ucGFyZW50RWxlbWVudCk9PW51bGx8fG0uYXBwZW5kQ2hpbGQoYil9ZWxzZShrPW4uZWxlbS5wYXJlbnRFbGVtZW50KT09bnVsbHx8ay5hcHBlbmRDaGlsZChiKTt0aGlzLmlzVG9vbHRpcCgpJiZ0aGlzLnRvb2x0aXBzLnB1c2godGhpcy5yZW5kZXJUb29sdGlwKG4uZWxlbSxiLChUPSh5PW4uY29uZmlnKT09bnVsbD92b2lkIDA6eS50b29sdGlwKT09bnVsbD92b2lkIDA6VC5wb3NpdGlvbikpfX19ZGVzdHJveSgpe3RoaXMuZXZlbnRMaXN0ZW5lcnMuZm9yRWFjaChlPT57dGhpcy5yZW1vdmVMaXN0ZW5lcihlLnR5cGUsZS5lbGVtLGUuZnVuYyl9KSxPYmplY3Qua2V5cyh0aGlzLmN1c3RvbVN0eWxlVGFncykuZm9yRWFjaChlPT57dGhpcy5jdXN0b21TdHlsZVRhZ3NbZV0ucmVtb3ZlKCl9KSx0aGlzLmNsZWFyRXJyb3JzKCksdGhpcy5nbG9iYWxDb25maWcubG9ja0Zvcm0mJnRoaXMudW5sb2NrRm9ybSgpfXJlZnJlc2goKXt0aGlzLmRlc3Ryb3koKSx0aGlzLmZvcm0/KHRoaXMuaW5pdGlhbGl6ZSh0aGlzLmZvcm0sdGhpcy5nbG9iYWxDb25maWcpLE9iamVjdC5rZXlzKHRoaXMuZmllbGRzKS5mb3JFYWNoKGU9Pnt0aGlzLmFkZEZpZWxkKGUsWy4uLnRoaXMuZmllbGRzW2VdLnJ1bGVzXSx0aGlzLmZpZWxkc1tlXS5jb25maWcpfSkpOmNvbnNvbGUuZXJyb3IoXCJDYW5ub3QgaW5pdGlhbGl6ZSB0aGUgbGlicmFyeSEgRm9ybSBpcyBub3QgZGVmaW5lZFwiKX1zZXRDdXJyZW50TG9jYWxlKGUpe2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiJiZlIT09dm9pZCAwKXtjb25zb2xlLmVycm9yKFwiQ3VycmVudCBsb2NhbGUgc2hvdWxkIGJlIGEgc3RyaW5nXCIpO3JldHVybn10aGlzLmN1cnJlbnRMb2NhbGU9ZSx0aGlzLmlzU3VibWl0dGVkJiZ0aGlzLnZhbGlkYXRlKCl9b25TdWNjZXNzKGUpe3JldHVybiB0aGlzLm9uU3VjY2Vzc0NhbGxiYWNrPWUsdGhpc31vbkZhaWwoZSl7cmV0dXJuIHRoaXMub25GYWlsQ2FsbGJhY2s9ZSx0aGlzfX1yZXR1cm4gWn0pOyIsImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuICAvLyDQpNGD0L3QutGG0LjRjyB5bWFwcy5yZWFkeSgpINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAsINC60L7Qs9C00LBcclxuICAvLyDQt9Cw0LPRgNGD0LfRj9GC0YHRjyDQstGB0LUg0LrQvtC80L/QvtC90LXQvdGC0YsgQVBJLCDQsCDRgtCw0LrQttC1INC60L7Qs9C00LAg0LHRg9C00LXRgiDQs9C+0YLQvtCy0L4gRE9NLdC00LXRgNC10LLQvi5cclxuICB5bWFwcy5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbXlNYXAgPSBuZXcgeW1hcHMuTWFwKCdtYXAnLCB7XHJcbiAgICAgICAgICAgIGNlbnRlcjogWzU1Ljg5MzExMjA2ODg1MjQ5NiwzNy40ODQyOTg0OTk5OTk5N10sXHJcbiAgICAgICAgICAgIHpvb206IDE1XHJcbiAgICAgICAgfSwge1xyXG4gICAgICAgICAgICBzZWFyY2hDb250cm9sUHJvdmlkZXI6ICd5YW5kZXgjc2VhcmNoJ1xyXG4gICAgICAgIH0pLFxyXG5cclxuICAgICAgIFxyXG5cclxuICAgICAgICBteVBsYWNlbWFyayA9IG5ldyB5bWFwcy5QbGFjZW1hcmsobXlNYXAuZ2V0Q2VudGVyKCksIHtcclxuICAgICAgICAgICAgaGludENvbnRlbnQ6ICfQodC+0LHRgdGC0LLQtdC90L3Ri9C5INC30L3QsNGH0L7QuiDQvNC10YLQutC4JyxcclxuICAgICAgICAgICAgYmFsbG9vbkNvbnRlbnQ6ICfQrdGC0L4g0LrRgNCw0YHQuNCy0LDRjyDQvNC10YLQutCwJ1xyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgICAgLy8g0J7Qv9GG0LjQuC5cclxuICAgICAgICAgICAgLy8g0J3QtdC+0LHRhdC+0LTQuNC80L4g0YPQutCw0LfQsNGC0Ywg0LTQsNC90L3Ri9C5INGC0LjQvyDQvNCw0LrQtdGC0LAuXHJcbiAgICAgICAgICAgIGljb25MYXlvdXQ6ICdkZWZhdWx0I2ltYWdlJyxcclxuICAgICAgICAgICAgLy8g0KHQstC+0ZEg0LjQt9C+0LHRgNCw0LbQtdC90LjQtSDQuNC60L7QvdC60Lgg0LzQtdGC0LrQuC5cclxuICAgICAgICAgICAgaWNvbkltYWdlSHJlZjogJ2ltYWdlcy9sb2NhdGlvbi5wbmcnLFxyXG4gICAgICAgICAgICAvLyDQoNCw0LfQvNC10YDRiyDQvNC10YLQutC4LlxyXG4gICAgICAgICAgICBpY29uSW1hZ2VTaXplOiBbMzAsIDQyXSxcclxuICAgICAgICAgICAgLy8g0KHQvNC10YnQtdC90LjQtSDQu9C10LLQvtCz0L4g0LLQtdGA0YXQvdC10LPQviDRg9Cz0LvQsCDQuNC60L7QvdC60Lgg0L7RgtC90L7RgdC40YLQtdC70YzQvdC+XHJcbiAgICAgICAgICAgIC8vINC10ZEgXCLQvdC+0LbQutC4XCIgKNGC0L7Rh9C60Lgg0L/RgNC40LLRj9C30LrQuCkuXHJcbiAgICAgICAgICAgIGljb25JbWFnZU9mZnNldDogWy01LCAtMzhdXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICBcclxuICAgIG15TWFwLmdlb09iamVjdHNcclxuICAgICAgICAuYWRkKG15UGxhY2VtYXJrKVxyXG4gICAgICAgXHJcbn0pO1xyXG4gIH0pXHJcbiAgXHJcblxyXG5cclxuXHJcbiIsImxldCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYXJ0cy1jYXJkX19oaWRkZW5cIik7XG5sZXQgc2hvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2hvd0NvbnRlbnRcIik7XG5cbnNob3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb250ZW50LmNsYXNzTGlzdC50b2dnbGUoJ3BhcnRzLWNhcmRfX2hpZGRlbi0tdmlzaWJsZScpO1xuICAgIHNob3cuaW5uZXJUZXh0ID0gJ9Ch0LLQtdGA0L3Rg9GC0Ywg0LLRgdC1JztcblxuICAgIGlmIChzaG93LmlubmVyVGV4dD1cItCh0LLQtdGA0L3Rg9GC0Ywg0LLRgdC1XCIpe1xuICAgICAgICBzaG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHNob3cuaW5uZXJUZXh0ID0gJ9Cf0L7QutCw0LfQsNGC0Ywg0LLRgdC1JztcbiAgICAgICAgfVxuICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICk7XG4gICAgfVxufSlcblxuXG5cbiAgIFxuICIsIndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ2xvYWRlZF9oaWRpbmcnKTtcclxuICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdsb2FkZWQnKTtcclxuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkZWRfaGlkaW5nJyk7XHJcbiAgICB9LCA1MDApO1xyXG4gIH0iLCIvKiEgV09XIC0gdjEuMS4yIC0gMjAxNS0wOC0xOVxyXG4qIENvcHlyaWdodCAoYykgMjAxNSBNYXR0aGlldSBBdXNzYWd1ZWw7IExpY2Vuc2VkIE1JVCAqL1xyXG4oZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgYSwgYiwgYywgZCwgZSwgZiA9IGZ1bmN0aW9uKGEsIGIpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhLmFwcGx5KGIsIGFyZ3VtZW50cylcclxuICAgICAgICB9XHJcbiAgICB9LCBnID0gW10uaW5kZXhPZiB8fCBmdW5jdGlvbihhKSB7XHJcbiAgICAgICAgZm9yICh2YXIgYiA9IDAsIGMgPSB0aGlzLmxlbmd0aDsgYyA+IGI7IGIrKylcclxuICAgICAgICAgICAgaWYgKGIgaW4gdGhpcyAmJiB0aGlzW2JdID09PSBhKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGI7XHJcbiAgICAgICAgcmV0dXJuIC0xXHJcbiAgICB9XHJcbiAgICA7XHJcbiAgICBiID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgZnVuY3Rpb24gYSgpIHt9XHJcbiAgICAgICAgcmV0dXJuIGEucHJvdG90eXBlLmV4dGVuZCA9IGZ1bmN0aW9uKGEsIGIpIHtcclxuICAgICAgICAgICAgdmFyIGMsIGQ7XHJcbiAgICAgICAgICAgIGZvciAoYyBpbiBiKVxyXG4gICAgICAgICAgICAgICAgZCA9IGJbY10sXHJcbiAgICAgICAgICAgICAgICBudWxsID09IGFbY10gJiYgKGFbY10gPSBkKTtcclxuICAgICAgICAgICAgcmV0dXJuIGFcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGEucHJvdG90eXBlLmlzTW9iaWxlID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICByZXR1cm4gL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KGEpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBhLnByb3RvdHlwZS5jcmVhdGVFdmVudCA9IGZ1bmN0aW9uKGEsIGIsIGMsIGQpIHtcclxuICAgICAgICAgICAgdmFyIGU7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsID09IGIgJiYgKGIgPSAhMSksXHJcbiAgICAgICAgICAgIG51bGwgPT0gYyAmJiAoYyA9ICExKSxcclxuICAgICAgICAgICAgbnVsbCA9PSBkICYmIChkID0gbnVsbCksXHJcbiAgICAgICAgICAgIG51bGwgIT0gZG9jdW1lbnQuY3JlYXRlRXZlbnQgPyAoZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiQ3VzdG9tRXZlbnRcIiksXHJcbiAgICAgICAgICAgIGUuaW5pdEN1c3RvbUV2ZW50KGEsIGIsIGMsIGQpKSA6IG51bGwgIT0gZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QgPyAoZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50T2JqZWN0KCksXHJcbiAgICAgICAgICAgIGUuZXZlbnRUeXBlID0gYSkgOiBlLmV2ZW50TmFtZSA9IGEsXHJcbiAgICAgICAgICAgIGVcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGEucHJvdG90eXBlLmVtaXRFdmVudCA9IGZ1bmN0aW9uKGEsIGIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gYS5kaXNwYXRjaEV2ZW50ID8gYS5kaXNwYXRjaEV2ZW50KGIpIDogYiBpbiAobnVsbCAhPSBhKSA/IGFbYl0oKSA6IFwib25cIiArIGIgaW4gKG51bGwgIT0gYSkgPyBhW1wib25cIiArIGJdKCkgOiB2b2lkIDBcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGEucHJvdG90eXBlLmFkZEV2ZW50ID0gZnVuY3Rpb24oYSwgYiwgYykge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbCAhPSBhLmFkZEV2ZW50TGlzdGVuZXIgPyBhLmFkZEV2ZW50TGlzdGVuZXIoYiwgYywgITEpIDogbnVsbCAhPSBhLmF0dGFjaEV2ZW50ID8gYS5hdHRhY2hFdmVudChcIm9uXCIgKyBiLCBjKSA6IGFbYl0gPSBjXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBhLnByb3RvdHlwZS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKGEsIGIsIGMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gYS5yZW1vdmVFdmVudExpc3RlbmVyID8gYS5yZW1vdmVFdmVudExpc3RlbmVyKGIsIGMsICExKSA6IG51bGwgIT0gYS5kZXRhY2hFdmVudCA/IGEuZGV0YWNoRXZlbnQoXCJvblwiICsgYiwgYykgOiBkZWxldGUgYVtiXVxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgYS5wcm90b3R5cGUuaW5uZXJIZWlnaHQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFwiaW5uZXJIZWlnaHRcImluIHdpbmRvdyA/IHdpbmRvdy5pbm5lckhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHRcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGFcclxuICAgIH0oKSxcclxuICAgIGMgPSB0aGlzLldlYWtNYXAgfHwgdGhpcy5Nb3pXZWFrTWFwIHx8IChjID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgZnVuY3Rpb24gYSgpIHtcclxuICAgICAgICAgICAgdGhpcy5rZXlzID0gW10sXHJcbiAgICAgICAgICAgIHRoaXMudmFsdWVzID0gW11cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGEucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGEpIHtcclxuICAgICAgICAgICAgdmFyIGIsIGMsIGQsIGUsIGY7XHJcbiAgICAgICAgICAgIGZvciAoZiA9IHRoaXMua2V5cyxcclxuICAgICAgICAgICAgYiA9IGQgPSAwLFxyXG4gICAgICAgICAgICBlID0gZi5sZW5ndGg7IGUgPiBkOyBiID0gKytkKVxyXG4gICAgICAgICAgICAgICAgaWYgKGMgPSBmW2JdLFxyXG4gICAgICAgICAgICAgICAgYyA9PT0gYSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZXNbYl1cclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGEucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKGEsIGIpIHtcclxuICAgICAgICAgICAgdmFyIGMsIGQsIGUsIGYsIGc7XHJcbiAgICAgICAgICAgIGZvciAoZyA9IHRoaXMua2V5cyxcclxuICAgICAgICAgICAgYyA9IGUgPSAwLFxyXG4gICAgICAgICAgICBmID0gZy5sZW5ndGg7IGYgPiBlOyBjID0gKytlKVxyXG4gICAgICAgICAgICAgICAgaWYgKGQgPSBnW2NdLFxyXG4gICAgICAgICAgICAgICAgZCA9PT0gYSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdm9pZCAodGhpcy52YWx1ZXNbY10gPSBiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMua2V5cy5wdXNoKGEpLFxyXG4gICAgICAgICAgICB0aGlzLnZhbHVlcy5wdXNoKGIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBhXHJcbiAgICB9KCkpLFxyXG4gICAgYSA9IHRoaXMuTXV0YXRpb25PYnNlcnZlciB8fCB0aGlzLldlYmtpdE11dGF0aW9uT2JzZXJ2ZXIgfHwgdGhpcy5Nb3pNdXRhdGlvbk9ic2VydmVyIHx8IChhID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgZnVuY3Rpb24gYSgpIHtcclxuICAgICAgICAgICAgXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgY29uc29sZSAmJiBudWxsICE9PSBjb25zb2xlICYmIGNvbnNvbGUud2FybihcIk11dGF0aW9uT2JzZXJ2ZXIgaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIGJyb3dzZXIuXCIpLFxyXG4gICAgICAgICAgICBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBjb25zb2xlICYmIG51bGwgIT09IGNvbnNvbGUgJiYgY29uc29sZS53YXJuKFwiV09XLmpzIGNhbm5vdCBkZXRlY3QgZG9tIG11dGF0aW9ucywgcGxlYXNlIGNhbGwgLnN5bmMoKSBhZnRlciBsb2FkaW5nIG5ldyBjb250ZW50LlwiKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYS5ub3RTdXBwb3J0ZWQgPSAhMCxcclxuICAgICAgICBhLnByb3RvdHlwZS5vYnNlcnZlID0gZnVuY3Rpb24oKSB7fVxyXG4gICAgICAgICxcclxuICAgICAgICBhXHJcbiAgICB9KCkpLFxyXG4gICAgZCA9IHRoaXMuZ2V0Q29tcHV0ZWRTdHlsZSB8fCBmdW5jdGlvbihhKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZSA9IGZ1bmN0aW9uKGIpIHtcclxuICAgICAgICAgICAgdmFyIGM7XHJcbiAgICAgICAgICAgIHJldHVybiBcImZsb2F0XCIgPT09IGIgJiYgKGIgPSBcInN0eWxlRmxvYXRcIiksXHJcbiAgICAgICAgICAgIGUudGVzdChiKSAmJiBiLnJlcGxhY2UoZSwgZnVuY3Rpb24oYSwgYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGIudG9VcHBlckNhc2UoKVxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgKG51bGwgIT0gKGMgPSBhLmN1cnJlbnRTdHlsZSkgPyBjW2JdIDogdm9pZCAwKSB8fCBudWxsXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICB0aGlzXHJcbiAgICB9XHJcbiAgICAsXHJcbiAgICBlID0gLyhcXC0oW2Etel0pezF9KS9nLFxyXG4gICAgdGhpcy5XT1cgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBmdW5jdGlvbiBlKGEpIHtcclxuICAgICAgICAgICAgbnVsbCA9PSBhICYmIChhID0ge30pLFxyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbENhbGxiYWNrID0gZih0aGlzLnNjcm9sbENhbGxiYWNrLCB0aGlzKSxcclxuICAgICAgICAgICAgdGhpcy5zY3JvbGxIYW5kbGVyID0gZih0aGlzLnNjcm9sbEhhbmRsZXIsIHRoaXMpLFxyXG4gICAgICAgICAgICB0aGlzLnJlc2V0QW5pbWF0aW9uID0gZih0aGlzLnJlc2V0QW5pbWF0aW9uLCB0aGlzKSxcclxuICAgICAgICAgICAgdGhpcy5zdGFydCA9IGYodGhpcy5zdGFydCwgdGhpcyksXHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsZWQgPSAhMCxcclxuICAgICAgICAgICAgdGhpcy5jb25maWcgPSB0aGlzLnV0aWwoKS5leHRlbmQoYSwgdGhpcy5kZWZhdWx0cyksXHJcbiAgICAgICAgICAgIG51bGwgIT0gYS5zY3JvbGxDb250YWluZXIgJiYgKHRoaXMuY29uZmlnLnNjcm9sbENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYS5zY3JvbGxDb250YWluZXIpKSxcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25OYW1lQ2FjaGUgPSBuZXcgYyxcclxuICAgICAgICAgICAgdGhpcy53b3dFdmVudCA9IHRoaXMudXRpbCgpLmNyZWF0ZUV2ZW50KHRoaXMuY29uZmlnLmJveENsYXNzKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZS5wcm90b3R5cGUuZGVmYXVsdHMgPSB7XHJcbiAgICAgICAgICAgIGJveENsYXNzOiBcIndvd1wiLFxyXG4gICAgICAgICAgICBhbmltYXRlQ2xhc3M6IFwiYW5pbWF0ZWRcIixcclxuICAgICAgICAgICAgb2Zmc2V0OiAwLFxyXG4gICAgICAgICAgICBtb2JpbGU6ICEwLFxyXG4gICAgICAgICAgICBsaXZlOiAhMCxcclxuICAgICAgICAgICAgY2FsbGJhY2s6IG51bGwsXHJcbiAgICAgICAgICAgIHNjcm9sbENvbnRhaW5lcjogbnVsbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgYTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudCA9IHdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXHJcbiAgICAgICAgICAgIFwiaW50ZXJhY3RpdmVcIiA9PT0gKGEgPSBkb2N1bWVudC5yZWFkeVN0YXRlKSB8fCBcImNvbXBsZXRlXCIgPT09IGEgPyB0aGlzLnN0YXJ0KCkgOiB0aGlzLnV0aWwoKS5hZGRFdmVudChkb2N1bWVudCwgXCJET01Db250ZW50TG9hZGVkXCIsIHRoaXMuc3RhcnQpLFxyXG4gICAgICAgICAgICB0aGlzLmZpbmlzaGVkID0gW11cclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHZhciBiLCBjLCBkLCBlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdG9wcGVkID0gITEsXHJcbiAgICAgICAgICAgIHRoaXMuYm94ZXMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhLCBjLCBkLCBlO1xyXG4gICAgICAgICAgICAgICAgZm9yIChkID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyB0aGlzLmNvbmZpZy5ib3hDbGFzcyksXHJcbiAgICAgICAgICAgICAgICBlID0gW10sXHJcbiAgICAgICAgICAgICAgICBhID0gMCxcclxuICAgICAgICAgICAgICAgIGMgPSBkLmxlbmd0aDsgYyA+IGE7IGErKylcclxuICAgICAgICAgICAgICAgICAgICBiID0gZFthXSxcclxuICAgICAgICAgICAgICAgICAgICBlLnB1c2goYik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jYWxsKHRoaXMpLFxyXG4gICAgICAgICAgICB0aGlzLmFsbCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGEsIGMsIGQsIGU7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGQgPSB0aGlzLmJveGVzLFxyXG4gICAgICAgICAgICAgICAgZSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgYSA9IDAsXHJcbiAgICAgICAgICAgICAgICBjID0gZC5sZW5ndGg7IGMgPiBhOyBhKyspXHJcbiAgICAgICAgICAgICAgICAgICAgYiA9IGRbYV0sXHJcbiAgICAgICAgICAgICAgICAgICAgZS5wdXNoKGIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuY2FsbCh0aGlzKSxcclxuICAgICAgICAgICAgdGhpcy5ib3hlcy5sZW5ndGgpXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCgpKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXRTdHlsZSgpO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGZvciAoZSA9IHRoaXMuYm94ZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgYyA9IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgZCA9IGUubGVuZ3RoOyBkID4gYzsgYysrKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBiID0gZVtjXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBseVN0eWxlKGIsICEwKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGlzYWJsZWQoKSB8fCAodGhpcy51dGlsKCkuYWRkRXZlbnQodGhpcy5jb25maWcuc2Nyb2xsQ29udGFpbmVyIHx8IHdpbmRvdywgXCJzY3JvbGxcIiwgdGhpcy5zY3JvbGxIYW5kbGVyKSxcclxuICAgICAgICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQod2luZG93LCBcInJlc2l6ZVwiLCB0aGlzLnNjcm9sbEhhbmRsZXIpLFxyXG4gICAgICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwodGhpcy5zY3JvbGxDYWxsYmFjaywgNTApKSxcclxuICAgICAgICAgICAgdGhpcy5jb25maWcubGl2ZSA/IG5ldyBhKGZ1bmN0aW9uKGEpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMsIGQsIGUsIGYsIGc7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChnID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgYyA9IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgZCA9IGIubGVuZ3RoOyBkID4gYzsgYysrKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmID0gYltjXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZy5wdXNoKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEsIGIsIGMsIGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGMgPSBmLmFkZGVkTm9kZXMgfHwgW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhID0gMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGIgPSBjLmxlbmd0aDsgYiA+IGE7IGErKylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlID0gY1thXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkLnB1c2godGhpcy5kb1N5bmMoZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2FsbChhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSh0aGlzKSkub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCB7XHJcbiAgICAgICAgICAgICAgICBjaGlsZExpc3Q6ICEwLFxyXG4gICAgICAgICAgICAgICAgc3VidHJlZTogITBcclxuICAgICAgICAgICAgfSkgOiB2b2lkIDBcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcHBlZCA9ICEwLFxyXG4gICAgICAgICAgICB0aGlzLnV0aWwoKS5yZW1vdmVFdmVudCh0aGlzLmNvbmZpZy5zY3JvbGxDb250YWluZXIgfHwgd2luZG93LCBcInNjcm9sbFwiLCB0aGlzLnNjcm9sbEhhbmRsZXIpLFxyXG4gICAgICAgICAgICB0aGlzLnV0aWwoKS5yZW1vdmVFdmVudCh3aW5kb3csIFwicmVzaXplXCIsIHRoaXMuc2Nyb2xsSGFuZGxlciksXHJcbiAgICAgICAgICAgIG51bGwgIT0gdGhpcy5pbnRlcnZhbCA/IGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCkgOiB2b2lkIDBcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnN5bmMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGEubm90U3VwcG9ydGVkID8gdGhpcy5kb1N5bmModGhpcy5lbGVtZW50KSA6IHZvaWQgMFxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgZS5wcm90b3R5cGUuZG9TeW5jID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICB2YXIgYiwgYywgZCwgZSwgZjtcclxuICAgICAgICAgICAgaWYgKG51bGwgPT0gYSAmJiAoYSA9IHRoaXMuZWxlbWVudCksXHJcbiAgICAgICAgICAgIDEgPT09IGEubm9kZVR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGZvciAoYSA9IGEucGFyZW50Tm9kZSB8fCBhLFxyXG4gICAgICAgICAgICAgICAgZSA9IGEucXVlcnlTZWxlY3RvckFsbChcIi5cIiArIHRoaXMuY29uZmlnLmJveENsYXNzKSxcclxuICAgICAgICAgICAgICAgIGYgPSBbXSxcclxuICAgICAgICAgICAgICAgIGMgPSAwLFxyXG4gICAgICAgICAgICAgICAgZCA9IGUubGVuZ3RoOyBkID4gYzsgYysrKVxyXG4gICAgICAgICAgICAgICAgICAgIGIgPSBlW2NdLFxyXG4gICAgICAgICAgICAgICAgICAgIGcuY2FsbCh0aGlzLmFsbCwgYikgPCAwID8gKHRoaXMuYm94ZXMucHVzaChiKSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbC5wdXNoKGIpLFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RvcHBlZCB8fCB0aGlzLmRpc2FibGVkKCkgPyB0aGlzLnJlc2V0U3R5bGUoKSA6IHRoaXMuYXBwbHlTdHlsZShiLCAhMCksXHJcbiAgICAgICAgICAgICAgICAgICAgZi5wdXNoKHRoaXMuc2Nyb2xsZWQgPSAhMCkpIDogZi5wdXNoKHZvaWQgMCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcHBseVN0eWxlKGEpLFxyXG4gICAgICAgICAgICBhLmNsYXNzTmFtZSA9IGEuY2xhc3NOYW1lICsgXCIgXCIgKyB0aGlzLmNvbmZpZy5hbmltYXRlQ2xhc3MsXHJcbiAgICAgICAgICAgIG51bGwgIT0gdGhpcy5jb25maWcuY2FsbGJhY2sgJiYgdGhpcy5jb25maWcuY2FsbGJhY2soYSksXHJcbiAgICAgICAgICAgIHRoaXMudXRpbCgpLmVtaXRFdmVudChhLCB0aGlzLndvd0V2ZW50KSxcclxuICAgICAgICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQoYSwgXCJhbmltYXRpb25lbmRcIiwgdGhpcy5yZXNldEFuaW1hdGlvbiksXHJcbiAgICAgICAgICAgIHRoaXMudXRpbCgpLmFkZEV2ZW50KGEsIFwib2FuaW1hdGlvbmVuZFwiLCB0aGlzLnJlc2V0QW5pbWF0aW9uKSxcclxuICAgICAgICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQoYSwgXCJ3ZWJraXRBbmltYXRpb25FbmRcIiwgdGhpcy5yZXNldEFuaW1hdGlvbiksXHJcbiAgICAgICAgICAgIHRoaXMudXRpbCgpLmFkZEV2ZW50KGEsIFwiTVNBbmltYXRpb25FbmRcIiwgdGhpcy5yZXNldEFuaW1hdGlvbiksXHJcbiAgICAgICAgICAgIGFcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLmFwcGx5U3R5bGUgPSBmdW5jdGlvbihhLCBiKSB7XHJcbiAgICAgICAgICAgIHZhciBjLCBkLCBlO1xyXG4gICAgICAgICAgICByZXR1cm4gZCA9IGEuZ2V0QXR0cmlidXRlKFwiZGF0YS13b3ctZHVyYXRpb25cIiksXHJcbiAgICAgICAgICAgIGMgPSBhLmdldEF0dHJpYnV0ZShcImRhdGEtd293LWRlbGF5XCIpLFxyXG4gICAgICAgICAgICBlID0gYS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdvdy1pdGVyYXRpb25cIiksXHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0ZShmdW5jdGlvbihmKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGYuY3VzdG9tU3R5bGUoYSwgYiwgZCwgYywgZSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSh0aGlzKSlcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLmFuaW1hdGUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFwicmVxdWVzdEFuaW1hdGlvbkZyYW1lXCJpbiB3aW5kb3cgPyBmdW5jdGlvbihhKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShhKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIDogZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGEoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSgpLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnJlc2V0U3R5bGUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGEsIGIsIGMsIGQsIGU7XHJcbiAgICAgICAgICAgIGZvciAoZCA9IHRoaXMuYm94ZXMsXHJcbiAgICAgICAgICAgIGUgPSBbXSxcclxuICAgICAgICAgICAgYiA9IDAsXHJcbiAgICAgICAgICAgIGMgPSBkLmxlbmd0aDsgYyA+IGI7IGIrKylcclxuICAgICAgICAgICAgICAgIGEgPSBkW2JdLFxyXG4gICAgICAgICAgICAgICAgZS5wdXNoKGEuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGVcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnJlc2V0QW5pbWF0aW9uID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICB2YXIgYjtcclxuICAgICAgICAgICAgcmV0dXJuIGEudHlwZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCJhbmltYXRpb25lbmRcIikgPj0gMCA/IChiID0gYS50YXJnZXQgfHwgYS5zcmNFbGVtZW50LFxyXG4gICAgICAgICAgICBiLmNsYXNzTmFtZSA9IGIuY2xhc3NOYW1lLnJlcGxhY2UodGhpcy5jb25maWcuYW5pbWF0ZUNsYXNzLCBcIlwiKS50cmltKCkpIDogdm9pZCAwXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlLnByb3RvdHlwZS5jdXN0b21TdHlsZSA9IGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGIgJiYgdGhpcy5jYWNoZUFuaW1hdGlvbk5hbWUoYSksXHJcbiAgICAgICAgICAgIGEuc3R5bGUudmlzaWJpbGl0eSA9IGIgPyBcImhpZGRlblwiIDogXCJ2aXNpYmxlXCIsXHJcbiAgICAgICAgICAgIGMgJiYgdGhpcy52ZW5kb3JTZXQoYS5zdHlsZSwge1xyXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGNcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIGQgJiYgdGhpcy52ZW5kb3JTZXQoYS5zdHlsZSwge1xyXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGRcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIGUgJiYgdGhpcy52ZW5kb3JTZXQoYS5zdHlsZSwge1xyXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IGVcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIHRoaXMudmVuZG9yU2V0KGEuc3R5bGUsIHtcclxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbk5hbWU6IGIgPyBcIm5vbmVcIiA6IHRoaXMuY2FjaGVkQW5pbWF0aW9uTmFtZShhKVxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgYVxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgZS5wcm90b3R5cGUudmVuZG9ycyA9IFtcIm1velwiLCBcIndlYmtpdFwiXSxcclxuICAgICAgICBlLnByb3RvdHlwZS52ZW5kb3JTZXQgPSBmdW5jdGlvbihhLCBiKSB7XHJcbiAgICAgICAgICAgIHZhciBjLCBkLCBlLCBmO1xyXG4gICAgICAgICAgICBkID0gW107XHJcbiAgICAgICAgICAgIGZvciAoYyBpbiBiKVxyXG4gICAgICAgICAgICAgICAgZSA9IGJbY10sXHJcbiAgICAgICAgICAgICAgICBhW1wiXCIgKyBjXSA9IGUsXHJcbiAgICAgICAgICAgICAgICBkLnB1c2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGIsIGQsIGcsIGg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChnID0gdGhpcy52ZW5kb3JzLFxyXG4gICAgICAgICAgICAgICAgICAgIGggPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICBiID0gMCxcclxuICAgICAgICAgICAgICAgICAgICBkID0gZy5sZW5ndGg7IGQgPiBiOyBiKyspXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGYgPSBnW2JdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoLnB1c2goYVtcIlwiICsgZiArIGMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjLnN1YnN0cigxKV0gPSBlKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLmNhbGwodGhpcykpO1xyXG4gICAgICAgICAgICByZXR1cm4gZFxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgZS5wcm90b3R5cGUudmVuZG9yQ1NTID0gZnVuY3Rpb24oYSwgYikge1xyXG4gICAgICAgICAgICB2YXIgYywgZSwgZiwgZywgaCwgaTtcclxuICAgICAgICAgICAgZm9yIChoID0gZChhKSxcclxuICAgICAgICAgICAgZyA9IGguZ2V0UHJvcGVydHlDU1NWYWx1ZShiKSxcclxuICAgICAgICAgICAgZiA9IHRoaXMudmVuZG9ycyxcclxuICAgICAgICAgICAgYyA9IDAsXHJcbiAgICAgICAgICAgIGUgPSBmLmxlbmd0aDsgZSA+IGM7IGMrKylcclxuICAgICAgICAgICAgICAgIGkgPSBmW2NdLFxyXG4gICAgICAgICAgICAgICAgZyA9IGcgfHwgaC5nZXRQcm9wZXJ0eUNTU1ZhbHVlKFwiLVwiICsgaSArIFwiLVwiICsgYik7XHJcbiAgICAgICAgICAgIHJldHVybiBnXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlLnByb3RvdHlwZS5hbmltYXRpb25OYW1lID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICB2YXIgYjtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGIgPSB0aGlzLnZlbmRvckNTUyhhLCBcImFuaW1hdGlvbi1uYW1lXCIpLmNzc1RleHRcclxuICAgICAgICAgICAgfSBjYXRjaCAoYykge1xyXG4gICAgICAgICAgICAgICAgYiA9IGQoYSkuZ2V0UHJvcGVydHlWYWx1ZShcImFuaW1hdGlvbi1uYW1lXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFwibm9uZVwiID09PSBiID8gXCJcIiA6IGJcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLmNhY2hlQW5pbWF0aW9uTmFtZSA9IGZ1bmN0aW9uKGEpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYW5pbWF0aW9uTmFtZUNhY2hlLnNldChhLCB0aGlzLmFuaW1hdGlvbk5hbWUoYSkpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlLnByb3RvdHlwZS5jYWNoZWRBbmltYXRpb25OYW1lID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hbmltYXRpb25OYW1lQ2FjaGUuZ2V0KGEpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlLnByb3RvdHlwZS5zY3JvbGxIYW5kbGVyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNjcm9sbGVkID0gITBcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnNjcm9sbENhbGxiYWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHZhciBhO1xyXG4gICAgICAgICAgICByZXR1cm4gIXRoaXMuc2Nyb2xsZWQgfHwgKHRoaXMuc2Nyb2xsZWQgPSAhMSxcclxuICAgICAgICAgICAgdGhpcy5ib3hlcyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGIsIGMsIGQsIGU7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGQgPSB0aGlzLmJveGVzLFxyXG4gICAgICAgICAgICAgICAgZSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgYiA9IDAsXHJcbiAgICAgICAgICAgICAgICBjID0gZC5sZW5ndGg7IGMgPiBiOyBiKyspXHJcbiAgICAgICAgICAgICAgICAgICAgYSA9IGRbYl0sXHJcbiAgICAgICAgICAgICAgICAgICAgYSAmJiAodGhpcy5pc1Zpc2libGUoYSkgPyB0aGlzLnNob3coYSkgOiBlLnB1c2goYSkpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuY2FsbCh0aGlzKSxcclxuICAgICAgICAgICAgdGhpcy5ib3hlcy5sZW5ndGggfHwgdGhpcy5jb25maWcubGl2ZSkgPyB2b2lkIDAgOiB0aGlzLnN0b3AoKVxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgZS5wcm90b3R5cGUub2Zmc2V0VG9wID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBiOyB2b2lkIDAgPT09IGEub2Zmc2V0VG9wOyApXHJcbiAgICAgICAgICAgICAgICBhID0gYS5wYXJlbnROb2RlO1xyXG4gICAgICAgICAgICBmb3IgKGIgPSBhLm9mZnNldFRvcDsgYSA9IGEub2Zmc2V0UGFyZW50OyApXHJcbiAgICAgICAgICAgICAgICBiICs9IGEub2Zmc2V0VG9wO1xyXG4gICAgICAgICAgICByZXR1cm4gYlxyXG4gICAgICAgIH1cclxuICAgICAgICAsXHJcbiAgICAgICAgZS5wcm90b3R5cGUuaXNWaXNpYmxlID0gZnVuY3Rpb24oYSkge1xyXG4gICAgICAgICAgICB2YXIgYiwgYywgZCwgZSwgZjtcclxuICAgICAgICAgICAgcmV0dXJuIGMgPSBhLmdldEF0dHJpYnV0ZShcImRhdGEtd293LW9mZnNldFwiKSB8fCB0aGlzLmNvbmZpZy5vZmZzZXQsXHJcbiAgICAgICAgICAgIGYgPSB0aGlzLmNvbmZpZy5zY3JvbGxDb250YWluZXIgJiYgdGhpcy5jb25maWcuc2Nyb2xsQ29udGFpbmVyLnNjcm9sbFRvcCB8fCB3aW5kb3cucGFnZVlPZmZzZXQsXHJcbiAgICAgICAgICAgIGUgPSBmICsgTWF0aC5taW4odGhpcy5lbGVtZW50LmNsaWVudEhlaWdodCwgdGhpcy51dGlsKCkuaW5uZXJIZWlnaHQoKSkgLSBjLFxyXG4gICAgICAgICAgICBkID0gdGhpcy5vZmZzZXRUb3AoYSksXHJcbiAgICAgICAgICAgIGIgPSBkICsgYS5jbGllbnRIZWlnaHQsXHJcbiAgICAgICAgICAgIGUgPj0gZCAmJiBiID49IGZcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLnV0aWwgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gdGhpcy5fdXRpbCA/IHRoaXMuX3V0aWwgOiB0aGlzLl91dGlsID0gbmV3IGJcclxuICAgICAgICB9XHJcbiAgICAgICAgLFxyXG4gICAgICAgIGUucHJvdG90eXBlLmRpc2FibGVkID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAhdGhpcy5jb25maWcubW9iaWxlICYmIHRoaXMudXRpbCgpLmlzTW9iaWxlKG5hdmlnYXRvci51c2VyQWdlbnQpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICxcclxuICAgICAgICBlXHJcbiAgICB9KClcclxufVxyXG4pLmNhbGwodGhpcyk7XHJcbiIsImNvbnN0IG9iaiA9IHt9O1xuY29uc3QgcHJvcCA9IG9iaj8ucHJvcDtcbmNvbnNvbGUubG9nKHByb3ApOyJdfQ==
